{"id":"953dd561d8c817b48ea341772bea72bf","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// Copyright (c) 2021 the ethier authors (github.com/divergencetech/ethier)\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n/**\n@title SignatureChecker\n@notice Additional functions for EnumerableSet.Addresset that require a valid\nECDSA signature of a standardized message, signed by any member of the set.\n */\nlibrary SignatureChecker {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /**\n    @notice Requires that the message has not been used previously and that the\n    recovered signer is contained in the signers AddressSet.\n    @dev Convenience wrapper for message generation + signature verification\n    + marking message as used\n    @param signers Set of addresses from which signatures are accepted.\n    @param usedMessages Set of already-used messages.\n    @param signature ECDSA signature of message.\n     */\n    function requireValidSignature(\n        EnumerableSet.AddressSet storage signers,\n        bytes memory data,\n        bytes calldata signature,\n        mapping(bytes32 => bool) storage usedMessages\n    ) internal {\n        bytes32 message = generateMessage(data);\n        require(\n            !usedMessages[message],\n            \"SignatureChecker: Message already used\"\n        );\n        usedMessages[message] = true;\n        requireValidSignature(signers, message, signature);\n    }\n\n    /**\n    @notice Requires that the message has not been used previously and that the\n    recovered signer is contained in the signers AddressSet.\n    @dev Convenience wrapper for message generation + signature verification.\n     */\n    function requireValidSignature(\n        EnumerableSet.AddressSet storage signers,\n        bytes memory data,\n        bytes calldata signature\n    ) internal view {\n        bytes32 message = generateMessage(data);\n        requireValidSignature(signers, message, signature);\n    }\n\n    /**\n    @notice Requires that the message has not been used previously and that the\n    recovered signer is contained in the signers AddressSet.\n    @dev Convenience wrapper for message generation from address +\n    signature verification.\n     */\n    function requireValidSignature(\n        EnumerableSet.AddressSet storage signers,\n        address a,\n        bytes calldata signature\n    ) internal view {\n        bytes32 message = generateMessage(abi.encodePacked(a));\n        requireValidSignature(signers, message, signature);\n    }\n\n    /**\n    @notice Common validator logic, checking if the recovered signer is\n    contained in the signers AddressSet.\n    */\n    function validSignature(\n        EnumerableSet.AddressSet storage signers,\n        bytes32 message,\n        bytes calldata signature\n    ) internal view returns (bool) {\n        return signers.contains(ECDSA.recover(message, signature));\n    }\n\n    /**\n    @notice Requires that the recovered signer is contained in the signers\n    AddressSet.\n    @dev Convenience wrapper that reverts if the signature validation fails.\n    */\n    function requireValidSignature(\n        EnumerableSet.AddressSet storage signers,\n        bytes32 message,\n        bytes calldata signature\n    ) internal view {\n        require(\n            validSignature(signers, message, signature),\n            \"SignatureChecker: Invalid signature\"\n        );\n    }\n\n    /**\n    @notice Generates a message for a given data input that will be signed\n    off-chain using ECDSA.\n    @dev For multiple data fields, a standard concatenation using \n    `abi.encodePacked` is commonly used to build data.\n     */\n    function generateMessage(bytes memory data)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return ECDSA.toEthSignedMessageHash(data);\n    }\n}\n"},"@divergencetech/ethier/contracts/crypto/SignerManager.sol":{"content":"// SPDX-License-Identifier: MIT\n// Copyright (c) 2022 the ethier authors (github.com/divergencetech/ethier)\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n/**\n@title SignerManager\n@notice Manges addition and removal of a core set of addresses from which\nvalid ECDSA signatures can be accepted; see SignatureChecker.\n */\ncontract SignerManager is Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /**\n    @dev Addresses from which signatures can be accepted.\n     */\n    EnumerableSet.AddressSet internal signers;\n\n    /**\n    @notice Add an address to the set of accepted signers.\n     */\n    function addSigner(address signer) external onlyOwner {\n        signers.add(signer);\n    }\n\n    /**\n    @notice Remove an address previously added with addSigner().\n     */\n    function removeSigner(address signer) external onlyOwner {\n        signers.remove(signer);\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/Claim.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\n/**\n * Created on 2023-05-24 01:00\n * @Summary A smart contract that let users claim referral rewards\n * @title Claim\n * @author: Overlay - c-n-o-t-e\n */\n\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@divergencetech/ethier/contracts/crypto/SignerManager.sol\";\nimport \"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol\";\n\n\nerror Claim_Exceeded_Daily_Claiming_Limit();\nerror Claim_Contract_Does_Not_Have_Enough_Tokens();\n\ncontract Claim is ReentrancyGuard, SignerManager {\n    using SignatureChecker for EnumerableSet.AddressSet;\n    using SafeERC20 for IERC20;\n\n    mapping(bytes32 => bool) private usedMessages;\n\n    IERC20 public token;\n\n    uint256 public maxDailyClaim;\n    uint256 private totalDailyClaimed;\n    uint256 private lastResetTimestamp;\n\n    constructor(address _tokenAddress, uint256 _maxDailyClaim) {\n        token = IERC20(_tokenAddress);\n        lastResetTimestamp = block.timestamp;\n        maxDailyClaim = _maxDailyClaim;\n    }\n\n    function setMaxDailyClaim(uint256 _maxDailyClaim) external onlyOwner {\n        maxDailyClaim = _maxDailyClaim;\n    }\n\n    function claimToken(\n        bytes32 _nonce,\n        bytes memory _data,\n        bytes calldata _signature\n    ) external nonReentrant{\n        uint256 currentTimestamp = block.timestamp;\n\n        // Check if 24 hours have passed since the last reset\n        if (lastResetTimestamp + 24 hours < currentTimestamp) {\n            // Reset the total daily withdrawal amount\n            totalDailyClaimed = 0;\n            lastResetTimestamp = currentTimestamp;\n        }\n\n        // Verify the signature\n        signers.requireValidSignature(\n            abi.encodePacked(_data, _nonce),\n            _signature,\n            usedMessages\n        );\n\n        (uint256 amount, address recipient) = abi.decode(\n            _data,\n            (uint256, address)\n        );\n\n        if (totalDailyClaimed + amount > maxDailyClaim)\n            revert Claim_Exceeded_Daily_Claiming_Limit();\n\n        if (token.balanceOf(address(this)) < amount)\n            revert Claim_Contract_Does_Not_Have_Enough_Tokens();\n\n        totalDailyClaimed += amount;\n\n        token.safeTransfer(recipient, amount);\n    }\n\n    function withdrawToken(\n        address _recipient,\n        uint256 _amount\n    ) external onlyOwner {\n        if (token.balanceOf(address(this)) < _amount)\n            revert Claim_Contract_Does_Not_Have_Enough_Tokens();\n\n        token.safeTransfer(_recipient, _amount);\n    }\n}\n"},"contracts/DemoToken.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\ncontract DemoToken is AccessControlEnumerable, ERC20(\"Demo\", \"DD\") {\n    constructor() {\n        _mint(msg.sender, 1000000000000000000000);\n    }\n}\n"},"contracts/HelpfulInterface.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ninterface HelpfulInterface {\n    function build(\n        uint256 collateral,\n        uint256 leverage,\n        bool isLong,\n        uint256 priceLimit\n    ) external;\n\n    function factory() external view returns (address);\n\n    function params(uint256 idx) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function notional(\n        address _address,\n        address sender,\n        uint id\n    ) external view returns (uint);\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Build(\n        address indexed sender, // address that initiated build (owns position)\n        uint256 positionId, // id of built position\n        uint256 oi, // oi of position at build\n        uint256 debt, // debt of position at build\n        bool isLong, // whether is long or short\n        uint256 price // entry price\n    );\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol":{"ast":{"absolutePath":"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol","exportedSymbols":{"ECDSA":[2972],"EnumerableSet":[4592],"Math":[3874],"SignatureChecker":[160],"SignedMath":[3979],"Strings":[2606]},"id":161,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"108:31:0"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":161,"sourceUnit":2973,"src":"141:62:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":161,"sourceUnit":4593,"src":"204:65:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"271:185:0","text":"@title SignatureChecker\n@notice Additional functions for EnumerableSet.Addresset that require a valid\nECDSA signature of a standardized message, signed by any member of the set."},"fullyImplemented":true,"id":160,"linearizedBaseContracts":[160],"name":"SignatureChecker","nameLocation":"465:16:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8,"libraryName":{"id":5,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"494:13:0"},"nodeType":"UsingForDirective","src":"488:49:0","typeName":{"id":7,"nodeType":"UserDefinedTypeName","pathNode":{"id":6,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"512:24:0"},"referencedDeclaration":4305,"src":"512:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"body":{"id":49,"nodeType":"Block","src":"1194:271:0","statements":[{"assignments":[24],"declarations":[{"constant":false,"id":24,"mutability":"mutable","name":"message","nameLocation":"1212:7:0","nodeType":"VariableDeclaration","scope":49,"src":"1204:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1204:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":28,"initialValue":{"arguments":[{"id":26,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1238:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":25,"name":"generateMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1222:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1222:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1204:39:0"},{"expression":{"arguments":[{"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1274:22:0","subExpression":{"baseExpression":{"id":30,"name":"usedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1275:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":32,"indexExpression":{"id":31,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1288:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1275:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6174757265436865636b65723a204d65737361676520616c72656164792075736564","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1310:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa","typeString":"literal_string \"SignatureChecker: Message already used\""},"value":"SignatureChecker: Message already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa","typeString":"literal_string \"SignatureChecker: Message already used\""}],"id":29,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1253:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1253:107:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1253:107:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":37,"name":"usedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1370:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":39,"indexExpression":{"id":38,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1383:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1370:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1394:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1370:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42,"nodeType":"ExpressionStatement","src":"1370:28:0"},{"expression":{"arguments":[{"id":44,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1430:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":45,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1439:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":46,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1448:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":43,"name":"requireValidSignature","nodeType":"Identifier","overloadedDeclarations":[50,74,101,145],"referencedDeclaration":145,"src":"1408:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,bytes32,bytes calldata) view"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1408:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1408:50:0"}]},"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"543:434:0","text":"@notice Requires that the message has not been used previously and that the\nrecovered signer is contained in the signers AddressSet.\n@dev Convenience wrapper for message generation + signature verification\n+ marking message as used\n@param signers Set of addresses from which signatures are accepted.\n@param usedMessages Set of already-used messages.\n@param signature ECDSA signature of message."},"id":50,"implemented":true,"kind":"function","modifiers":[],"name":"requireValidSignature","nameLocation":"991:21:0","nodeType":"FunctionDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"signers","nameLocation":"1055:7:0","nodeType":"VariableDeclaration","scope":50,"src":"1022:40:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"1022:24:0"},"referencedDeclaration":4305,"src":"1022:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"data","nameLocation":"1085:4:0","nodeType":"VariableDeclaration","scope":50,"src":"1072:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"1072:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"signature","nameLocation":"1114:9:0","nodeType":"VariableDeclaration","scope":50,"src":"1099:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15,"name":"bytes","nodeType":"ElementaryTypeName","src":"1099:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"usedMessages","nameLocation":"1166:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1133:45:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":19,"keyType":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1141:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1133:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":18,"name":"bool","nodeType":"ElementaryTypeName","src":"1152:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"src":"1012:172:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1194:0:0"},"scope":160,"src":"982:483:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":73,"nodeType":"Block","src":"1868:116:0","statements":[{"assignments":[62],"declarations":[{"constant":false,"id":62,"mutability":"mutable","name":"message","nameLocation":"1886:7:0","nodeType":"VariableDeclaration","scope":73,"src":"1878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1878:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":66,"initialValue":{"arguments":[{"id":64,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":63,"name":"generateMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1896:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1896:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1878:39:0"},{"expression":{"arguments":[{"id":68,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1949:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":69,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1958:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":70,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1967:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":67,"name":"requireValidSignature","nodeType":"Identifier","overloadedDeclarations":[50,74,101,145],"referencedDeclaration":145,"src":"1927:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,bytes32,bytes calldata) view"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1927:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":72,"nodeType":"ExpressionStatement","src":"1927:50:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1471:230:0","text":"@notice Requires that the message has not been used previously and that the\nrecovered signer is contained in the signers AddressSet.\n@dev Convenience wrapper for message generation + signature verification."},"id":74,"implemented":true,"kind":"function","modifiers":[],"name":"requireValidSignature","nameLocation":"1715:21:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"signers","nameLocation":"1779:7:0","nodeType":"VariableDeclaration","scope":74,"src":"1746:40:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":53,"nodeType":"UserDefinedTypeName","pathNode":{"id":52,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"1746:24:0"},"referencedDeclaration":4305,"src":"1746:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"data","nameLocation":"1809:4:0","nodeType":"VariableDeclaration","scope":74,"src":"1796:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"signature","nameLocation":"1838:9:0","nodeType":"VariableDeclaration","scope":74,"src":"1823:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1823:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1736:117:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1868:0:0"},"scope":160,"src":"1706:278:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":100,"nodeType":"Block","src":"2396:131:0","statements":[{"assignments":[86],"declarations":[{"constant":false,"id":86,"mutability":"mutable","name":"message","nameLocation":"2414:7:0","nodeType":"VariableDeclaration","scope":100,"src":"2406:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":85,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2406:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":93,"initialValue":{"arguments":[{"arguments":[{"id":90,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2457:1:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":88,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2440:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":89,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2440:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2440:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":87,"name":"generateMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2424:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2424:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2406:54:0"},{"expression":{"arguments":[{"id":95,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2492:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":96,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2501:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":97,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2510:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":94,"name":"requireValidSignature","nodeType":"Identifier","overloadedDeclarations":[50,74,101,145],"referencedDeclaration":145,"src":"2470:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,bytes32,bytes calldata) view"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2470:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2470:50:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1990:247:0","text":"@notice Requires that the message has not been used previously and that the\nrecovered signer is contained in the signers AddressSet.\n@dev Convenience wrapper for message generation from address +\nsignature verification."},"id":101,"implemented":true,"kind":"function","modifiers":[],"name":"requireValidSignature","nameLocation":"2251:21:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"signers","nameLocation":"2315:7:0","nodeType":"VariableDeclaration","scope":101,"src":"2282:40:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":77,"nodeType":"UserDefinedTypeName","pathNode":{"id":76,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"2282:24:0"},"referencedDeclaration":4305,"src":"2282:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"a","nameLocation":"2340:1:0","nodeType":"VariableDeclaration","scope":101,"src":"2332:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"signature","nameLocation":"2366:9:0","nodeType":"VariableDeclaration","scope":101,"src":"2351:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":81,"name":"bytes","nodeType":"ElementaryTypeName","src":"2351:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2272:109:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"2396:0:0"},"scope":160,"src":"2242:285:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2829:75:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":118,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":119,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2886:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":116,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"2863:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2972_$","typeString":"type(library ECDSA)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2733,"src":"2863:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2863:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":114,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2846:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"2846:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2846:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":113,"id":122,"nodeType":"Return","src":"2839:58:0"}]},"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"2533:123:0","text":"@notice Common validator logic, checking if the recovered signer is\ncontained in the signers AddressSet."},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"validSignature","nameLocation":"2670:14:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"signers","nameLocation":"2727:7:0","nodeType":"VariableDeclaration","scope":124,"src":"2694:40:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":104,"nodeType":"UserDefinedTypeName","pathNode":{"id":103,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"2694:24:0"},"referencedDeclaration":4305,"src":"2694:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"message","nameLocation":"2752:7:0","nodeType":"VariableDeclaration","scope":124,"src":"2744:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2744:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"signature","nameLocation":"2784:9:0","nodeType":"VariableDeclaration","scope":124,"src":"2769:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":108,"name":"bytes","nodeType":"ElementaryTypeName","src":"2769:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2684:115:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2823:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"2823:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2822:6:0"},"scope":160,"src":"2661:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"3253:142:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":137,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3299:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":138,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3308:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"3317:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":136,"name":"validSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"3284:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,bytes32,bytes calldata) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3284:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6174757265436865636b65723a20496e76616c6964207369676e6174757265","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3341:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5","typeString":"literal_string \"SignatureChecker: Invalid signature\""},"value":"SignatureChecker: Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5","typeString":"literal_string \"SignatureChecker: Invalid signature\""}],"id":135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3263:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3263:125:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"3263:125:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2910:178:0","text":"@notice Requires that the recovered signer is contained in the signers\nAddressSet.\n@dev Convenience wrapper that reverts if the signature validation fails."},"id":145,"implemented":true,"kind":"function","modifiers":[],"name":"requireValidSignature","nameLocation":"3102:21:0","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"signers","nameLocation":"3166:7:0","nodeType":"VariableDeclaration","scope":145,"src":"3133:40:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"3133:24:0"},"referencedDeclaration":4305,"src":"3133:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"message","nameLocation":"3191:7:0","nodeType":"VariableDeclaration","scope":145,"src":"3183:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3183:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"signature","nameLocation":"3223:9:0","nodeType":"VariableDeclaration","scope":145,"src":"3208:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":131,"name":"bytes","nodeType":"ElementaryTypeName","src":"3208:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3123:115:0"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"3253:0:0"},"scope":160,"src":"3093:302:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":158,"nodeType":"Block","src":"3745:58:0","statements":[{"expression":{"arguments":[{"id":155,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"3791:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":153,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3762:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2972_$","typeString":"type(library ECDSA)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2939,"src":"3762:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3762:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":152,"id":157,"nodeType":"Return","src":"3755:41:0"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"3401:235:0","text":"@notice Generates a message for a given data input that will be signed\noff-chain using ECDSA.\n@dev For multiple data fields, a standard concatenation using \n`abi.encodePacked` is commonly used to build data."},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"generateMessage","nameLocation":"3650:15:0","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"data","nameLocation":"3679:4:0","nodeType":"VariableDeclaration","scope":159,"src":"3666:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":147,"name":"bytes","nodeType":"ElementaryTypeName","src":"3666:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3665:19:0"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"3732:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3732:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3731:9:0"},"scope":160,"src":"3641:162:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":161,"src":"457:3348:0","usedErrors":[]}],"src":"108:3698:0"},"id":0},"@divergencetech/ethier/contracts/crypto/SignerManager.sol":{"ast":{"absolutePath":"@divergencetech/ethier/contracts/crypto/SignerManager.sol","exportedSymbols":{"Context":[2377],"EnumerableSet":[4592],"Ownable":[858],"SignerManager":[206]},"id":207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":162,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"108:31:1"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":207,"sourceUnit":859,"src":"141:52:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":207,"sourceUnit":4593,"src":"194:65:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":166,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":858,"src":"452:7:1"},"id":167,"nodeType":"InheritanceSpecifier","src":"452:7:1"}],"canonicalName":"SignerManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"261:164:1","text":"@title SignerManager\n@notice Manges addition and removal of a core set of addresses from which\nvalid ECDSA signatures can be accepted; see SignatureChecker."},"fullyImplemented":true,"id":206,"linearizedBaseContracts":[206,858,2377],"name":"SignerManager","nameLocation":"435:13:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":171,"libraryName":{"id":168,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"472:13:1"},"nodeType":"UsingForDirective","src":"466:49:1","typeName":{"id":170,"nodeType":"UserDefinedTypeName","pathNode":{"id":169,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"490:24:1"},"referencedDeclaration":4305,"src":"490:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"521:69:1","text":"@dev Addresses from which signatures can be accepted."},"id":175,"mutability":"mutable","name":"signers","nameLocation":"629:7:1","nodeType":"VariableDeclaration","scope":206,"src":"595:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":174,"nodeType":"UserDefinedTypeName","pathNode":{"id":173,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"595:24:1"},"referencedDeclaration":4305,"src":"595:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"772:36:1","statements":[{"expression":{"arguments":[{"id":186,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"794:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":183,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"782:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4332,"src":"782:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4305_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"782:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"782:19:1"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"643:70:1","text":"@notice Add an address to the set of accepted signers."},"functionSelector":"eb12d61e","id":190,"implemented":true,"kind":"function","modifiers":[{"id":181,"kind":"modifierInvocation","modifierName":{"id":180,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"762:9:1"},"nodeType":"ModifierInvocation","src":"762:9:1"}],"name":"addSigner","nameLocation":"727:9:1","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"signer","nameLocation":"745:6:1","nodeType":"VariableDeclaration","scope":190,"src":"737:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:16:1"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"772:0:1"},"scope":206,"src":"718:90:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":204,"nodeType":"Block","src":"952:39:1","statements":[{"expression":{"arguments":[{"id":201,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"977:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":198,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"962:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4359,"src":"962:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4305_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"962:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":203,"nodeType":"ExpressionStatement","src":"962:22:1"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"814:76:1","text":"@notice Remove an address previously added with addSigner()."},"functionSelector":"0e316ab7","id":205,"implemented":true,"kind":"function","modifiers":[{"id":196,"kind":"modifierInvocation","modifierName":{"id":195,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"942:9:1"},"nodeType":"ModifierInvocation","src":"942:9:1"}],"name":"removeSigner","nameLocation":"904:12:1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"signer","nameLocation":"925:6:1","nodeType":"VariableDeclaration","scope":205,"src":"917:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:16:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"952:0:1"},"scope":206,"src":"895:96:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":207,"src":"426:567:1","usedErrors":[]}],"src":"108:886:1"},"id":1},"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[522],"Context":[2377],"ERC165":[2996],"IAccessControl":[720],"IERC165":[3008],"Math":[3874],"SignedMath":[3979],"Strings":[2606]},"id":523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":208,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":523,"sourceUnit":721,"src":"133:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":523,"sourceUnit":2378,"src":"164:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":523,"sourceUnit":2607,"src":"195:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":523,"sourceUnit":2997,"src":"226:43:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":214,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2377,"src":"1967:7:2"},"id":215,"nodeType":"InheritanceSpecifier","src":"1967:7:2"},{"baseName":{"id":216,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":720,"src":"1976:14:2"},"id":217,"nodeType":"InheritanceSpecifier","src":"1976:14:2"},{"baseName":{"id":218,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2996,"src":"1992:6:2"},"id":219,"nodeType":"InheritanceSpecifier","src":"1992:6:2"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"271:1660:2","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":522,"linearizedBaseContracts":[522,2996,3008,720,2377],"name":"AccessControl","nameLocation":"1950:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":226,"members":[{"constant":false,"id":223,"mutability":"mutable","name":"members","nameLocation":"2056:7:2","nodeType":"VariableDeclaration","scope":226,"src":"2031:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":222,"keyType":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:2","nodeType":"VariableDeclaration","scope":226,"src":"2073:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:2","nodeType":"StructDefinition","scope":522,"src":"2005:92:2","visibility":"public"},{"constant":false,"id":231,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:2","nodeType":"VariableDeclaration","scope":522,"src":"2103:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":230,"keyType":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":229,"nodeType":"UserDefinedTypeName","pathNode":{"id":228,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":226,"src":"2122:8:2"},"referencedDeclaration":226,"src":"2122:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":234,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:2","nodeType":"VariableDeclaration","scope":522,"src":"2153:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":244,"nodeType":"Block","src":"2621:44:2","statements":[{"expression":{"arguments":[{"id":240,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2642:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":239,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[299,338],"referencedDeclaration":299,"src":"2631:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"2631:16:2"},{"id":243,"nodeType":"PlaceholderStatement","src":"2657:1:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"2209:375:2","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":245,"name":"onlyRole","nameLocation":"2598:8:2","nodeType":"ModifierDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"role","nameLocation":"2615:4:2","nodeType":"VariableDeclaration","scope":245,"src":"2607:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:2"},"src":"2589:76:2","virtual":false,"visibility":"internal"},{"baseFunctions":[2995],"body":{"id":266,"nodeType":"Block","src":"2823:111:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2840:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":256,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"2860:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$720_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$720_$","typeString":"type(contract IAccessControl)"}],"id":255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$720","typeString":"type(contract IAccessControl)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":262,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2915:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":260,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$522_$","typeString":"type(contract super AccessControl)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"2891:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":253,"id":265,"nodeType":"Return","src":"2833:94:2"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"2671:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":267,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:2","nodeType":"FunctionDefinition","overrides":{"id":250,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:2"},"parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:2","nodeType":"VariableDeclaration","scope":267,"src":"2759:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":247,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"2817:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":251,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:2"},"scope":522,"src":"2732:202:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[687],"body":{"id":285,"nodeType":"Block","src":"3113:53:2","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":278,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3130:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":280,"indexExpression":{"id":279,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3137:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":223,"src":"3130:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":283,"indexExpression":{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3151:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":277,"id":284,"nodeType":"Return","src":"3123:36:2"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2940:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":286,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:2","nodeType":"FunctionDefinition","overrides":{"id":274,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:2"},"parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"role","nameLocation":"3046:4:2","nodeType":"VariableDeclaration","scope":286,"src":"3038:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"account","nameLocation":"3060:7:2","nodeType":"VariableDeclaration","scope":286,"src":"3052:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"3107:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:2"},"scope":522,"src":"3021:145:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":298,"nodeType":"Block","src":"3516:47:2","statements":[{"expression":{"arguments":[{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3537:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3543:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":292,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[299,338],"referencedDeclaration":338,"src":"3526:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"3526:30:2"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3172:283:2","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"role","nameLocation":"3488:4:2","nodeType":"VariableDeclaration","scope":299,"src":"3480:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:2"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"3516:0:2"},"scope":522,"src":"3460:103:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"3917:406:2","statements":[{"condition":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:2","subExpression":{"arguments":[{"id":308,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3940:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":309,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3946:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":307,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3932:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"3927:390:2","trueBody":{"id":335,"nodeType":"Block","src":"3956:361:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":320,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4135:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":318,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"4115:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2606_$","typeString":"type(library Strings)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2580,"src":"4115:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":327,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4242:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:2","typeDescriptions":{}}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":323,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"4214:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2606_$","typeString":"type(library Strings)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"4214:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":313,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:2","typeDescriptions":{}}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":312,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"3970:336:2"}]}}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3569:270:2","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"role","nameLocation":"3872:4:2","nodeType":"VariableDeclaration","scope":338,"src":"3864:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"account","nameLocation":"3886:7:2","nodeType":"VariableDeclaration","scope":338,"src":"3878:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:2"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3917:0:2"},"scope":522,"src":"3844:479:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[695],"body":{"id":352,"nodeType":"Block","src":"4587:46:2","statements":[{"expression":{"expression":{"baseExpression":{"id":347,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"4604:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":349,"indexExpression":{"id":348,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4611:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":225,"src":"4604:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":346,"id":351,"nodeType":"Return","src":"4597:29:2"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"4329:170:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:2","nodeType":"FunctionDefinition","overrides":{"id":343,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:2"},"parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"role","nameLocation":"4534:4:2","nodeType":"VariableDeclaration","scope":353,"src":"4526:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:2"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"4578:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:2"},"scope":522,"src":"4504:129:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[703],"body":{"id":372,"nodeType":"Block","src":"5032:42:2","statements":[{"expression":{"arguments":[{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5053:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5059:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":367,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5042:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"ExpressionStatement","src":"5042:25:2"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"4639:285:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":373,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":363,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5025:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":362,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5012:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":365,"kind":"modifierInvocation","modifierName":{"id":361,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"5003:8:2"},"nodeType":"ModifierInvocation","src":"5003:28:2"}],"name":"grantRole","nameLocation":"4938:9:2","nodeType":"FunctionDefinition","overrides":{"id":360,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:2"},"parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"4956:4:2","nodeType":"VariableDeclaration","scope":373,"src":"4948:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"4970:7:2","nodeType":"VariableDeclaration","scope":373,"src":"4962:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:2"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"5032:0:2"},"scope":522,"src":"4929:145:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[711],"body":{"id":392,"nodeType":"Block","src":"5458:43:2","statements":[{"expression":{"arguments":[{"id":388,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5480:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5486:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5468:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"5468:26:2"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"5080:269:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":383,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5451:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":382,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5438:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":385,"kind":"modifierInvocation","modifierName":{"id":381,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"5429:8:2"},"nodeType":"ModifierInvocation","src":"5429:28:2"}],"name":"revokeRole","nameLocation":"5363:10:2","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:2"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"role","nameLocation":"5382:4:2","nodeType":"VariableDeclaration","scope":393,"src":"5374:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"account","nameLocation":"5396:7:2","nodeType":"VariableDeclaration","scope":393,"src":"5388:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"5458:0:2"},"scope":522,"src":"5354:147:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[719],"body":{"id":415,"nodeType":"Block","src":"6115:137:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6133:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":404,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6144:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"6125:83:2"},{"expression":{"arguments":[{"id":411,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6231:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6237:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":410,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"6219:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6219:26:2"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"5507:526:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":416,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:2","nodeType":"FunctionDefinition","overrides":{"id":400,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:2"},"parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"role","nameLocation":"6068:4:2","nodeType":"VariableDeclaration","scope":416,"src":"6060:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"account","nameLocation":"6082:7:2","nodeType":"VariableDeclaration","scope":416,"src":"6074:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6115:0:2"},"scope":522,"src":"6038:214:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":429,"nodeType":"Block","src":"7005:42:2","statements":[{"expression":{"arguments":[{"id":425,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7026:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":426,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"7032:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"7015:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"7015:25:2"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"6258:674:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":430,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"role","nameLocation":"6965:4:2","nodeType":"VariableDeclaration","scope":430,"src":"6957:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"account","nameLocation":"6979:7:2","nodeType":"VariableDeclaration","scope":430,"src":"6971:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"7005:0:2"},"scope":522,"src":"6937:110:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"7245:174:2","statements":[{"assignments":[439],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:2","nodeType":"VariableDeclaration","scope":457,"src":"7255:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"id":441,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7296:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":440,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"7283:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:2"},{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":444,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"7311:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":446,"indexExpression":{"id":445,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7318:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":225,"src":"7311:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":448,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7336:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":450,"nodeType":"ExpressionStatement","src":"7311:34:2"},{"eventCall":{"arguments":[{"id":452,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7377:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":453,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7383:17:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":454,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7402:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":451,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7360:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7355:57:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"7053:114:2","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:2","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"role","nameLocation":"7203:4:2","nodeType":"VariableDeclaration","scope":458,"src":"7195:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:2","nodeType":"VariableDeclaration","scope":458,"src":"7209:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:2"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"7245:0:2"},"scope":522,"src":"7172:247:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"7655:165:2","statements":[{"condition":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:2","subExpression":{"arguments":[{"id":467,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7678:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7684:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":466,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7670:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":488,"nodeType":"IfStatement","src":"7665:149:2","trueBody":{"id":487,"nodeType":"Block","src":"7694:120:2","statements":[{"expression":{"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":471,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"7708:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":473,"indexExpression":{"id":472,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7715:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":223,"src":"7708:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":476,"indexExpression":{"id":475,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7729:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":479,"nodeType":"ExpressionStatement","src":"7708:36:2"},{"eventCall":{"arguments":[{"id":481,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7775:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7781:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7790:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":480,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7763:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"EmitStatement","src":"7758:45:2"}]}}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7425:157:2","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:2","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"role","nameLocation":"7615:4:2","nodeType":"VariableDeclaration","scope":490,"src":"7607:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"account","nameLocation":"7629:7:2","nodeType":"VariableDeclaration","scope":490,"src":"7621:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7655:0:2"},"scope":522,"src":"7587:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":520,"nodeType":"Block","src":"8060:165:2","statements":[{"condition":{"arguments":[{"id":499,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8082:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":500,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8088:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8074:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":519,"nodeType":"IfStatement","src":"8070:149:2","trueBody":{"id":518,"nodeType":"Block","src":"8098:121:2","statements":[{"expression":{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":502,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"8112:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$226_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":504,"indexExpression":{"id":503,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8119:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$226_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":223,"src":"8112:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":507,"indexExpression":{"id":506,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8133:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":510,"nodeType":"ExpressionStatement","src":"8112:37:2"},{"eventCall":{"arguments":[{"id":512,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8180:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":513,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8186:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":514,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"8195:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":511,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8168:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"8163:45:2"}]}}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"7826:160:2","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"role","nameLocation":"8020:4:2","nodeType":"VariableDeclaration","scope":521,"src":"8012:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"account","nameLocation":"8034:7:2","nodeType":"VariableDeclaration","scope":521,"src":"8026:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"8060:0:2"},"scope":522,"src":"7991:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":523,"src":"1932:6295:2","usedErrors":[]}],"src":"108:8120:2"},"id":2},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[522],"AccessControlEnumerable":[647],"Context":[2377],"ERC165":[2996],"EnumerableSet":[4592],"IAccessControl":[720],"IAccessControlEnumerable":[745],"IERC165":[3008],"Math":[3874],"SignedMath":[3979],"Strings":[2606]},"id":648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":524,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":648,"sourceUnit":746,"src":"143:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":648,"sourceUnit":523,"src":"184:29:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":648,"sourceUnit":4593,"src":"214:44:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":529,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":745,"src":"400:24:3"},"id":530,"nodeType":"InheritanceSpecifier","src":"400:24:3"},{"baseName":{"id":531,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":522,"src":"426:13:3"},"id":532,"nodeType":"InheritanceSpecifier","src":"426:13:3"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"260:94:3","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":647,"linearizedBaseContracts":[647,522,2996,3008,745,720,2377],"name":"AccessControlEnumerable","nameLocation":"373:23:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":536,"libraryName":{"id":533,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"452:13:3"},"nodeType":"UsingForDirective","src":"446:49:3","typeName":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"470:24:3"},"referencedDeclaration":4305,"src":"470:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":541,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:3","nodeType":"VariableDeclaration","scope":647,"src":"501:65:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":540,"keyType":{"id":537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":539,"nodeType":"UserDefinedTypeName","pathNode":{"id":538,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"520:24:3"},"referencedDeclaration":4305,"src":"520:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[267],"body":{"id":562,"nodeType":"Block","src":"725:121:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"742:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":552,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"762:24:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$745_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$745_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$745","typeString":"type(contract IAccessControlEnumerable)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":558,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"827:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":556,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$647_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":267,"src":"803:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":549,"id":561,"nodeType":"Return","src":"735:104:3"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"573:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":563,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:3","nodeType":"FunctionDefinition","overrides":{"id":546,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:3"},"parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:3","nodeType":"VariableDeclaration","scope":563,"src":"661:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":543,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"719:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":547,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:3"},"scope":647,"src":"634:212:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[736],"body":{"id":581,"nodeType":"Block","src":"1530:52:3","statements":[{"expression":{"arguments":[{"id":578,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1569:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":574,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1547:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":576,"indexExpression":{"id":575,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1560:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4428,"src":"1547:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":573,"id":580,"nodeType":"Return","src":"1540:35:3"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"852:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:3","nodeType":"FunctionDefinition","overrides":{"id":570,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:3"},"parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"role","nameLocation":"1462:4:3","nodeType":"VariableDeclaration","scope":582,"src":"1454:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"index","nameLocation":"1476:5:3","nodeType":"VariableDeclaration","scope":582,"src":"1468:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:3"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"1521:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:3"},"scope":647,"src":"1431:151:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":597,"nodeType":"Block","src":"1839:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":591,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1856:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":593,"indexExpression":{"id":592,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"1869:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4401,"src":"1856:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4305_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":590,"id":596,"nodeType":"Return","src":"1849:34:3"}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1588:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":598,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:3","nodeType":"FunctionDefinition","overrides":{"id":587,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:3"},"parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"role","nameLocation":"1786:4:3","nodeType":"VariableDeclaration","scope":598,"src":"1778:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:3"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"1830:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:3"},"scope":647,"src":"1750:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[490],"body":{"id":621,"nodeType":"Block","src":"2055:89:3","statements":[{"expression":{"arguments":[{"id":610,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2082:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":611,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2088:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":607,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$647_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":490,"src":"2065:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"2065:31:3"},{"expression":{"arguments":[{"id":618,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2129:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":614,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2106:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":616,"indexExpression":{"id":615,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2119:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4332,"src":"2106:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4305_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"ExpressionStatement","src":"2106:31:3"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"1896:77:3","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:3","nodeType":"FunctionDefinition","overrides":{"id":605,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:3"},"parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"role","nameLocation":"2006:4:3","nodeType":"VariableDeclaration","scope":622,"src":"1998:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"account","nameLocation":"2020:7:3","nodeType":"VariableDeclaration","scope":622,"src":"2012:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"2055:0:3"},"scope":647,"src":"1978:166:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[521],"body":{"id":645,"nodeType":"Block","src":"2311:93:3","statements":[{"expression":{"arguments":[{"id":634,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2339:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2345:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":631,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$647_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":521,"src":"2321:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"2321:32:3"},{"expression":{"arguments":[{"id":642,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2389:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":638,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2363:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4305_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":640,"indexExpression":{"id":639,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4359,"src":"2363:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4305_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"ExpressionStatement","src":"2363:34:3"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"2150:78:3","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:3","nodeType":"FunctionDefinition","overrides":{"id":629,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:3"},"parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"role","nameLocation":"2262:4:3","nodeType":"VariableDeclaration","scope":646,"src":"2254:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"account","nameLocation":"2276:7:3","nodeType":"VariableDeclaration","scope":646,"src":"2268:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:3"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"2311:0:3"},"scope":647,"src":"2233:171:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":648,"src":"355:2051:3","usedErrors":[]}],"src":"118:2289:3"},"id":3},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[720]},"id":721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":649,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"119:89:4","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":720,"linearizedBaseContracts":[720],"name":"IAccessControl","nameLocation":"219:14:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"240:292:4","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":659,"name":"RoleAdminChanged","nameLocation":"543:16:4","nodeType":"EventDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:4","nodeType":"VariableDeclaration","scope":659,"src":"560:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:4","nodeType":"VariableDeclaration","scope":659,"src":"582:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:4","nodeType":"VariableDeclaration","scope":659,"src":"617:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:4"},"src":"537:110:4"},{"anonymous":false,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"653:212:4","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":668,"name":"RoleGranted","nameLocation":"876:11:4","nodeType":"EventDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:4","nodeType":"VariableDeclaration","scope":668,"src":"888:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":664,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:4","nodeType":"VariableDeclaration","scope":668,"src":"910:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:4","nodeType":"VariableDeclaration","scope":668,"src":"935:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:4"},"src":"870:89:4"},{"anonymous":false,"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"965:275:4","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":677,"name":"RoleRevoked","nameLocation":"1251:11:4","nodeType":"EventDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:4","nodeType":"VariableDeclaration","scope":677,"src":"1263:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":673,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:4","nodeType":"VariableDeclaration","scope":677,"src":"1285:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:4","nodeType":"VariableDeclaration","scope":677,"src":"1310:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:4"},"src":"1245:89:4"},{"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"1340:76:4","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:4","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"role","nameLocation":"1446:4:4","nodeType":"VariableDeclaration","scope":687,"src":"1438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"account","nameLocation":"1460:7:4","nodeType":"VariableDeclaration","scope":687,"src":"1452:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"1492:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:4"},"scope":720,"src":"1421:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"1504:184:4","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":695,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:4","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"role","nameLocation":"1723:4:4","nodeType":"VariableDeclaration","scope":695,"src":"1715:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:4"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":695,"src":"1752:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:4"},"scope":720,"src":"1693:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"1767:239:4","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:4","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"role","nameLocation":"2038:4:4","nodeType":"VariableDeclaration","scope":703,"src":"2030:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"account","nameLocation":"2052:7:4","nodeType":"VariableDeclaration","scope":703,"src":"2044:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:4"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"2069:0:4"},"scope":720,"src":"2011:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"2076:223:4","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:4","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"role","nameLocation":"2332:4:4","nodeType":"VariableDeclaration","scope":711,"src":"2324:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"account","nameLocation":"2346:7:4","nodeType":"VariableDeclaration","scope":711,"src":"2338:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:4"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"2363:0:4"},"scope":720,"src":"2304:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"2370:480:4","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":719,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:4","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"role","nameLocation":"2885:4:4","nodeType":"VariableDeclaration","scope":719,"src":"2877:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"account","nameLocation":"2899:7:4","nodeType":"VariableDeclaration","scope":719,"src":"2891:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"2916:0:4"},"scope":720,"src":"2855:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":721,"src":"209:2710:4","usedErrors":[]}],"src":"94:2826:4"},"id":4},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[720],"IAccessControlEnumerable":[745]},"id":746,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":722,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:5"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":746,"sourceUnit":721,"src":"129:30:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":725,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":720,"src":"299:14:5"},"id":726,"nodeType":"InheritanceSpecifier","src":"299:14:5"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"161:99:5","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":745,"linearizedBaseContracts":[745,720],"name":"IAccessControlEnumerable","nameLocation":"271:24:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"320:574:5","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":736,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:5","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"role","nameLocation":"930:4:5","nodeType":"VariableDeclaration","scope":736,"src":"922:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"index","nameLocation":"944:5:5","nodeType":"VariableDeclaration","scope":736,"src":"936:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:5"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"974:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:5"},"scope":745,"src":"899:84:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"989:157:5","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:5","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"role","nameLocation":"1187:4:5","nodeType":"VariableDeclaration","scope":744,"src":"1179:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:5"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1216:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:5"},"scope":745,"src":"1151:74:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":746,"src":"261:966:5","usedErrors":[]}],"src":"104:1124:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2377],"Ownable":[858]},"id":859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":747,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":748,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":859,"sourceUnit":2378,"src":"127:30:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":750,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2377,"src":"683:7:6"},"id":751,"nodeType":"InheritanceSpecifier","src":"683:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"159:494:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":858,"linearizedBaseContracts":[858,2377],"name":"Ownable","nameLocation":"672:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":753,"mutability":"mutable","name":"_owner","nameLocation":"713:6:6","nodeType":"VariableDeclaration","scope":858,"src":"697:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":759,"name":"OwnershipTransferred","nameLocation":"732:20:6","nodeType":"EventDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:6","nodeType":"VariableDeclaration","scope":759,"src":"753:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:6","nodeType":"VariableDeclaration","scope":759,"src":"784:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:6"},"src":"726:84:6"},{"body":{"id":768,"nodeType":"Block","src":"926:49:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":764,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"955:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":763,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"936:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"936:32:6"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"816:91:6","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":769,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"923:2:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"926:0:6"},"scope":858,"src":"912:63:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"1084:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":772,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1094:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"ExpressionStatement","src":"1094:13:6"},{"id":775,"nodeType":"PlaceholderStatement","src":"1117:1:6"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"981:77:6","text":" @dev Throws if called by any account other than the owner."},"id":777,"name":"onlyOwner","nameLocation":"1072:9:6","nodeType":"ModifierDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"1081:2:6"},"src":"1063:62:6","virtual":false,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"1256:30:6","statements":[{"expression":{"id":783,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"1273:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":782,"id":784,"nodeType":"Return","src":"1266:13:6"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"1131:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:6","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"1215:2:6"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"1247:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:6"},"scope":858,"src":"1201:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":799,"nodeType":"Block","src":"1404:85:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1422:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":793,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1433:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"1414:68:6"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"1292:62:6","text":" @dev Throws if the sender is not the owner."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:6","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"1379:2:6"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"1404:0:6"},"scope":858,"src":"1359:130:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"1878:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:6","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":806,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"1888:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"1888:30:6"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"1495:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":814,"implemented":true,"kind":"function","modifiers":[{"id":804,"kind":"modifierInvocation","modifierName":{"id":803,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1868:9:6"},"nodeType":"ModifierInvocation","src":"1868:9:6"}],"name":"renounceOwnership","nameLocation":"1833:17:6","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"1850:2:6"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"1878:0:6"},"scope":858,"src":"1824:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":836,"nodeType":"Block","src":"2144:128:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"2162:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:6","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"2154:73:6"},{"expression":{"arguments":[{"id":833,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"2256:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":832,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2237:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"2237:28:6"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"1931:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":837,"implemented":true,"kind":"function","modifiers":[{"id":820,"kind":"modifierInvocation","modifierName":{"id":819,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2134:9:6"},"nodeType":"ModifierInvocation","src":"2134:9:6"}],"name":"transferOwnership","nameLocation":"2083:17:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:6","nodeType":"VariableDeclaration","scope":837,"src":"2101:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:6"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"2144:0:6"},"scope":858,"src":"2074:198:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":856,"nodeType":"Block","src":"2489:124:6","statements":[{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:6","nodeType":"VariableDeclaration","scope":856,"src":"2499:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":846,"initialValue":{"id":845,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2518:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:6"},{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":847,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2534:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":848,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2543:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":850,"nodeType":"ExpressionStatement","src":"2534:17:6"},{"eventCall":{"arguments":[{"id":852,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"2587:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":853,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2597:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":851,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"2566:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"EmitStatement","src":"2561:45:6"}]},"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"2278:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":857,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:6","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:6","nodeType":"VariableDeclaration","scope":857,"src":"2454:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:6"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"2489:0:6"},"scope":858,"src":"2426:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":859,"src":"654:1961:6","usedErrors":[]}],"src":"102:2514:6"},"id":6},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[923]},"id":924,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":860,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"137:750:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":923,"linearizedBaseContracts":[923],"name":"ReentrancyGuard","nameLocation":"906:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":864,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:7","nodeType":"VariableDeclaration","scope":923,"src":"1676:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":867,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:7","nodeType":"VariableDeclaration","scope":923,"src":"1723:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":869,"mutability":"mutable","name":"_status","nameLocation":"1783:7:7","nodeType":"VariableDeclaration","scope":923,"src":"1767:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":876,"nodeType":"Block","src":"1811:39:7","statements":[{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":872,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"1821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":873,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1831:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"nodeType":"ExpressionStatement","src":"1821:22:7"}]},"id":877,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1808:2:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"1811:0:7"},"scope":923,"src":"1797:53:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"2251:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":880,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2261:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"2261:21:7"},{"id":883,"nodeType":"PlaceholderStatement","src":"2292:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":884,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2303:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":886,"nodeType":"ExpressionStatement","src":"2303:20:7"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1856:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":888,"name":"nonReentrant","nameLocation":"2236:12:7","nodeType":"ModifierDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"2248:2:7"},"src":"2227:103:7","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"2375:248:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":893,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2479:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"2460:63:7"},{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":898,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":899,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2608:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"nodeType":"ExpressionStatement","src":"2598:18:7"}]},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:7","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2364:2:7"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"2375:0:7"},"scope":923,"src":"2336:287:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":910,"nodeType":"Block","src":"2667:171:7","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":906,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2819:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"2809:22:7"}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:7","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"2656:2:7"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"2667:0:7"},"scope":923,"src":"2629:209:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":921,"nodeType":"Block","src":"3081:43:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":918,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3109:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":916,"id":920,"nodeType":"Return","src":"3091:26:7"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2844:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:7","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"3049:2:7"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"3075:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":914,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:7"},"scope":923,"src":"3017:107:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":924,"src":"888:2238:7","usedErrors":[]}],"src":"112:3015:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2377],"ERC20":[1510],"IERC20":[1588],"IERC20Metadata":[1613]},"id":1511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":925,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1511,"sourceUnit":1589,"src":"130:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1511,"sourceUnit":1614,"src":"153:41:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1511,"sourceUnit":2378,"src":"195:33:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":930,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2377,"src":"1550:7:8"},"id":931,"nodeType":"InheritanceSpecifier","src":"1550:7:8"},{"baseName":{"id":932,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1559:6:8"},"id":933,"nodeType":"InheritanceSpecifier","src":"1559:6:8"},{"baseName":{"id":934,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"1567:14:8"},"id":935,"nodeType":"InheritanceSpecifier","src":"1567:14:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"230:1301:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1510,"linearizedBaseContracts":[1510,1613,1588,2377],"name":"ERC20","nameLocation":"1541:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":939,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:8","nodeType":"VariableDeclaration","scope":1510,"src":"1588:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":938,"keyType":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":945,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:8","nodeType":"VariableDeclaration","scope":1510,"src":"1640:67:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":944,"keyType":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":943,"keyType":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":947,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:8","nodeType":"VariableDeclaration","scope":1510,"src":"1714:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":949,"mutability":"mutable","name":"_name","nameLocation":"1764:5:8","nodeType":"VariableDeclaration","scope":1510,"src":"1749:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":948,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":951,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:8","nodeType":"VariableDeclaration","scope":1510,"src":"1775:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":950,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":967,"nodeType":"Block","src":"2036:57:8","statements":[{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2046:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":960,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2054:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":962,"nodeType":"ExpressionStatement","src":"2046:13:8"},{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2069:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":964,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2079:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":966,"nodeType":"ExpressionStatement","src":"2069:17:8"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1804:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":968,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"name_","nameLocation":"2006:5:8","nodeType":"VariableDeclaration","scope":968,"src":"1992:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:8","nodeType":"VariableDeclaration","scope":968,"src":"2013:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":955,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:8"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"2036:0:8"},"scope":1510,"src":"1980:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1600],"body":{"id":977,"nodeType":"Block","src":"2227:29:8","statements":[{"expression":{"id":975,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2244:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":974,"id":976,"nodeType":"Return","src":"2237:12:8"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"2099:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":978,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:8","nodeType":"FunctionDefinition","overrides":{"id":971,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:8"},"parameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"2171:2:8"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"2212:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:8"},"scope":1510,"src":"2158:98:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1606],"body":{"id":987,"nodeType":"Block","src":"2440:31:8","statements":[{"expression":{"id":985,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2457:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":984,"id":986,"nodeType":"Return","src":"2450:14:8"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"2262:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":988,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:8","nodeType":"FunctionDefinition","overrides":{"id":981,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:8"},"parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"2384:2:8"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"2425:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":982,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:8"},"scope":1510,"src":"2369:102:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1612],"body":{"id":997,"nodeType":"Block","src":"3169:26:8","statements":[{"expression":{"hexValue":"3138","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":994,"id":996,"nodeType":"Return","src":"3179:9:8"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"2477:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":998,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:8","nodeType":"FunctionDefinition","overrides":{"id":991,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:8"},"parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"3121:2:8"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"3162:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":992,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:8"},"scope":1510,"src":"3104:91:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1537],"body":{"id":1007,"nodeType":"Block","src":"3325:36:8","statements":[{"expression":{"id":1005,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3342:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1004,"id":1006,"nodeType":"Return","src":"3335:19:8"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3201:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:8","nodeType":"FunctionDefinition","overrides":{"id":1001,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:8"},"parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3275:2:8"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"3316:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:8"},"scope":1510,"src":"3255:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":1021,"nodeType":"Block","src":"3502:42:8","statements":[{"expression":{"baseExpression":{"id":1017,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3519:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1019,"indexExpression":{"id":1018,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"3529:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1016,"id":1020,"nodeType":"Return","src":"3512:25:8"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"3367:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:8","nodeType":"FunctionDefinition","overrides":{"id":1013,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:8"},"parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"account","nameLocation":"3446:7:8","nodeType":"VariableDeclaration","scope":1022,"src":"3438:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:8"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"3493:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:8"},"scope":1510,"src":"3419:125:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1555],"body":{"id":1046,"nodeType":"Block","src":"3825:104:8","statements":[{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"owner","nameLocation":"3843:5:8","nodeType":"VariableDeclaration","scope":1046,"src":"3835:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1037,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1035,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3851:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:8"},{"expression":{"arguments":[{"id":1039,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"3883:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3890:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3894:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1038,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3873:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"3873:28:8"},{"expression":{"hexValue":"74727565","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1032,"id":1045,"nodeType":"Return","src":"3911:11:8"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"3550:185:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:8","nodeType":"FunctionDefinition","overrides":{"id":1029,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:8"},"parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"to","nameLocation":"3766:2:8","nodeType":"VariableDeclaration","scope":1047,"src":"3758:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"amount","nameLocation":"3778:6:8","nodeType":"VariableDeclaration","scope":1047,"src":"3770:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:8"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1047,"src":"3819:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1030,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:8"},"scope":1510,"src":"3740:189:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1565],"body":{"id":1064,"nodeType":"Block","src":"4085:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1058,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4102:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1060,"indexExpression":{"id":1059,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4114:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1062,"indexExpression":{"id":1061,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4121:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1057,"id":1063,"nodeType":"Return","src":"4095:34:8"}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"3935:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:8","nodeType":"FunctionDefinition","overrides":{"id":1054,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:8"},"parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"owner","nameLocation":"4014:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"4006:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"spender","nameLocation":"4029:7:8","nodeType":"VariableDeclaration","scope":1065,"src":"4021:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:8"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"4076:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:8"},"scope":1510,"src":"3987:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1575],"body":{"id":1089,"nodeType":"Block","src":"4533:108:8","statements":[{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"4551:5:8","nodeType":"VariableDeclaration","scope":1089,"src":"4543:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1080,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1078,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4559:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:8"},{"expression":{"arguments":[{"id":1082,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4590:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4597:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4606:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4581:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"4581:32:8"},{"expression":{"hexValue":"74727565","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1075,"id":1088,"nodeType":"Return","src":"4623:11:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"4142:297:8","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:8","nodeType":"FunctionDefinition","overrides":{"id":1072,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:8"},"parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"spender","nameLocation":"4469:7:8","nodeType":"VariableDeclaration","scope":1090,"src":"4461:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"amount","nameLocation":"4486:6:8","nodeType":"VariableDeclaration","scope":1090,"src":"4478:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:8"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"4527:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:8"},"scope":1510,"src":"4444:197:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1587],"body":{"id":1122,"nodeType":"Block","src":"5306:153:8","statements":[{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"spender","nameLocation":"5324:7:8","nodeType":"VariableDeclaration","scope":1122,"src":"5316:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1107,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5334:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:8"},{"expression":{"arguments":[{"id":1109,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5372:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"5378:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"5387:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"5356:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"ExpressionStatement","src":"5356:38:8"},{"expression":{"arguments":[{"id":1115,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5414:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"5420:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"5424:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"5404:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"5404:27:8"},{"expression":{"hexValue":"74727565","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1102,"id":1121,"nodeType":"Return","src":"5441:11:8"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"4647:551:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:8","nodeType":"FunctionDefinition","overrides":{"id":1099,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:8"},"parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"from","nameLocation":"5233:4:8","nodeType":"VariableDeclaration","scope":1123,"src":"5225:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"to","nameLocation":"5247:2:8","nodeType":"VariableDeclaration","scope":1123,"src":"5239:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"amount","nameLocation":"5259:6:8","nodeType":"VariableDeclaration","scope":1123,"src":"5251:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:8"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"5300:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1100,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:8"},"scope":1510,"src":"5203:256:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1151,"nodeType":"Block","src":"5948:140:8","statements":[{"assignments":[1134],"declarations":[{"constant":false,"id":1134,"mutability":"mutable","name":"owner","nameLocation":"5966:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"5958:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1137,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1135,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5974:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:8"},{"expression":{"arguments":[{"id":1139,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6005:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1140,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6012:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1142,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6031:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1143,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6038:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1141,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6021:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1145,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6049:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1138,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5996:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"ExpressionStatement","src":"5996:64:8"},{"expression":{"hexValue":"74727565","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1132,"id":1150,"nodeType":"Return","src":"6070:11:8"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"5465:384:8","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"5889:7:8","nodeType":"VariableDeclaration","scope":1152,"src":"5881:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:8","nodeType":"VariableDeclaration","scope":1152,"src":"5898:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:8"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"5942:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:8"},"scope":1510,"src":"5854:234:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1192,"nodeType":"Block","src":"6674:328:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"owner","nameLocation":"6692:5:8","nodeType":"VariableDeclaration","scope":1192,"src":"6684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1166,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1164,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6700:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:8"},{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:8","nodeType":"VariableDeclaration","scope":1192,"src":"6722:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"arguments":[{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6759:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"6766:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6749:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6792:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1176,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6812:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"6784:85:8"},{"id":1189,"nodeType":"UncheckedBlock","src":"6879:95:8","statements":[{"expression":{"arguments":[{"id":1182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6912:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"6919:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6928:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1185,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6947:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6903:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"6903:60:8"}]},{"expression":{"hexValue":"74727565","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1161,"id":1191,"nodeType":"Return","src":"6984:11:8"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"6094:476:8","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:8","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"spender","nameLocation":"6610:7:8","nodeType":"VariableDeclaration","scope":1193,"src":"6602:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:8","nodeType":"VariableDeclaration","scope":1193,"src":"6619:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"6668:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1159,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:8"},"scope":1510,"src":"6575:427:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1269,"nodeType":"Block","src":"7534:710:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7552:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:8","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"7544:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"7630:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:8","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"7622:64:8"},{"expression":{"arguments":[{"id":1224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7718:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"7724:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7728:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"7697:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"7697:38:8"},{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:8","nodeType":"VariableDeclaration","scope":1269,"src":"7746:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1234,"initialValue":{"baseExpression":{"id":1231,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7768:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1233,"indexExpression":{"id":1232,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7778:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7801:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7816:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"7793:72:8"},{"id":1256,"nodeType":"UncheckedBlock","src":"7875:273:8","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1242,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7899:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1244,"indexExpression":{"id":1243,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7909:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7917:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1246,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7931:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"7899:38:8"},{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1250,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"8114:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1252,"indexExpression":{"id":1251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8124:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1253,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8131:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"8114:23:8"}]},{"eventCall":{"arguments":[{"id":1258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"8172:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8178:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8182:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8163:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"EmitStatement","src":"8158:31:8"},{"expression":{"arguments":[{"id":1264,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"8220:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8226:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8230:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"8200:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"8200:37:8"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"7008:443:8","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:8","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"from","nameLocation":"7483:4:8","nodeType":"VariableDeclaration","scope":1270,"src":"7475:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"to","nameLocation":"7497:2:8","nodeType":"VariableDeclaration","scope":1270,"src":"7489:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"amount","nameLocation":"7509:6:8","nodeType":"VariableDeclaration","scope":1270,"src":"7501:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"7534:0:8"},"scope":1510,"src":"7456:788:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"8585:470:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8603:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:8","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"8595:65:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:8","typeDescriptions":{}}},"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8704:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8713:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"8671:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"8671:49:8"},{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1297,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8731:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1298,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8747:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"8731:22:8"},{"id":1307,"nodeType":"UncheckedBlock","src":"8763:175:8","statements":[{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1301,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"8899:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1303,"indexExpression":{"id":1302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8909:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8921:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ExpressionStatement","src":"8899:28:8"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:8","typeDescriptions":{}}},"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1313,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8973:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8982:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8952:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"EmitStatement","src":"8947:42:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:8","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"9032:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"9041:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"9000:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"9000:48:8"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"8250:265:8","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:8","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"account","nameLocation":"8543:7:8","nodeType":"VariableDeclaration","scope":1327,"src":"8535:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"amount","nameLocation":"8560:6:8","nodeType":"VariableDeclaration","scope":1327,"src":"8552:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:8"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"8585:0:8"},"scope":1510,"src":"8520:535:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"9440:594:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9458:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:8","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"ExpressionStatement","src":"9450:67:8"},{"expression":{"arguments":[{"id":1346,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9549:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:8","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"9570:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1345,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9528:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"9528:49:8"},{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:8","nodeType":"VariableDeclaration","scope":1398,"src":"9588:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1359,"initialValue":{"baseExpression":{"id":1356,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9613:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1358,"indexExpression":{"id":1357,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9623:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"9649:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1362,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"9667:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"9641:71:8"},{"id":1379,"nodeType":"UncheckedBlock","src":"9722:194:8","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1367,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9746:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1369,"indexExpression":{"id":1368,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9756:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"9767:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1371,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"9784:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"9746:44:8"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9883:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1376,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"9899:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"9883:22:8"}]},{"eventCall":{"arguments":[{"id":1381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9940:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:8","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"9961:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1380,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"9931:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1388,"nodeType":"EmitStatement","src":"9926:42:8"},{"expression":{"arguments":[{"id":1390,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:8","typeDescriptions":{}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"10020:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"9979:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"ExpressionStatement","src":"9979:48:8"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"9061:309:8","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:8","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"account","nameLocation":"9398:7:8","nodeType":"VariableDeclaration","scope":1399,"src":"9390:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"amount","nameLocation":"9415:6:8","nodeType":"VariableDeclaration","scope":1399,"src":"9407:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:8"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"9440:0:8"},"scope":1510,"src":"9375:659:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"10540:257:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"10558:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:8","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"10550:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"10636:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:8","typeDescriptions":{}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"10628:68:8"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1429,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"10707:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1432,"indexExpression":{"id":1430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"10719:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1433,"indexExpression":{"id":1431,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"10726:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1434,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10737:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"nodeType":"ExpressionStatement","src":"10707:36:8"},{"eventCall":{"arguments":[{"id":1438,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"10767:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"10774:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10783:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10758:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"EmitStatement","src":"10753:37:8"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"10040:412:8","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:8","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"owner","nameLocation":"10483:5:8","nodeType":"VariableDeclaration","scope":1444,"src":"10475:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"spender","nameLocation":"10498:7:8","nodeType":"VariableDeclaration","scope":1444,"src":"10490:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"amount","nameLocation":"10515:6:8","nodeType":"VariableDeclaration","scope":1444,"src":"10507:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:8"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"10540:0:8"},"scope":1510,"src":"10457:340:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"11168:321:8","statements":[{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:8","nodeType":"VariableDeclaration","scope":1486,"src":"11178:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"id":1457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11215:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11222:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1456,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11205:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"11244:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1485,"nodeType":"IfStatement","src":"11240:243:8","trueBody":{"id":1484,"nodeType":"Block","src":"11283:200:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"11305:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1470,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"11325:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"ExpressionStatement","src":"11297:68:8"},{"id":1483,"nodeType":"UncheckedBlock","src":"11379:94:8","statements":[{"expression":{"arguments":[{"id":1476,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11416:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11423:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"11432:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"11451:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1475,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"11407:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"11407:51:8"}]}]}}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"10803:270:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:8","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"owner","nameLocation":"11111:5:8","nodeType":"VariableDeclaration","scope":1487,"src":"11103:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"spender","nameLocation":"11126:7:8","nodeType":"VariableDeclaration","scope":1487,"src":"11118:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"amount","nameLocation":"11143:6:8","nodeType":"VariableDeclaration","scope":1487,"src":"11135:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:8"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"11168:0:8"},"scope":1510,"src":"11078:411:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"12162:2:8","statements":[]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"11495:573:8","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:8","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"from","nameLocation":"12111:4:8","nodeType":"VariableDeclaration","scope":1498,"src":"12103:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"to","nameLocation":"12125:2:8","nodeType":"VariableDeclaration","scope":1498,"src":"12117:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"amount","nameLocation":"12137:6:8","nodeType":"VariableDeclaration","scope":1498,"src":"12129:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:8"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"12162:0:8"},"scope":1510,"src":"12073:91:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"12840:2:8","statements":[]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"12170:577:8","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:8","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"from","nameLocation":"12789:4:8","nodeType":"VariableDeclaration","scope":1509,"src":"12781:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"to","nameLocation":"12803:2:8","nodeType":"VariableDeclaration","scope":1509,"src":"12795:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"amount","nameLocation":"12815:6:8","nodeType":"VariableDeclaration","scope":1509,"src":"12807:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:8"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"12840:0:8"},"scope":1510,"src":"12752:90:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1511,"src":"1532:11312:8","usedErrors":[]}],"src":"105:12740:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1588]},"id":1589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"131:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1588,"linearizedBaseContracts":[1588],"name":"IERC20","nameLocation":"212:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"225:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1522,"name":"Transfer","nameLocation":"394:8:9","nodeType":"EventDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:9","nodeType":"VariableDeclaration","scope":1522,"src":"403:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1518,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:9","nodeType":"VariableDeclaration","scope":1522,"src":"425:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1520,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:9","nodeType":"VariableDeclaration","scope":1522,"src":"445:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:9"},"src":"388:72:9"},{"anonymous":false,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"466:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1531,"name":"Approval","nameLocation":"625:8:9","nodeType":"EventDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:9","nodeType":"VariableDeclaration","scope":1531,"src":"634:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:9","nodeType":"VariableDeclaration","scope":1531,"src":"657:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:9","nodeType":"VariableDeclaration","scope":1531,"src":"682:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:9"},"src":"619:78:9"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"703:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1537,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1537,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1588,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"835:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:9","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"account","nameLocation":"939:7:9","nodeType":"VariableDeclaration","scope":1545,"src":"931:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:9"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"971:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:9"},"scope":1588,"src":"912:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"986:202:9","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1555,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:9","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"to","nameLocation":"1219:2:9","nodeType":"VariableDeclaration","scope":1555,"src":"1211:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"amount","nameLocation":"1231:6:9","nodeType":"VariableDeclaration","scope":1555,"src":"1223:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:9"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"1257:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:9"},"scope":1588,"src":"1193:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1269:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1565,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:9","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"owner","nameLocation":"1565:5:9","nodeType":"VariableDeclaration","scope":1565,"src":"1557:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"spender","nameLocation":"1580:7:9","nodeType":"VariableDeclaration","scope":1565,"src":"1572:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:9"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"1612:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:9"},"scope":1588,"src":"1538:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"1627:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1575,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:9","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"spender","nameLocation":"2299:7:9","nodeType":"VariableDeclaration","scope":1575,"src":"2291:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"amount","nameLocation":"2316:6:9","nodeType":"VariableDeclaration","scope":1575,"src":"2308:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:9"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"2342:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1572,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:9"},"scope":1588,"src":"2274:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"2354:287:9","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1587,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:9","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"from","nameLocation":"2676:4:9","nodeType":"VariableDeclaration","scope":1587,"src":"2668:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"to","nameLocation":"2690:2:9","nodeType":"VariableDeclaration","scope":1587,"src":"2682:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"amount","nameLocation":"2702:6:9","nodeType":"VariableDeclaration","scope":1587,"src":"2694:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:9"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"2728:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1584,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:9"},"scope":1588,"src":"2646:88:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1589,"src":"202:2534:9","usedErrors":[]}],"src":"106:2631:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1588],"IERC20Metadata":[1613]},"id":1614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1590,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1614,"sourceUnit":1589,"src":"135:23:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1593,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"305:6:10"},"id":1594,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"160:116:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1613,"linearizedBaseContracts":[1613,1588],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1600,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1613,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1606,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1603,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1613,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1612,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1609,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1613,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1614,"src":"277:405:10","usedErrors":[]}],"src":"110:573:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1649]},"id":1650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1615,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"148:480:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1649,"linearizedBaseContracts":[1649],"name":"IERC20Permit","nameLocation":"639:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"658:792:11","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1634,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:11","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"owner","nameLocation":"1488:5:11","nodeType":"VariableDeclaration","scope":1634,"src":"1480:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"spender","nameLocation":"1511:7:11","nodeType":"VariableDeclaration","scope":1634,"src":"1503:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"value","nameLocation":"1536:5:11","nodeType":"VariableDeclaration","scope":1634,"src":"1528:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:11","nodeType":"VariableDeclaration","scope":1634,"src":"1551:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"v","nameLocation":"1583:1:11","nodeType":"VariableDeclaration","scope":1634,"src":"1577:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1626,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"r","nameLocation":"1602:1:11","nodeType":"VariableDeclaration","scope":1634,"src":"1594:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"s","nameLocation":"1621:1:11","nodeType":"VariableDeclaration","scope":1634,"src":"1613:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:11"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"1637:0:11"},"scope":1649,"src":"1455:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"1644:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1642,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:11","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"owner","nameLocation":"1967:5:11","nodeType":"VariableDeclaration","scope":1642,"src":"1959:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:11"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"1997:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:11"},"scope":1649,"src":"1943:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"2012:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1648,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:11","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"2223:2:11"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"2249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:11"},"scope":1649,"src":"2198:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1650,"src":"629:1631:11","usedErrors":[]}],"src":"123:2138:11"},"id":11},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2355],"IERC20":[1588],"IERC20Permit":[1649],"SafeERC20":[2025]},"id":2026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1651,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2026,"sourceUnit":1589,"src":"140:23:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2026,"sourceUnit":1650,"src":"164:40:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2026,"sourceUnit":2356,"src":"205:36:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"243:457:12","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2025,"linearizedBaseContracts":[2025],"name":"SafeERC20","nameLocation":"709:9:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1658,"libraryName":{"id":1656,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"731:7:12"},"nodeType":"UsingForDirective","src":"725:26:12","typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1681,"nodeType":"Block","src":"1013:103:12","statements":[{"expression":{"arguments":[{"id":1670,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1043:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1673,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1073:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"1073:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1073:23:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1676,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1098:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1102:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1671,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1669,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1023:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1023:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"1023:86:12"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"757:179:12","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:12","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"token","nameLocation":"970:5:12","nodeType":"VariableDeclaration","scope":1682,"src":"963:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1661,"nodeType":"UserDefinedTypeName","pathNode":{"id":1660,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"963:6:12"},"referencedDeclaration":1588,"src":"963:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"to","nameLocation":"985:2:12","nodeType":"VariableDeclaration","scope":1682,"src":"977:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"value","nameLocation":"997:5:12","nodeType":"VariableDeclaration","scope":1682,"src":"989:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:12"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"1013:0:12"},"scope":2025,"src":"941:175:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"1445:113:12","statements":[{"expression":{"arguments":[{"id":1696,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1475:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1699,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1505:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"1505:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1505:27:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1702,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"1534:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1703,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1540:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1544:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1697,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1695,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1455:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"1455:96:12"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"1122:228:12","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:12","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"token","nameLocation":"1388:5:12","nodeType":"VariableDeclaration","scope":1709,"src":"1381:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1381:6:12"},"referencedDeclaration":1588,"src":"1381:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"from","nameLocation":"1403:4:12","nodeType":"VariableDeclaration","scope":1709,"src":"1395:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"to","nameLocation":"1417:2:12","nodeType":"VariableDeclaration","scope":1709,"src":"1409:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"value","nameLocation":"1429:5:12","nodeType":"VariableDeclaration","scope":1709,"src":"1421:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:12"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"1445:0:12"},"scope":2025,"src":"1355:203:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1752,"nodeType":"Block","src":"1894:497:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"2143:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:12","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2175:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2190:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1725,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2159:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1565,"src":"2159:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2159:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:163:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"2121:163:12"},{"expression":{"arguments":[{"id":1741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2314:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1744,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2344:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"2344:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2344:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1747,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2368:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"2377:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1742,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1740,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2294:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1751,"nodeType":"ExpressionStatement","src":"2294:90:12"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"1564:249:12","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"token","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":1753,"src":"1839:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1839:6:12"},"referencedDeclaration":1588,"src":"1839:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"spender","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":1753,"src":"1853:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"value","nameLocation":"1878:5:12","nodeType":"VariableDeclaration","scope":1753,"src":"1870:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:12"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[],"src":"1894:0:12"},"scope":2025,"src":"1818:573:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1789,"nodeType":"Block","src":"2668:194:12","statements":[{"assignments":[1765],"declarations":[{"constant":false,"id":1765,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:12","nodeType":"VariableDeclaration","scope":1789,"src":"2678:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1774,"initialValue":{"arguments":[{"arguments":[{"id":1770,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:12","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2732:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1766,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2701:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1565,"src":"2701:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:12"},{"expression":{"arguments":[{"id":1776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2770:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1779,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2800:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"2800:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2800:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1782,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2824:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"2833:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2848:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1777,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1775,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2750:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"2750:105:12"}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"2397:180:12","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:12","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"token","nameLocation":"2620:5:12","nodeType":"VariableDeclaration","scope":1790,"src":"2613:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1756,"nodeType":"UserDefinedTypeName","pathNode":{"id":1755,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"2613:6:12"},"referencedDeclaration":1588,"src":"2613:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"spender","nameLocation":"2635:7:12","nodeType":"VariableDeclaration","scope":1790,"src":"2627:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"value","nameLocation":"2652:5:12","nodeType":"VariableDeclaration","scope":1790,"src":"2644:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:12"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[],"src":"2668:0:12"},"scope":2025,"src":"2582:280:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"3139:321:12","statements":[{"id":1833,"nodeType":"UncheckedBlock","src":"3149:305:12","statements":[{"assignments":[1802],"declarations":[{"constant":false,"id":1802,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:12","nodeType":"VariableDeclaration","scope":1833,"src":"3173:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1811,"initialValue":{"arguments":[{"arguments":[{"id":1807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2025","typeString":"library SafeERC20"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:12","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3227:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3196:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1565,"src":"3196:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3257:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3273:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3249:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"3249:75:12"},{"expression":{"arguments":[{"id":1820,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3358:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1823,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3388:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"3388:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3388:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1826,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3412:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3421:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1821,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1819,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3338:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"3338:105:12"}]}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"2868:180:12","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:12","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"token","nameLocation":"3091:5:12","nodeType":"VariableDeclaration","scope":1835,"src":"3084:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1793,"nodeType":"UserDefinedTypeName","pathNode":{"id":1792,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"3084:6:12"},"referencedDeclaration":1588,"src":"3084:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"spender","nameLocation":"3106:7:12","nodeType":"VariableDeclaration","scope":1835,"src":"3098:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"value","nameLocation":"3123:5:12","nodeType":"VariableDeclaration","scope":1835,"src":"3115:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:12"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[],"src":"3139:0:12"},"scope":2025,"src":"3053:407:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"3833:333:12","statements":[{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"approvalCall","nameLocation":"3856:12:12","nodeType":"VariableDeclaration","scope":1881,"src":"3843:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1856,"initialValue":{"arguments":[{"expression":{"expression":{"id":1850,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3894:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"3894:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3894:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1853,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"3918:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"3927:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3871:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3871:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3843:90:12"},{"condition":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3948:45:12","subExpression":{"arguments":[{"id":1858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3973:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"id":1859,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3980:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1857,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3949:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3949:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"3944:216:12","trueBody":{"id":1879,"nodeType":"Block","src":"3995:165:12","statements":[{"expression":{"arguments":[{"id":1863,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"4029:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1866,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"4059:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"4059:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4059:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1869,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"4083:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1864,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4036:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4036:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1862,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4009:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"4009:86:12"},{"expression":{"arguments":[{"id":1875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"4129:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},{"id":1876,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"4136:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1874,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4109:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4109:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"ExpressionStatement","src":"4109:40:12"}]}}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"3466:285:12","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."},"id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3765:12:12","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"token","nameLocation":"3785:5:12","nodeType":"VariableDeclaration","scope":1882,"src":"3778:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1838,"nodeType":"UserDefinedTypeName","pathNode":{"id":1837,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"3778:6:12"},"referencedDeclaration":1588,"src":"3778:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"spender","nameLocation":"3800:7:12","nodeType":"VariableDeclaration","scope":1882,"src":"3792:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"value","nameLocation":"3817:5:12","nodeType":"VariableDeclaration","scope":1882,"src":"3809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:46:12"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[],"src":"3833:0:12"},"scope":2025,"src":"3756:410:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"4533:257:12","statements":[{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"nonceBefore","nameLocation":"4551:11:12","nodeType":"VariableDeclaration","scope":1938,"src":"4543:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4543:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1909,"initialValue":{"arguments":[{"id":1907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4578:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1905,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4565:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1649","typeString":"contract IERC20Permit"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"4565:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4543:41:12"},{"expression":{"arguments":[{"id":1913,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4607:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4614:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4623:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1916,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4630:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1917,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4640:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1918,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4643:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1919,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4646:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1910,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4594:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1649","typeString":"contract IERC20Permit"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"4594:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"ExpressionStatement","src":"4594:54:12"},{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"nonceAfter","nameLocation":"4666:10:12","nodeType":"VariableDeclaration","scope":1938,"src":"4658:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"id":1926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4692:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1924,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4679:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1649","typeString":"contract IERC20Permit"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"4679:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4679:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:40:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"4716:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4730:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4730:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"ExpressionStatement","src":"4708:75:12"}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"4172:141:12","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4327:10:12","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"token","nameLocation":"4360:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"4347:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1649","typeString":"contract IERC20Permit"},"typeName":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1649,"src":"4347:12:12"},"referencedDeclaration":1649,"src":"4347:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1649","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"owner","nameLocation":"4383:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"4375:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"spender","nameLocation":"4406:7:12","nodeType":"VariableDeclaration","scope":1939,"src":"4398:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"value","nameLocation":"4431:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"4423:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"deadline","nameLocation":"4454:8:12","nodeType":"VariableDeclaration","scope":1939,"src":"4446:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"v","nameLocation":"4478:1:12","nodeType":"VariableDeclaration","scope":1939,"src":"4472:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1895,"name":"uint8","nodeType":"ElementaryTypeName","src":"4472:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"r","nameLocation":"4497:1:12","nodeType":"VariableDeclaration","scope":1939,"src":"4489:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"s","nameLocation":"4516:1:12","nodeType":"VariableDeclaration","scope":1939,"src":"4508:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4337:186:12"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[],"src":"4533:0:12"},"scope":2025,"src":"4318:472:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"5243:572:12","statements":[{"assignments":[1949],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"returndata","nameLocation":"5605:10:12","nodeType":"VariableDeclaration","scope":1975,"src":"5592:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"5592:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1958,"initialValue":{"arguments":[{"id":1955,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5646:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5652:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1952,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"5626:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:12","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"5618:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5592:95:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1960,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"5705:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5705:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5705:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1966,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"5742:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5755:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1967,"name":"bool","nodeType":"ElementaryTypeName","src":"5755:4:12","typeDescriptions":{}}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5754:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1964,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5731:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5731:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5731:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5705:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5763:44:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5697:111:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"ExpressionStatement","src":"5697:111:12"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"4796:372:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5182:19:12","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"token","nameLocation":"5209:5:12","nodeType":"VariableDeclaration","scope":1976,"src":"5202:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"5202:6:12"},"referencedDeclaration":1588,"src":"5202:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"data","nameLocation":"5229:4:12","nodeType":"VariableDeclaration","scope":1976,"src":"5216:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"5216:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5201:33:12"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"5243:0:12"},"scope":2025,"src":"5173:642:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2023,"nodeType":"Block","src":"6405:505:12","statements":[{"assignments":[1988,1990],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"success","nameLocation":"6706:7:12","nodeType":"VariableDeclaration","scope":2023,"src":"6701:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1987,"name":"bool","nodeType":"ElementaryTypeName","src":"6701:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"returndata","nameLocation":"6728:10:12","nodeType":"VariableDeclaration","scope":2023,"src":"6715:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1989,"name":"bytes","nodeType":"ElementaryTypeName","src":"6715:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"id":1996,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6762:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1993,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"6750:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6742:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:12","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6742:19:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6700:67:12"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6796:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2000,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6808:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6808:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6829:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6808:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2006,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6845:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6858:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"6858:4:12","typeDescriptions":{}}}],"id":2009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2004,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6834:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6834:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6834:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6808:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6807:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":2018,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"6896:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:12","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6888:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2014,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6869:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2355_$","typeString":"type(library Address)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"6869:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6869:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:107:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1986,"id":2022,"nodeType":"Return","src":"6777:126:12"}]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"5821:490:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6325:23:12","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"token","nameLocation":"6356:5:12","nodeType":"VariableDeclaration","scope":2024,"src":"6349:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":1979,"nodeType":"UserDefinedTypeName","pathNode":{"id":1978,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"6349:6:12"},"referencedDeclaration":1588,"src":"6349:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"data","nameLocation":"6376:4:12","nodeType":"VariableDeclaration","scope":2024,"src":"6363:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:33:12"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"6399:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1984,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:12"},"scope":2025,"src":"6316:594:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2026,"src":"701:6211:12","usedErrors":[]}],"src":"115:6798:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2355]},"id":2356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2027,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2355,"linearizedBaseContracts":[2355],"name":"Address","nameLocation":"202:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2042,"nodeType":"Block","src":"1478:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2036,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1702:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2035,"id":2041,"nodeType":"Return","src":"1695:30:13"}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"216:1191:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:13","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"account","nameLocation":"1440:7:13","nodeType":"VariableDeclaration","scope":2043,"src":"1432:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:13"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"1472:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2033,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:13"},"scope":2355,"src":"1412:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2076,"nodeType":"Block","src":"2718:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2054,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2355","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2355","typeString":"library Address"}],"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:13","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2761:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"ExpressionStatement","src":"2728:73:13"},{"assignments":[2063,null],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"success","nameLocation":"2818:7:13","nodeType":"VariableDeclaration","scope":2076,"src":"2813:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2062,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2070,"initialValue":{"arguments":[{"hexValue":"","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2064,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2831:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2853:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:13"},{"expression":{"arguments":[{"id":2072,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2882:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"ExpressionStatement","src":"2874:78:13"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1738:904:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:13","nodeType":"VariableDeclaration","scope":2077,"src":"2666:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"amount","nameLocation":"2701:6:13","nodeType":"VariableDeclaration","scope":2077,"src":"2693:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:13"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"2718:0:13"},"scope":2355,"src":"2647:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"3790:96:13","statements":[{"expression":{"arguments":[{"id":2088,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"3829:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"3837:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2087,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2135,2179],"referencedDeclaration":2179,"src":"3807:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2086,"id":2093,"nodeType":"Return","src":"3800:79:13"}]},"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"2965:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:13","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"target","nameLocation":"3731:6:13","nodeType":"VariableDeclaration","scope":2095,"src":"3723:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"data","nameLocation":"3752:4:13","nodeType":"VariableDeclaration","scope":2095,"src":"3739:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:13"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"3776:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:13"},"scope":2355,"src":"3701:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"4255:76:13","statements":[{"expression":{"arguments":[{"id":2108,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"4294:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"4302:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2111,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"4311:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2107,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2135,2179],"referencedDeclaration":2179,"src":"4272:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2106,"id":2113,"nodeType":"Return","src":"4265:59:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"3892:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:13","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"target","nameLocation":"4147:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"4139:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"data","nameLocation":"4176:4:13","nodeType":"VariableDeclaration","scope":2115,"src":"4163:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2099,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:13","nodeType":"VariableDeclaration","scope":2115,"src":"4190:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2101,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:13"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"4241:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2104,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:13"},"scope":2355,"src":"4108:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"4806:111:13","statements":[{"expression":{"arguments":[{"id":2128,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"4845:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2129,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"4853:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4859:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2127,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2135,2179],"referencedDeclaration":2179,"src":"4823:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2126,"id":2133,"nodeType":"Return","src":"4816:94:13"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"4337:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:13","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"target","nameLocation":"4732:6:13","nodeType":"VariableDeclaration","scope":2135,"src":"4724:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"data","nameLocation":"4753:4:13","nodeType":"VariableDeclaration","scope":2135,"src":"4740:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2119,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"value","nameLocation":"4767:5:13","nodeType":"VariableDeclaration","scope":2135,"src":"4759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:13"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"4792:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2124,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:13"},"scope":2355,"src":"4693:224:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"5344:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2152,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2355","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2355","typeString":"library Address"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:13","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"5387:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"ExpressionStatement","src":"5354:81:13"},{"assignments":[2161,2163],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"success","nameLocation":"5451:7:13","nodeType":"VariableDeclaration","scope":2178,"src":"5446:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2160,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:13","nodeType":"VariableDeclaration","scope":2178,"src":"5460:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2170,"initialValue":{"arguments":[{"id":2168,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"5513:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2164,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"5487:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"5506:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:13"},{"expression":{"arguments":[{"id":2172,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"5562:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2173,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5570:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2174,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"5579:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2175,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"5591:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2171,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"5535:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2148,"id":2177,"nodeType":"Return","src":"5528:76:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"4923:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:13","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"target","nameLocation":"5213:6:13","nodeType":"VariableDeclaration","scope":2179,"src":"5205:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"data","nameLocation":"5242:4:13","nodeType":"VariableDeclaration","scope":2179,"src":"5229:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"value","nameLocation":"5264:5:13","nodeType":"VariableDeclaration","scope":2179,"src":"5256:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:13","nodeType":"VariableDeclaration","scope":2179,"src":"5279:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2143,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:13"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"5330:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:13"},"scope":2355,"src":"5165:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2195,"nodeType":"Block","src":"5888:97:13","statements":[{"expression":{"arguments":[{"id":2190,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5924:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2191,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5932:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2189,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2196,2225],"referencedDeclaration":2225,"src":"5905:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2188,"id":2194,"nodeType":"Return","src":"5898:80:13"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"5617:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:13","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"target","nameLocation":"5824:6:13","nodeType":"VariableDeclaration","scope":2196,"src":"5816:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"data","nameLocation":"5845:4:13","nodeType":"VariableDeclaration","scope":2196,"src":"5832:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2183,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:13"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"5874:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2186,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:13"},"scope":2355,"src":"5788:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2224,"nodeType":"Block","src":"6327:168:13","statements":[{"assignments":[2209,2211],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"6343:7:13","nodeType":"VariableDeclaration","scope":2224,"src":"6338:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:13","nodeType":"VariableDeclaration","scope":2224,"src":"6352:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2216,"initialValue":{"arguments":[{"id":2214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6397:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"6379:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:13"},{"expression":{"arguments":[{"id":2218,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"6446:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2219,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6454:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2220,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"6463:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2221,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"6475:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2217,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6419:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2207,"id":2223,"nodeType":"Return","src":"6412:76:13"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"5991:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:13","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"target","nameLocation":"6214:6:13","nodeType":"VariableDeclaration","scope":2225,"src":"6206:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"data","nameLocation":"6243:4:13","nodeType":"VariableDeclaration","scope":2225,"src":"6230:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:13","nodeType":"VariableDeclaration","scope":2225,"src":"6257:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:13"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"6313:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:13"},"scope":2355,"src":"6169:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"6771:101:13","statements":[{"expression":{"arguments":[{"id":2236,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6809:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2237,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6817:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2235,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2242,2271],"referencedDeclaration":2271,"src":"6788:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2234,"id":2240,"nodeType":"Return","src":"6781:84:13"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"6501:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:13","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"target","nameLocation":"6712:6:13","nodeType":"VariableDeclaration","scope":2242,"src":"6704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"data","nameLocation":"6733:4:13","nodeType":"VariableDeclaration","scope":2242,"src":"6720:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2229,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:13"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"6757:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2232,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:13"},"scope":2355,"src":"6674:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2270,"nodeType":"Block","src":"7213:170:13","statements":[{"assignments":[2255,2257],"declarations":[{"constant":false,"id":2255,"mutability":"mutable","name":"success","nameLocation":"7229:7:13","nodeType":"VariableDeclaration","scope":2270,"src":"7224:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2254,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:13","nodeType":"VariableDeclaration","scope":2270,"src":"7238:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2256,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2262,"initialValue":{"arguments":[{"id":2260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"7285:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2258,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7265:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:13"},{"expression":{"arguments":[{"id":2264,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7334:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"7342:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"7351:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2267,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"7363:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2263,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"7307:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2253,"id":2269,"nodeType":"Return","src":"7300:76:13"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"6878:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:13","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"target","nameLocation":"7105:6:13","nodeType":"VariableDeclaration","scope":2271,"src":"7097:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"data","nameLocation":"7134:4:13","nodeType":"VariableDeclaration","scope":2271,"src":"7121:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2246,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:13","nodeType":"VariableDeclaration","scope":2271,"src":"7148:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2248,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:13"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"7199:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2251,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:13"},"scope":2355,"src":"7058:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"7865:434:13","statements":[{"condition":{"id":2285,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"7879:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2307,"nodeType":"Block","src":"8235:58:13","statements":[{"expression":{"arguments":[{"id":2303,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"8257:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2304,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"8269:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2302,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"8249:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2306,"nodeType":"ExpressionStatement","src":"8249:33:13"}]},"id":2308,"nodeType":"IfStatement","src":"7875:418:13","trueBody":{"id":2301,"nodeType":"Block","src":"7888:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2286,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"7906:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2298,"nodeType":"IfStatement","src":"7902:286:13","trueBody":{"id":2297,"nodeType":"Block","src":"7930:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2292,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"8132:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2291,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8121:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"ExpressionStatement","src":"8113:60:13"}]}},{"expression":{"id":2299,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"8208:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2284,"id":2300,"nodeType":"Return","src":"8201:17:13"}]}}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"7389:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:13","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"target","nameLocation":"7724:6:13","nodeType":"VariableDeclaration","scope":2310,"src":"7716:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"success","nameLocation":"7745:7:13","nodeType":"VariableDeclaration","scope":2310,"src":"7740:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2275,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:13","nodeType":"VariableDeclaration","scope":2310,"src":"7762:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2277,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:13","nodeType":"VariableDeclaration","scope":2310,"src":"7795:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2279,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:13"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"7851:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2282,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:13"},"scope":2355,"src":"7671:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"8680:135:13","statements":[{"condition":{"id":2322,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"8694:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2331,"nodeType":"Block","src":"8751:58:13","statements":[{"expression":{"arguments":[{"id":2327,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8773:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2328,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"8785:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2326,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"8765:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"8765:33:13"}]},"id":2332,"nodeType":"IfStatement","src":"8690:119:13","trueBody":{"id":2325,"nodeType":"Block","src":"8703:42:13","statements":[{"expression":{"id":2323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8724:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2321,"id":2324,"nodeType":"Return","src":"8717:17:13"}]}}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"8305:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:13","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"success","nameLocation":"8560:7:13","nodeType":"VariableDeclaration","scope":2334,"src":"8555:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2312,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:13","nodeType":"VariableDeclaration","scope":2334,"src":"8577:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:13","nodeType":"VariableDeclaration","scope":2334,"src":"8610:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2316,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:13"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"8666:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:13"},"scope":2355,"src":"8520:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"8904:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2341,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"8980:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2351,"nodeType":"Block","src":"9310:45:13","statements":[{"expression":{"arguments":[{"id":2348,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"9331:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2347,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"9324:20:13"}]},"id":2352,"nodeType":"IfStatement","src":"8976:379:13","trueBody":{"id":2346,"nodeType":"Block","src":"9003:301:13","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:13"},"nodeType":"YulFunctionCall","src":"9202:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:13"},"nodeType":"YulFunctionCall","src":"9243:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:13"},"nodeType":"YulFunctionCall","src":"9236:44:13"},"nodeType":"YulExpressionStatement","src":"9236:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2336,"isOffset":false,"isSlot":false,"src":"9208:10:13","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"9251:10:13","valueSize":1}],"id":2345,"nodeType":"InlineAssembly","src":"9152:142:13"}]}}]},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:13","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:13","nodeType":"VariableDeclaration","scope":2354,"src":"8838:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2335,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:13","nodeType":"VariableDeclaration","scope":2354,"src":"8863:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2337,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:13"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[],"src":"8904:0:13"},"scope":2355,"src":"8821:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2356,"src":"194:9169:13","usedErrors":[]}],"src":"101:9263:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2377]},"id":2378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2357,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2377,"linearizedBaseContracts":[2377],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2366,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2362,"id":2365,"nodeType":"Return","src":"712:17:14"}]},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2377,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2371,"id":2374,"nodeType":"Return","src":"819:15:14"}]},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2376,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2369,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2377,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2378,"src":"608:235:14","usedErrors":[]}],"src":"86:758:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3874],"SignedMath":[3979],"Strings":[2606]},"id":2607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2379,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2607,"sourceUnit":3875,"src":"126:25:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2607,"sourceUnit":3980,"src":"152:31:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"185:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2606,"linearizedBaseContracts":[2606],"name":"Strings","nameLocation":"228:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2385,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:15","nodeType":"VariableDeclaration","scope":2606,"src":"242:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2383,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2388,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:15","nodeType":"VariableDeclaration","scope":2606,"src":"302:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2386,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2435,"nodeType":"Block","src":"518:625:15","statements":[{"id":2434,"nodeType":"UncheckedBlock","src":"528:609:15","statements":[{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"length","nameLocation":"560:6:15","nodeType":"VariableDeclaration","scope":2434,"src":"552:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2398,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"569:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3874_$","typeString":"type(library Math)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"569:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:15"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"buffer","nameLocation":"618:6:15","nodeType":"VariableDeclaration","scope":2434,"src":"604:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2411,"initialValue":{"arguments":[{"id":2409,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"638:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:15"},{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"ptr","nameLocation":"667:3:15","nodeType":"VariableDeclaration","scope":2434,"src":"659:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2414,"nodeType":"VariableDeclarationStatement","src":"659:11:15"},{"AST":{"nodeType":"YulBlock","src":"740:67:15","statements":[{"nodeType":"YulAssignment","src":"758:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:15"},"nodeType":"YulFunctionCall","src":"777:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:15"},"nodeType":"YulFunctionCall","src":"765:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2406,"isOffset":false,"isSlot":false,"src":"769:6:15","valueSize":1},{"declaration":2397,"isOffset":false,"isSlot":false,"src":"785:6:15","valueSize":1},{"declaration":2413,"isOffset":false,"isSlot":false,"src":"758:3:15","valueSize":1}],"id":2415,"nodeType":"InlineAssembly","src":"731:76:15"},{"body":{"id":2430,"nodeType":"Block","src":"833:267:15","statements":[{"expression":{"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:15","subExpression":{"id":2417,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2419,"nodeType":"ExpressionStatement","src":"851:5:15"},{"AST":{"nodeType":"YulBlock","src":"934:84:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:15"},"nodeType":"YulFunctionCall","src":"974:14:15"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:15"},"nodeType":"YulFunctionCall","src":"969:30:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:15"},"nodeType":"YulFunctionCall","src":"956:44:15"},"nodeType":"YulExpressionStatement","src":"956:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2385,"isOffset":false,"isSlot":false,"src":"990:8:15","valueSize":1},{"declaration":2413,"isOffset":false,"isSlot":false,"src":"964:3:15","valueSize":1},{"declaration":2391,"isOffset":false,"isSlot":false,"src":"978:5:15","valueSize":1}],"id":2420,"nodeType":"InlineAssembly","src":"925:93:15"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"1035:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2424,"nodeType":"ExpressionStatement","src":"1035:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"1068:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2429,"nodeType":"IfStatement","src":"1064:21:15","trueBody":{"id":2428,"nodeType":"Break","src":"1080:5:15"}}]},"condition":{"hexValue":"74727565","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2431,"nodeType":"WhileStatement","src":"820:280:15"},{"expression":{"id":2432,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1120:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2395,"id":2433,"nodeType":"Return","src":"1113:13:15"}]}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"352:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2436,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:15","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"value","nameLocation":"473:5:15","nodeType":"VariableDeclaration","scope":2436,"src":"465:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:15"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2436,"src":"503:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2393,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:15"},"scope":2606,"src":"447:696:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"1313:103:15","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1354:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:15","trueExpression":{"hexValue":"2d","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1400:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2455,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"1385:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3979_$","typeString":"type(library SignedMath)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3978,"src":"1385:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2454,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2436,2464],"referencedDeclaration":2436,"src":"1376:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2446,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2444,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:15","typeDescriptions":{}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2443,"id":2462,"nodeType":"Return","src":"1323:86:15"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"1149:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:15","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"value","nameLocation":"1268:5:15","nodeType":"VariableDeclaration","scope":2464,"src":"1261:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2438,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:15"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"1298:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2441,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:15"},"scope":2606,"src":"1243:173:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2483,"nodeType":"Block","src":"1595:100:15","statements":[{"id":2482,"nodeType":"UncheckedBlock","src":"1605:84:15","statements":[{"expression":{"arguments":[{"id":2473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1648:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2474,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"1655:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3874_$","typeString":"type(library Math)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3834,"src":"1655:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2484,2560,2580],"referencedDeclaration":2560,"src":"1636:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2471,"id":2481,"nodeType":"Return","src":"1629:49:15"}]}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"1422:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:15","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"value","nameLocation":"1550:5:15","nodeType":"VariableDeclaration","scope":2484,"src":"1542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:15"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"1580:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2469,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:15"},"scope":2606,"src":"1521:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"1908:347:15","statements":[{"assignments":[2495],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:15","nodeType":"VariableDeclaration","scope":2559,"src":"1918:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2494,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2504,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2499,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1954:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2496,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:15"},{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2505,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2507,"indexExpression":{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2510,"nodeType":"ExpressionStatement","src":"1975:15:15"},{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2511,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2000:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2513,"indexExpression":{"hexValue":"31","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2516,"nodeType":"ExpressionStatement","src":"2000:15:15"},{"body":{"id":2545,"nodeType":"Block","src":"2070:83:15","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2084:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2533,"indexExpression":{"id":2532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"2091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2534,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"2096:8:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2538,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2105:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2540,"nodeType":"ExpressionStatement","src":"2084:33:15"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2131:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"2131:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"2058:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"initializationExpression":{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"i","nameLocation":"2038:1:15","nodeType":"VariableDeclaration","scope":2546,"src":"2030:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2520,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:15"},"loopExpression":{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:15","subExpression":{"id":2528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"2067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ExpressionStatement","src":"2065:3:15"},"nodeType":"ForStatement","src":"2025:128:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2170:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"ExpressionStatement","src":"2162:55:15"},{"expression":{"arguments":[{"id":2556,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2554,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:15","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2493,"id":2558,"nodeType":"Return","src":"2227:21:15"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"1701:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:15","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"value","nameLocation":"1847:5:15","nodeType":"VariableDeclaration","scope":2560,"src":"1839:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"length","nameLocation":"1862:6:15","nodeType":"VariableDeclaration","scope":2560,"src":"1854:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:15"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1893:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2491,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:15"},"scope":2606,"src":"1818:437:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"2480:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2573,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2525:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2571,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2576,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"2533:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2568,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2484,2560,2580],"referencedDeclaration":2560,"src":"2497:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2567,"id":2578,"nodeType":"Return","src":"2490:59:15"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"2261:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:15","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"addr","nameLocation":"2436:4:15","nodeType":"VariableDeclaration","scope":2580,"src":"2428:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:15"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"2465:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:15"},"scope":2606,"src":"2407:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2604,"nodeType":"Block","src":"2711:66:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"2744:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2591,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:15","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2767:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2597,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:15","typeDescriptions":{}}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2596,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2589,"id":2603,"nodeType":"Return","src":"2721:49:15"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"2562:66:15","text":" @dev Returns true if the two strings are equal."},"id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:15","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"a","nameLocation":"2662:1:15","nodeType":"VariableDeclaration","scope":2605,"src":"2648:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2582,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"b","nameLocation":"2679:1:15","nodeType":"VariableDeclaration","scope":2605,"src":"2665:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2584,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:15"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2605,"src":"2705:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2587,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:15"},"scope":2606,"src":"2633:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2607,"src":"220:2559:15","usedErrors":[]}],"src":"101:2679:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2972],"Math":[3874],"SignedMath":[3979],"Strings":[2606]},"id":2973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2608,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2973,"sourceUnit":2607,"src":"137:24:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"163:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2972,"linearizedBaseContracts":[2972],"name":"ECDSA","nameLocation":"377:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2616,"members":[{"id":2611,"name":"NoError","nameLocation":"417:7:16","nodeType":"EnumValue","src":"417:7:16"},{"id":2612,"name":"InvalidSignature","nameLocation":"434:16:16","nodeType":"EnumValue","src":"434:16:16"},{"id":2613,"name":"InvalidSignatureLength","nameLocation":"460:22:16","nodeType":"EnumValue","src":"460:22:16"},{"id":2614,"name":"InvalidSignatureS","nameLocation":"492:17:16","nodeType":"EnumValue","src":"492:17:16"},{"id":2615,"name":"InvalidSignatureV","nameLocation":"519:17:16","nodeType":"EnumValue","src":"519:17:16"}],"name":"RecoverError","nameLocation":"394:12:16","nodeType":"EnumDefinition","src":"389:175:16"},{"body":{"id":2659,"nodeType":"Block","src":"624:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"638:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2623,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"647:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2611,"src":"647:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"734:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2629,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"743:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"743:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2637,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"843:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2638,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"852:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"852:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"965:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2647,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"974:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"974:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2655,"nodeType":"IfStatement","src":"961:114:16","trueBody":{"id":2654,"nodeType":"Block","src":"1006:69:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2650,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2653,"nodeType":"ExpressionStatement","src":"1020:44:16"}]}},"id":2656,"nodeType":"IfStatement","src":"839:236:16","trueBody":{"id":2645,"nodeType":"Block","src":"889:66:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2641,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2644,"nodeType":"ExpressionStatement","src":"903:41:16"}]}},"id":2657,"nodeType":"IfStatement","src":"730:345:16","trueBody":{"id":2636,"nodeType":"Block","src":"774:59:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2632,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2635,"nodeType":"ExpressionStatement","src":"788:34:16"}]}},"id":2658,"nodeType":"IfStatement","src":"634:441:16","trueBody":{"id":2627,"nodeType":"Block","src":"669:55:16","statements":[{"functionReturnParameters":2621,"id":2626,"nodeType":"Return","src":"683:7:16"}]}}]},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:16","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"error","nameLocation":"604:5:16","nodeType":"VariableDeclaration","scope":2660,"src":"591:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2618,"nodeType":"UserDefinedTypeName","pathNode":{"id":2617,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"591:12:16"},"referencedDeclaration":2616,"src":"591:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:16"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"624:0:16"},"scope":2972,"src":"570:511:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2705,"nodeType":"Block","src":"2249:626:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2673,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2263:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2703,"nodeType":"Block","src":"2788:81:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:16","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2699,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"2822:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"2822:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2672,"id":2702,"nodeType":"Return","src":"2802:56:16"}]},"id":2704,"nodeType":"IfStatement","src":"2259:610:16","trueBody":{"id":2694,"nodeType":"Block","src":"2287:495:16","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"r","nameLocation":"2309:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"2301:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2679,"nodeType":"VariableDeclarationStatement","src":"2301:9:16"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"s","nameLocation":"2332:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"2324:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2682,"nodeType":"VariableDeclarationStatement","src":"2324:9:16"},{"assignments":[2684],"declarations":[{"constant":false,"id":2684,"mutability":"mutable","name":"v","nameLocation":"2353:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"2347:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2683,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2685,"nodeType":"VariableDeclarationStatement","src":"2347:7:16"},{"AST":{"nodeType":"YulBlock","src":"2555:171:16","statements":[{"nodeType":"YulAssignment","src":"2573:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:16"},"nodeType":"YulFunctionCall","src":"2584:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:16"},"nodeType":"YulFunctionCall","src":"2578:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:16"}]},{"nodeType":"YulAssignment","src":"2622:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:16"},"nodeType":"YulFunctionCall","src":"2633:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:16"},"nodeType":"YulFunctionCall","src":"2627:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:16"}]},{"nodeType":"YulAssignment","src":"2671:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:16"},"nodeType":"YulFunctionCall","src":"2690:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:16"},"nodeType":"YulFunctionCall","src":"2684:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:16"},"nodeType":"YulFunctionCall","src":"2676:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2678,"isOffset":false,"isSlot":false,"src":"2573:1:16","valueSize":1},{"declaration":2681,"isOffset":false,"isSlot":false,"src":"2622:1:16","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"2588:9:16","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"2637:9:16","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"2694:9:16","valueSize":1},{"declaration":2684,"isOffset":false,"isSlot":false,"src":"2671:1:16","valueSize":1}],"id":2686,"nodeType":"InlineAssembly","src":"2546:180:16"},{"expression":{"arguments":[{"id":2688,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"2757:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2689,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"2763:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2690,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"2766:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2691,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"2769:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2687,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2780,2874],"referencedDeclaration":2874,"src":"2746:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2672,"id":2693,"nodeType":"Return","src":"2739:32:16"}]}}]},"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"1087:1053:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:16","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"hash","nameLocation":"2173:4:16","nodeType":"VariableDeclaration","scope":2706,"src":"2165:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"signature","nameLocation":"2192:9:16","nodeType":"VariableDeclaration","scope":2706,"src":"2179:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2664,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:16"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"2226:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"2235:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"2235:12:16"},"referencedDeclaration":2616,"src":"2235:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:16"},"scope":2972,"src":"2145:730:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2732,"nodeType":"Block","src":"3748:140:16","statements":[{"assignments":[2717,2720],"declarations":[{"constant":false,"id":2717,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:16","nodeType":"VariableDeclaration","scope":2732,"src":"3759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"error","nameLocation":"3791:5:16","nodeType":"VariableDeclaration","scope":2732,"src":"3778:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2719,"nodeType":"UserDefinedTypeName","pathNode":{"id":2718,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"3778:12:16"},"referencedDeclaration":2616,"src":"3778:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2725,"initialValue":{"arguments":[{"id":2722,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"3811:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2723,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"3817:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2721,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2780,2874],"referencedDeclaration":2706,"src":"3800:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:16"},{"expression":{"arguments":[{"id":2727,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3849:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}],"id":2726,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"3837:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2616_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"ExpressionStatement","src":"3837:18:16"},{"expression":{"id":2730,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"3872:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2715,"id":2731,"nodeType":"Return","src":"3865:16:16"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"2881:775:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:16","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"hash","nameLocation":"3686:4:16","nodeType":"VariableDeclaration","scope":2733,"src":"3678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"signature","nameLocation":"3705:9:16","nodeType":"VariableDeclaration","scope":2733,"src":"3692:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:16"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"3739:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:16"},"scope":2972,"src":"3661:227:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"4245:203:16","statements":[{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"s","nameLocation":"4263:1:16","nodeType":"VariableDeclaration","scope":2779,"src":"4255:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2756,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"4267:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:16"},{"assignments":[2758],"declarations":[{"constant":false,"id":2758,"mutability":"mutable","name":"v","nameLocation":"4363:1:16","nodeType":"VariableDeclaration","scope":2779,"src":"4357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2757,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2771,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2763,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"4382:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:16","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4374:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2759,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:16","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:16"},{"expression":{"arguments":[{"id":2773,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"4427:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2774,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"4433:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2775,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"4436:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2776,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"4439:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2772,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2780,2874],"referencedDeclaration":2874,"src":"4416:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4416:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2747,"id":2778,"nodeType":"Return","src":"4409:32:16"}]},"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"3894:243:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:16","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"hash","nameLocation":"4170:4:16","nodeType":"VariableDeclaration","scope":2780,"src":"4162:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"r","nameLocation":"4184:1:16","nodeType":"VariableDeclaration","scope":2780,"src":"4176:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"vs","nameLocation":"4195:2:16","nodeType":"VariableDeclaration","scope":2780,"src":"4187:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:16"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"4222:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"4231:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2745,"nodeType":"UserDefinedTypeName","pathNode":{"id":2744,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"4231:12:16"},"referencedDeclaration":2616,"src":"4231:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:16"},"scope":2972,"src":"4142:306:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"4699:136:16","statements":[{"assignments":[2793,2796],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:16","nodeType":"VariableDeclaration","scope":2809,"src":"4710:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"error","nameLocation":"4742:5:16","nodeType":"VariableDeclaration","scope":2809,"src":"4729:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2795,"nodeType":"UserDefinedTypeName","pathNode":{"id":2794,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"4729:12:16"},"referencedDeclaration":2616,"src":"4729:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2802,"initialValue":{"arguments":[{"id":2798,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"4762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2799,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"4768:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2800,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"4771:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2797,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2780,2874],"referencedDeclaration":2780,"src":"4751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4751:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:16"},{"expression":{"arguments":[{"id":2804,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"4796:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}],"id":2803,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"4784:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2616_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2806,"nodeType":"ExpressionStatement","src":"4784:18:16"},{"expression":{"id":2807,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"4819:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2791,"id":2808,"nodeType":"Return","src":"4812:16:16"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"4454:154:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:16","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"hash","nameLocation":"4638:4:16","nodeType":"VariableDeclaration","scope":2810,"src":"4630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"r","nameLocation":"4652:1:16","nodeType":"VariableDeclaration","scope":2810,"src":"4644:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"vs","nameLocation":"4663:2:16","nodeType":"VariableDeclaration","scope":2810,"src":"4655:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:16"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2810,"src":"4690:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:16"},"scope":2972,"src":"4613:222:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2873,"nodeType":"Block","src":"5120:1345:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2829,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"6016:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:16","typeDescriptions":{}}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6008:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"6004:161:16","trueBody":{"id":2841,"nodeType":"Block","src":"6089:76:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:16","typeDescriptions":{}}},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6111:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2837,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6123:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"6123:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2826,"id":2840,"nodeType":"Return","src":"6103:51:16"}]}},{"assignments":[2844],"declarations":[{"constant":false,"id":2844,"mutability":"mutable","name":"signer","nameLocation":"6267:6:16","nodeType":"VariableDeclaration","scope":2873,"src":"6259:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2851,"initialValue":{"arguments":[{"id":2846,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6286:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2847,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"6292:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2848,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6295:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2849,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"6298:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2845,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6276:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"6314:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:16","typeDescriptions":{}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6324:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"IfStatement","src":"6310:101:16","trueBody":{"id":2866,"nodeType":"Block","src":"6336:75:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:16","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2862,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6370:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"6370:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2826,"id":2865,"nodeType":"Return","src":"6350:50:16"}]}},{"expression":{"components":[{"id":2868,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"6429:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2869,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6437:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2616_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2611,"src":"6437:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"id":2871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2826,"id":2872,"nodeType":"Return","src":"6421:37:16"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"4841:163:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:16","nodeType":"FunctionDefinition","parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"hash","nameLocation":"5037:4:16","nodeType":"VariableDeclaration","scope":2874,"src":"5029:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"v","nameLocation":"5049:1:16","nodeType":"VariableDeclaration","scope":2874,"src":"5043:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2814,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"r","nameLocation":"5060:1:16","nodeType":"VariableDeclaration","scope":2874,"src":"5052:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"s","nameLocation":"5071:1:16","nodeType":"VariableDeclaration","scope":2874,"src":"5063:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:16"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2874,"src":"5097:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2874,"src":"5106:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"5106:12:16"},"referencedDeclaration":2616,"src":"5106:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:16"},"scope":2972,"src":"5009:1456:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2906,"nodeType":"Block","src":"6692:138:16","statements":[{"assignments":[2889,2892],"declarations":[{"constant":false,"id":2889,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:16","nodeType":"VariableDeclaration","scope":2906,"src":"6703:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"error","nameLocation":"6735:5:16","nodeType":"VariableDeclaration","scope":2906,"src":"6722:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2891,"nodeType":"UserDefinedTypeName","pathNode":{"id":2890,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"6722:12:16"},"referencedDeclaration":2616,"src":"6722:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[{"id":2894,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"6755:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2895,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"6761:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2896,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"6764:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2897,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6767:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2893,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2706,2780,2874],"referencedDeclaration":2874,"src":"6744:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2616_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:16"},{"expression":{"arguments":[{"id":2901,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"6791:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2616","typeString":"enum ECDSA.RecoverError"}],"id":2900,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2616_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6779:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"6779:18:16"},{"expression":{"id":2904,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"6814:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2887,"id":2905,"nodeType":"Return","src":"6807:16:16"}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"6471:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:16","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"hash","nameLocation":"6623:4:16","nodeType":"VariableDeclaration","scope":2907,"src":"6615:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"v","nameLocation":"6635:1:16","nodeType":"VariableDeclaration","scope":2907,"src":"6629:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2878,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"r","nameLocation":"6646:1:16","nodeType":"VariableDeclaration","scope":2907,"src":"6638:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"s","nameLocation":"6657:1:16","nodeType":"VariableDeclaration","scope":2907,"src":"6649:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:16"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2907,"src":"6683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:16"},"scope":2972,"src":"6598:232:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2916,"nodeType":"Block","src":"7206:310:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:16"},"nodeType":"YulFunctionCall","src":"7376:48:16"},"nodeType":"YulExpressionStatement","src":"7376:48:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:16","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:16"},"nodeType":"YulFunctionCall","src":"7437:18:16"},"nodeType":"YulExpressionStatement","src":"7437:18:16"},{"nodeType":"YulAssignment","src":"7468:32:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:16"},"nodeType":"YulFunctionCall","src":"7479:21:16"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2910,"isOffset":false,"isSlot":false,"src":"7450:4:16","valueSize":1},{"declaration":2913,"isOffset":false,"isSlot":false,"src":"7468:7:16","valueSize":1}],"id":2915,"nodeType":"InlineAssembly","src":"7353:157:16"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"6836:279:16","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:16","nodeType":"FunctionDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"hash","nameLocation":"7160:4:16","nodeType":"VariableDeclaration","scope":2917,"src":"7152:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:16"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"message","nameLocation":"7197:7:16","nodeType":"VariableDeclaration","scope":2917,"src":"7189:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:16"},"scope":2972,"src":"7120:396:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"7881:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2931,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"7976:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7976:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2929,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7959:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2606_$","typeString":"type(library Strings)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"7959:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2934,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"7987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2926,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2924,"id":2937,"nodeType":"Return","src":"7891:99:16"}]},"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"7522:274:16","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:16","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"s","nameLocation":"7846:1:16","nodeType":"VariableDeclaration","scope":2939,"src":"7833:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:16"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"7872:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:16"},"scope":2972,"src":"7801:196:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2950,"nodeType":"Block","src":"8443:290:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:16"},"nodeType":"YulFunctionCall","src":"8530:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:16"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:16"},"nodeType":"YulFunctionCall","src":"8554:23:16"},"nodeType":"YulExpressionStatement","src":"8554:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:16"},"nodeType":"YulFunctionCall","src":"8597:14:16"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:16"},"nodeType":"YulFunctionCall","src":"8590:39:16"},"nodeType":"YulExpressionStatement","src":"8590:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:16"},"nodeType":"YulFunctionCall","src":"8649:14:16"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:16"},"nodeType":"YulFunctionCall","src":"8642:34:16"},"nodeType":"YulExpressionStatement","src":"8642:34:16"},{"nodeType":"YulAssignment","src":"8689:28:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:16"},"nodeType":"YulFunctionCall","src":"8697:20:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2947,"isOffset":false,"isSlot":false,"src":"8689:4:16","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"8613:15:16","valueSize":1},{"declaration":2944,"isOffset":false,"isSlot":false,"src":"8665:10:16","valueSize":1}],"id":2949,"nodeType":"InlineAssembly","src":"8496:231:16"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"8003:328:16","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:16","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:16","nodeType":"VariableDeclaration","scope":2951,"src":"8361:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:16","nodeType":"VariableDeclaration","scope":2951,"src":"8386:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:16"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"data","nameLocation":"8437:4:16","nodeType":"VariableDeclaration","scope":2951,"src":"8429:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:16"},"scope":2972,"src":"8336:397:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"9048:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2965,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"9104:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2966,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"9115:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2962,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9075:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2960,"id":2969,"nodeType":"Return","src":"9058:63:16"}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"8739:193:16","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:16","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"validator","nameLocation":"8986:9:16","nodeType":"VariableDeclaration","scope":2971,"src":"8978:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"data","nameLocation":"9010:4:16","nodeType":"VariableDeclaration","scope":2971,"src":"8997:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2955,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:16"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"9039:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:16"},"scope":2972,"src":"8937:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2973,"src":"369:8761:16","usedErrors":[]}],"src":"112:9019:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2996],"IERC165":[3008]},"id":2997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2974,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2997,"sourceUnit":3009,"src":"124:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2977,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3008,"src":"754:7:17"},"id":2978,"nodeType":"InheritanceSpecifier","src":"754:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"149:576:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2996,"linearizedBaseContracts":[2996,3008],"name":"ERC165","nameLocation":"744:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3007],"body":{"id":2994,"nodeType":"Block","src":"920:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"937:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2989,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3008_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3008_$","typeString":"type(contract IERC165)"}],"id":2988,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3008","typeString":"type(contract IERC165)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2986,"id":2993,"nodeType":"Return","src":"930:47:17"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"768:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:17","nodeType":"FunctionDefinition","overrides":{"id":2983,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:17"},"parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:17","nodeType":"VariableDeclaration","scope":2995,"src":"856:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2980,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:17"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"914:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2984,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:17"},"scope":2996,"src":"829:155:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2997,"src":"726:260:17","usedErrors":[]}],"src":"99:888:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3008]},"id":3009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2998,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"125:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3008,"linearizedBaseContracts":[3008],"name":"IERC165","nameLocation":"415:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"429:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3007,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:18","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:18","nodeType":"VariableDeclaration","scope":3007,"src":"801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3001,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:18"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"844:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3004,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:18"},"scope":3008,"src":"774:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3009,"src":"405:447:18","usedErrors":[]}],"src":"100:753:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3874]},"id":3875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3010,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"128:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3874,"linearizedBaseContracts":[3874],"name":"Math","nameLocation":"210:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3015,"members":[{"id":3012,"name":"Down","nameLocation":"245:4:19","nodeType":"EnumValue","src":"245:4:19"},{"id":3013,"name":"Up","nameLocation":"287:2:19","nodeType":"EnumValue","src":"287:2:19"},{"id":3014,"name":"Zero","nameLocation":"318:4:19","nodeType":"EnumValue","src":"318:4:19"}],"name":"Rounding","nameLocation":"226:8:19","nodeType":"EnumDefinition","src":"221:122:19"},{"body":{"id":3032,"nodeType":"Block","src":"480:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3029,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"509:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:19","trueExpression":{"id":3028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3024,"id":3031,"nodeType":"Return","src":"490:20:19"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"349:59:19","text":" @dev Returns the largest of two numbers."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:19","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"a","nameLocation":"434:1:19","nodeType":"VariableDeclaration","scope":3033,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"b","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":3033,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3033,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":3874,"src":"413:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"655:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"676:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"684:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:19","trueExpression":{"id":3046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3042,"id":3049,"nodeType":"Return","src":"665:20:19"}]},"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"523:60:19","text":" @dev Returns the smallest of two numbers."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:19","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3051,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3051,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3051,"src":"646:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:19"},"scope":3874,"src":"588:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"876:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"935:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"941:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3060,"id":3072,"nodeType":"Return","src":"923:28:19"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"698:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:19","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"a","nameLocation":"830:1:19","nodeType":"VariableDeclaration","scope":3074,"src":"822:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"b","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":3074,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:19"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"867:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:19"},"scope":3874,"src":"805:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"1228:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"1339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:19","trueExpression":{"hexValue":"30","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3083,"id":3097,"nodeType":"Return","src":"1309:35:19"}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"964:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:19","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"a","nameLocation":"1182:1:19","nodeType":"VariableDeclaration","scope":3099,"src":"1174:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"b","nameLocation":"1193:1:19","nodeType":"VariableDeclaration","scope":3099,"src":"1185:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:19"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"1219:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:19"},"scope":3874,"src":"1157:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3221,"nodeType":"Block","src":"1765:4115:19","statements":[{"id":3220,"nodeType":"UncheckedBlock","src":"1775:4099:19","statements":[{"assignments":[3112],"declarations":[{"constant":false,"id":3112,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:19","nodeType":"VariableDeclaration","scope":3220,"src":"2096:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3113,"nodeType":"VariableDeclarationStatement","src":"2096:13:19"},{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:19","nodeType":"VariableDeclaration","scope":3220,"src":"2168:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3116,"nodeType":"VariableDeclarationStatement","src":"2168:13:19"},{"AST":{"nodeType":"YulBlock","src":"2248:157:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:19"},"nodeType":"YulFunctionCall","src":"2289:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:19"},"nodeType":"YulFunctionCall","src":"2276:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:19","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:19"},"nodeType":"YulFunctionCall","src":"2322:9:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:19"}]},{"nodeType":"YulAssignment","src":"2348:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:19"},"nodeType":"YulFunctionCall","src":"2361:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:19"},"nodeType":"YulFunctionCall","src":"2377:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:19"},"nodeType":"YulFunctionCall","src":"2357:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3112,"isOffset":false,"isSlot":false,"src":"2313:5:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"2369:5:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"2384:5:19","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"2348:5:19","valueSize":1},{"declaration":3102,"isOffset":false,"isSlot":false,"src":"2283:1:19","valueSize":1},{"declaration":3102,"isOffset":false,"isSlot":false,"src":"2326:1:19","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"2286:1:19","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"2329:1:19","valueSize":1}],"id":3117,"nodeType":"InlineAssembly","src":"2239:166:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"2486:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"2482:368:19","trueBody":{"id":3125,"nodeType":"Block","src":"2498:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2816:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3122,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"2824:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3110,"id":3124,"nodeType":"Return","src":"2809:26:19"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"2960:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3129,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"2974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"ExpressionStatement","src":"2952:53:19"},{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:19","nodeType":"VariableDeclaration","scope":3220,"src":"3261:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3136,"nodeType":"VariableDeclarationStatement","src":"3261:17:19"},{"AST":{"nodeType":"YulBlock","src":"3301:291:19","statements":[{"nodeType":"YulAssignment","src":"3370:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:19"},"nodeType":"YulFunctionCall","src":"3383:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:19"}]},{"nodeType":"YulAssignment","src":"3490:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:19"},"nodeType":"YulFunctionCall","src":"3510:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:19"},"nodeType":"YulFunctionCall","src":"3499:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:19"}]},{"nodeType":"YulAssignment","src":"3548:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:19"},"nodeType":"YulFunctionCall","src":"3557:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3106,"isOffset":false,"isSlot":false,"src":"3396:11:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"3524:5:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"3548:5:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"3561:5:19","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"3490:5:19","valueSize":1},{"declaration":3115,"isOffset":false,"isSlot":false,"src":"3503:5:19","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"3370:9:19","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"3513:9:19","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"3568:9:19","valueSize":1},{"declaration":3102,"isOffset":false,"isSlot":false,"src":"3390:1:19","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"3393:1:19","valueSize":1}],"id":3137,"nodeType":"InlineAssembly","src":"3292:300:19"},{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"twos","nameLocation":"3907:4:19","nodeType":"VariableDeclaration","scope":3220,"src":"3899:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3147,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3914:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:19","subExpression":{"id":3141,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3930:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:19"},{"AST":{"nodeType":"YulBlock","src":"3969:362:19","statements":[{"nodeType":"YulAssignment","src":"4034:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:19"},"nodeType":"YulFunctionCall","src":"4049:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:19"}]},{"nodeType":"YulAssignment","src":"4138:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:19"},"nodeType":"YulFunctionCall","src":"4147:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:19"}]},{"nodeType":"YulAssignment","src":"4278:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:19"},"nodeType":"YulFunctionCall","src":"4294:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:19"},"nodeType":"YulFunctionCall","src":"4290:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:19"},"nodeType":"YulFunctionCall","src":"4286:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3106,"isOffset":false,"isSlot":false,"src":"4034:11:19","valueSize":1},{"declaration":3106,"isOffset":false,"isSlot":false,"src":"4053:11:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"4138:5:19","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"4151:5:19","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"4066:4:19","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"4158:4:19","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"4278:4:19","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"4301:4:19","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"4308:4:19","valueSize":1}],"id":3148,"nodeType":"InlineAssembly","src":"3960:371:19"},{"expression":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"4406:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3151,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4414:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3154,"nodeType":"ExpressionStatement","src":"4397:21:19"},{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:19","nodeType":"VariableDeclaration","scope":3220,"src":"4736:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3163,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3158,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4759:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:19"},{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3164,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5007:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3167,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5021:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3171,"nodeType":"ExpressionStatement","src":"4992:36:19"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3172,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5061:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5076:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3175,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5090:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"5061:36:19"},{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5131:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5146:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3183,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3187,"nodeType":"ExpressionStatement","src":"5131:36:19"},{"expression":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3188,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5216:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3191,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3195,"nodeType":"ExpressionStatement","src":"5201:36:19"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3196,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5286:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3199,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5300:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"nodeType":"ExpressionStatement","src":"5271:36:19"},{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3204,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5342:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5357:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3207,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"nodeType":"ExpressionStatement","src":"5342:36:19"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"5812:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5821:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3214,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3217,"nodeType":"ExpressionStatement","src":"5812:24:19"},{"expression":{"id":3218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"5857:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3110,"id":3219,"nodeType":"Return","src":"5850:13:19"}]}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"1357:305:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:19","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"x","nameLocation":"1691:1:19","nodeType":"VariableDeclaration","scope":3222,"src":"1683:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"y","nameLocation":"1702:1:19","nodeType":"VariableDeclaration","scope":3222,"src":"1694:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:19","nodeType":"VariableDeclaration","scope":3222,"src":"1705:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:19"},"returnParameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"result","nameLocation":"1757:6:19","nodeType":"VariableDeclaration","scope":3222,"src":"1749:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:19"},"scope":3874,"src":"1667:4213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"6122:189:19","statements":[{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"result","nameLocation":"6140:6:19","nodeType":"VariableDeclaration","scope":3265,"src":"6132:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"arguments":[{"id":3240,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6156:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3241,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6159:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"6162:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3239,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3222,3266],"referencedDeclaration":3222,"src":"6149:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"6188:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3246,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"6200:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3015_$","typeString":"type(enum Math.Rounding)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"6200:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"src":"6188:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3251,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6225:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3252,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"6228:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3249,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"6184:98:19","trueBody":{"id":3261,"nodeType":"Block","src":"6246:36:19","statements":[{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6260:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"6260:11:19"}]}},{"expression":{"id":3263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3236,"id":3264,"nodeType":"Return","src":"6291:13:19"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"5886:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:19","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"x","nameLocation":"6036:1:19","nodeType":"VariableDeclaration","scope":3266,"src":"6028:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"y","nameLocation":"6047:1:19","nodeType":"VariableDeclaration","scope":3266,"src":"6039:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:19","nodeType":"VariableDeclaration","scope":3266,"src":"6050:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:19","nodeType":"VariableDeclaration","scope":3266,"src":"6071:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"typeName":{"id":3231,"nodeType":"UserDefinedTypeName","pathNode":{"id":3230,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3015,"src":"6071:8:19"},"referencedDeclaration":3015,"src":"6071:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:19"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3266,"src":"6113:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:19"},"scope":3874,"src":"6012:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"6587:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"6601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3280,"nodeType":"IfStatement","src":"6597:45:19","trueBody":{"id":3279,"nodeType":"Block","src":"6609:33:19","statements":[{"expression":{"hexValue":"30","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3273,"id":3278,"nodeType":"Return","src":"6623:8:19"}]}},{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"result","nameLocation":"7329:6:19","nodeType":"VariableDeclaration","scope":3377,"src":"7321:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3291,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7349:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3284,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3546,3582],"referencedDeclaration":3546,"src":"7344:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:19"},{"id":3376,"nodeType":"UncheckedBlock","src":"7758:408:19","statements":[{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7782:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7792:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7805:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"7782:35:19"},{"expression":{"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7831:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7841:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7850:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7854:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3313,"nodeType":"ExpressionStatement","src":"7831:35:19"},{"expression":{"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7890:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7899:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7903:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3324,"nodeType":"ExpressionStatement","src":"7880:35:19"},{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7929:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7939:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7948:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7952:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"7929:35:19"},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"7988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7997:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8001:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"7978:35:19"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8027:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8037:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"8046:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8050:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"8027:35:19"},{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8076:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8086:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"8095:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8099:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ExpressionStatement","src":"8076:35:19"},{"expression":{"arguments":[{"id":3370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8136:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"8144:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8148:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"8132:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3273,"id":3375,"nodeType":"Return","src":"8125:30:19"}]}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"6317:208:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:19","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"a","nameLocation":"6552:1:19","nodeType":"VariableDeclaration","scope":3378,"src":"6544:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:19"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"6578:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:19"},"scope":3874,"src":"6530:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"8348:161:19","statements":[{"id":3412,"nodeType":"UncheckedBlock","src":"8358:145:19","statements":[{"assignments":[3390],"declarations":[{"constant":false,"id":3390,"mutability":"mutable","name":"result","nameLocation":"8390:6:19","nodeType":"VariableDeclaration","scope":3412,"src":"8382:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3394,"initialValue":{"arguments":[{"id":3392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8404:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3391,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3378,3414],"referencedDeclaration":3378,"src":"8399:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"8427:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"8437:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3397,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"8449:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3015_$","typeString":"type(enum Math.Rounding)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"8449:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"src":"8437:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"8464:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"8473:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8482:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:19","trueExpression":{"hexValue":"31","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3388,"id":3411,"nodeType":"Return","src":"8420:72:19"}]}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"8178:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:19","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"a","nameLocation":"8294:1:19","nodeType":"VariableDeclaration","scope":3414,"src":"8286:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:19","nodeType":"VariableDeclaration","scope":3414,"src":"8297:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"typeName":{"id":3383,"nodeType":"UserDefinedTypeName","pathNode":{"id":3382,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3015,"src":"8297:8:19"},"referencedDeclaration":3015,"src":"8297:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:19"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"8339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:19"},"scope":3874,"src":"8272:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3545,"nodeType":"Block","src":"8694:922:19","statements":[{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"result","nameLocation":"8712:6:19","nodeType":"VariableDeclaration","scope":3545,"src":"8704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3425,"initialValue":{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:19"},{"id":3542,"nodeType":"UncheckedBlock","src":"8732:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"8760:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"8756:99:19","trueBody":{"id":3439,"nodeType":"Block","src":"8778:77:19","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"8796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3434,"nodeType":"ExpressionStatement","src":"8796:13:19"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"8827:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ExpressionStatement","src":"8827:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"8872:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"IfStatement","src":"8868:96:19","trueBody":{"id":3454,"nodeType":"Block","src":"8889:75:19","statements":[{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"8907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"8907:12:19"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"8937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"8937:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"8981:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3470,"nodeType":"IfStatement","src":"8977:96:19","trueBody":{"id":3469,"nodeType":"Block","src":"8998:75:19","statements":[{"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9016:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ExpressionStatement","src":"9016:12:19"},{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9046:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"9046:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9090:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"nodeType":"IfStatement","src":"9086:96:19","trueBody":{"id":3484,"nodeType":"Block","src":"9107:75:19","statements":[{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9125:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ExpressionStatement","src":"9125:12:19"},{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9155:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3483,"nodeType":"ExpressionStatement","src":"9155:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3500,"nodeType":"IfStatement","src":"9195:93:19","trueBody":{"id":3499,"nodeType":"Block","src":"9215:73:19","statements":[{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9233:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3494,"nodeType":"ExpressionStatement","src":"9233:11:19"},{"expression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9262:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3498,"nodeType":"ExpressionStatement","src":"9262:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9305:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3515,"nodeType":"IfStatement","src":"9301:93:19","trueBody":{"id":3514,"nodeType":"Block","src":"9321:73:19","statements":[{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9339:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"9339:11:19"},{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9368:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"9368:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9411:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"9407:93:19","trueBody":{"id":3529,"nodeType":"Block","src":"9427:73:19","statements":[{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ExpressionStatement","src":"9445:11:19"},{"expression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9474:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3528,"nodeType":"ExpressionStatement","src":"9474:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9517:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3541,"nodeType":"IfStatement","src":"9513:64:19","trueBody":{"id":3540,"nodeType":"Block","src":"9533:44:19","statements":[{"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3539,"nodeType":"ExpressionStatement","src":"9551:11:19"}]}}]},{"expression":{"id":3543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"9603:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3421,"id":3544,"nodeType":"Return","src":"9596:13:19"}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"8515:113:19","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:19","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"value","nameLocation":"8655:5:19","nodeType":"VariableDeclaration","scope":3546,"src":"8647:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:19"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"8685:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:19"},"scope":3874,"src":"8633:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3581,"nodeType":"Block","src":"9849:165:19","statements":[{"id":3580,"nodeType":"UncheckedBlock","src":"9859:149:19","statements":[{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"result","nameLocation":"9891:6:19","nodeType":"VariableDeclaration","scope":3580,"src":"9883:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"arguments":[{"id":3560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3559,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3546,3582],"referencedDeclaration":3546,"src":"9900:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"9932:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9942:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3565,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"9954:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3015_$","typeString":"type(enum Math.Rounding)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"9954:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"src":"9942:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"9974:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:19","trueExpression":{"hexValue":"31","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3556,"id":3579,"nodeType":"Return","src":"9925:72:19"}]}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"9622:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:19","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"value","nameLocation":"9791:5:19","nodeType":"VariableDeclaration","scope":3582,"src":"9783:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:19","nodeType":"VariableDeclaration","scope":3582,"src":"9798:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"typeName":{"id":3551,"nodeType":"UserDefinedTypeName","pathNode":{"id":3550,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3015,"src":"9798:8:19"},"referencedDeclaration":3015,"src":"9798:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:19"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"9840:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:19"},"scope":3874,"src":"9769:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3710,"nodeType":"Block","src":"10201:854:19","statements":[{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"result","nameLocation":"10219:6:19","nodeType":"VariableDeclaration","scope":3710,"src":"10211:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3593,"initialValue":{"hexValue":"30","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:19"},{"id":3707,"nodeType":"UncheckedBlock","src":"10239:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3610,"nodeType":"IfStatement","src":"10263:103:19","trueBody":{"id":3609,"nodeType":"Block","src":"10286:80:19","statements":[{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10304:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"10304:17:19"},{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10339:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3608,"nodeType":"ExpressionStatement","src":"10339:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10383:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3627,"nodeType":"IfStatement","src":"10379:103:19","trueBody":{"id":3626,"nodeType":"Block","src":"10402:80:19","statements":[{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10420:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"10420:17:19"},{"expression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10455:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3625,"nodeType":"ExpressionStatement","src":"10455:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10499:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3644,"nodeType":"IfStatement","src":"10495:103:19","trueBody":{"id":3643,"nodeType":"Block","src":"10518:80:19","statements":[{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10536:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"10536:17:19"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10571:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3642,"nodeType":"ExpressionStatement","src":"10571:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10615:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3661,"nodeType":"IfStatement","src":"10611:100:19","trueBody":{"id":3660,"nodeType":"Block","src":"10633:78:19","statements":[{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10651:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"10651:16:19"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"10685:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"IfStatement","src":"10724:100:19","trueBody":{"id":3677,"nodeType":"Block","src":"10746:78:19","statements":[{"expression":{"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10764:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3672,"nodeType":"ExpressionStatement","src":"10764:16:19"},{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10798:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3676,"nodeType":"ExpressionStatement","src":"10798:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10841:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3695,"nodeType":"IfStatement","src":"10837:100:19","trueBody":{"id":3694,"nodeType":"Block","src":"10859:78:19","statements":[{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10877:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3689,"nodeType":"ExpressionStatement","src":"10877:16:19"},{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"10911:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10954:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"10950:66:19","trueBody":{"id":3705,"nodeType":"Block","src":"10972:44:19","statements":[{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"10990:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3704,"nodeType":"ExpressionStatement","src":"10990:11:19"}]}}]},{"expression":{"id":3708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"11042:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3589,"id":3709,"nodeType":"Return","src":"11035:13:19"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"10020:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:19","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"value","nameLocation":"10162:5:19","nodeType":"VariableDeclaration","scope":3711,"src":"10154:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:19"},"returnParameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"10192:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:19"},"scope":3874,"src":"10139:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"11290:167:19","statements":[{"id":3745,"nodeType":"UncheckedBlock","src":"11300:151:19","statements":[{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"result","nameLocation":"11332:6:19","nodeType":"VariableDeclaration","scope":3745,"src":"11324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3727,"initialValue":{"arguments":[{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"11347:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3724,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3711,3747],"referencedDeclaration":3711,"src":"11341:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11384:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3730,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11396:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3015_$","typeString":"type(enum Math.Rounding)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"11396:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"src":"11384:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11417:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"11426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:19","trueExpression":{"hexValue":"31","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3721,"id":3744,"nodeType":"Return","src":"11367:73:19"}]}]},"documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"11061:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:19","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"value","nameLocation":"11232:5:19","nodeType":"VariableDeclaration","scope":3747,"src":"11224:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:19","nodeType":"VariableDeclaration","scope":3747,"src":"11239:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"typeName":{"id":3716,"nodeType":"UserDefinedTypeName","pathNode":{"id":3715,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3015,"src":"11239:8:19"},"referencedDeclaration":3015,"src":"11239:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:19"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3747,"src":"11281:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:19"},"scope":3874,"src":"11209:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"11771:600:19","statements":[{"assignments":[3756],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"result","nameLocation":"11789:6:19","nodeType":"VariableDeclaration","scope":3833,"src":"11781:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3758,"initialValue":{"hexValue":"30","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:19"},{"id":3830,"nodeType":"UncheckedBlock","src":"11809:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11837:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3773,"nodeType":"IfStatement","src":"11833:98:19","trueBody":{"id":3772,"nodeType":"Block","src":"11855:76:19","statements":[{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"11873:13:19"},{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"11904:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"11904:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"IfStatement","src":"11944:95:19","trueBody":{"id":3787,"nodeType":"Block","src":"11965:74:19","statements":[{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3782,"nodeType":"ExpressionStatement","src":"11983:12:19"},{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12013:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ExpressionStatement","src":"12013:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12056:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3803,"nodeType":"IfStatement","src":"12052:95:19","trueBody":{"id":3802,"nodeType":"Block","src":"12073:74:19","statements":[{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12091:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"12091:12:19"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12121:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"12121:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"12160:95:19","trueBody":{"id":3817,"nodeType":"Block","src":"12181:74:19","statements":[{"expression":{"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"nodeType":"ExpressionStatement","src":"12199:12:19"},{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12229:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"12229:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3829,"nodeType":"IfStatement","src":"12268:64:19","trueBody":{"id":3828,"nodeType":"Block","src":"12288:44:19","statements":[{"expression":{"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12306:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3827,"nodeType":"ExpressionStatement","src":"12306:11:19"}]}}]},{"expression":{"id":3831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12358:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3754,"id":3832,"nodeType":"Return","src":"12351:13:19"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"11463:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:19","nodeType":"FunctionDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"value","nameLocation":"11732:5:19","nodeType":"VariableDeclaration","scope":3834,"src":"11724:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:19"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"11762:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:19"},"scope":3874,"src":"11708:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3872,"nodeType":"Block","src":"12608:174:19","statements":[{"id":3871,"nodeType":"UncheckedBlock","src":"12618:158:19","statements":[{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"result","nameLocation":"12650:6:19","nodeType":"VariableDeclaration","scope":3871,"src":"12642:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3850,"initialValue":{"arguments":[{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3834,3873],"referencedDeclaration":3834,"src":"12659:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"12693:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"12703:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3853,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"12715:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3015_$","typeString":"type(enum Math.Rounding)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"12715:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"src":"12703:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"12736:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12751:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:19","trueExpression":{"hexValue":"31","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3844,"id":3870,"nodeType":"Return","src":"12686:79:19"}]}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"12377:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:19","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"value","nameLocation":"12550:5:19","nodeType":"VariableDeclaration","scope":3873,"src":"12542:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:19","nodeType":"VariableDeclaration","scope":3873,"src":"12557:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"},"typeName":{"id":3839,"nodeType":"UserDefinedTypeName","pathNode":{"id":3838,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3015,"src":"12557:8:19"},"referencedDeclaration":3015,"src":"12557:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3015","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:19"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3873,"src":"12599:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:19"},"scope":3874,"src":"12526:256:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3875,"src":"202:12582:19","usedErrors":[]}],"src":"103:12682:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3979]},"id":3980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3876,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"134:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3979,"linearizedBaseContracts":[3979],"name":"SignedMath","nameLocation":"223:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3894,"nodeType":"Block","src":"375:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"392:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"396:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"404:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:20","trueExpression":{"id":3890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"400:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3886,"id":3893,"nodeType":"Return","src":"385:20:20"}]},"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"240:66:20","text":" @dev Returns the largest of two signed numbers."},"id":3895,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:20","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"a","nameLocation":"331:1:20","nodeType":"VariableDeclaration","scope":3895,"src":"324:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3879,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"b","nameLocation":"341:1:20","nodeType":"VariableDeclaration","scope":3895,"src":"334:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3881,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:20"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3895,"src":"367:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3884,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:20"},"scope":3979,"src":"311:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3912,"nodeType":"Block","src":"554:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"571:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3906,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"575:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"583:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:20","trueExpression":{"id":3908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"579:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3904,"id":3911,"nodeType":"Return","src":"564:20:20"}]},"documentation":{"id":3896,"nodeType":"StructuredDocumentation","src":"418:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:20","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"a","nameLocation":"510:1:20","nodeType":"VariableDeclaration","scope":3913,"src":"503:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3897,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"b","nameLocation":"520:1:20","nodeType":"VariableDeclaration","scope":3913,"src":"513:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3899,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:20"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"546:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3902,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:20"},"scope":3979,"src":"490:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"796:162:20","statements":[{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"x","nameLocation":"865:1:20","nodeType":"VariableDeclaration","scope":3956,"src":"858:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3923,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3937,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"870:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"874:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"881:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"885:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"910:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3943,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"930:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:20","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3939,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:20","typeDescriptions":{}}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"944:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"948:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3922,"id":3955,"nodeType":"Return","src":"903:48:20"}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"597:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:20","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"a","nameLocation":"752:1:20","nodeType":"VariableDeclaration","scope":3957,"src":"745:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3915,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"b","nameLocation":"762:1:20","nodeType":"VariableDeclaration","scope":3957,"src":"755:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3917,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:20"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"788:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3920,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:20"},"scope":3979,"src":"728:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"1102:158:20","statements":[{"id":3976,"nodeType":"UncheckedBlock","src":"1112:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1227:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:20","subExpression":{"id":3971,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1241:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:20","trueExpression":{"id":3970,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1236:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:20","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3964,"id":3975,"nodeType":"Return","src":"1212:31:20"}]}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"964:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:20","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"n","nameLocation":"1067:1:20","nodeType":"VariableDeclaration","scope":3978,"src":"1060:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3959,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:20"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"1093:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:20"},"scope":3979,"src":"1047:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3980,"src":"215:1047:20","usedErrors":[]}],"src":"109:1154:20"},"id":20},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4592]},"id":4593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3981,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"230:1098:21","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4592,"linearizedBaseContracts":[4592],"name":"EnumerableSet","nameLocation":"1337:13:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3990,"members":[{"constant":false,"id":3985,"mutability":"mutable","name":"_values","nameLocation":"1861:7:21","nodeType":"VariableDeclaration","scope":3990,"src":"1851:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3984,"nodeType":"ArrayTypeName","src":"1851:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:21","nodeType":"VariableDeclaration","scope":3990,"src":"2001:36:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3988,"keyType":{"id":3986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:21","nodeType":"StructDefinition","scope":4592,"src":"1797:247:21","visibility":"public"},{"body":{"id":4031,"nodeType":"Block","src":"2283:335:21","statements":[{"condition":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:21","subExpression":{"arguments":[{"id":4002,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"2308:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":4003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"2313:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4001,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2298:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4029,"nodeType":"Block","src":"2575:37:21","statements":[{"expression":{"hexValue":"66616c7365","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4000,"id":4028,"nodeType":"Return","src":"2589:12:21"}]},"id":4030,"nodeType":"IfStatement","src":"2293:319:21","trueBody":{"id":4026,"nodeType":"Block","src":"2321:248:21","statements":[{"expression":{"arguments":[{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"2352:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4006,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"2335:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"2335:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2335:16:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4013,"nodeType":"ExpressionStatement","src":"2335:23:21"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4014,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"2493:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"2493:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4018,"indexExpression":{"id":4016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"2506:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4019,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"2515:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"2515:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2515:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"2493:40:21"},{"expression":{"hexValue":"74727565","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4000,"id":4025,"nodeType":"Return","src":"2547:11:21"}]}}]},"documentation":{"id":3991,"nodeType":"StructuredDocumentation","src":"2050:159:21","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:21","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"set","nameLocation":"2240:3:21","nodeType":"VariableDeclaration","scope":4032,"src":"2228:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3993,"nodeType":"UserDefinedTypeName","pathNode":{"id":3992,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"2228:3:21"},"referencedDeclaration":3990,"src":"2228:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"value","nameLocation":"2253:5:21","nodeType":"VariableDeclaration","scope":4032,"src":"2245:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:21"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4032,"src":"2277:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3998,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:21"},"scope":4592,"src":"2214:404:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4115,"nodeType":"Block","src":"2858:1316:21","statements":[{"assignments":[4044],"declarations":[{"constant":false,"id":4044,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:21","nodeType":"VariableDeclaration","scope":4115,"src":"2968:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4049,"initialValue":{"baseExpression":{"expression":{"id":4045,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"2989:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"2989:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4048,"indexExpression":{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"3002:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"3023:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4113,"nodeType":"Block","src":"4131:37:21","statements":[{"expression":{"hexValue":"66616c7365","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4042,"id":4112,"nodeType":"Return","src":"4145:12:21"}]},"id":4114,"nodeType":"IfStatement","src":"3019:1149:21","trueBody":{"id":4110,"nodeType":"Block","src":"3040:1085:21","statements":[{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:21","nodeType":"VariableDeclaration","scope":4110,"src":"3392:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4058,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"3416:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:21"},{"assignments":[4060],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:21","nodeType":"VariableDeclaration","scope":4110,"src":"3444:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4066,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4061,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"3464:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"3464:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3464:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"3505:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4068,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3518:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4094,"nodeType":"IfStatement","src":"3501:398:21","trueBody":{"id":4093,"nodeType":"Block","src":"3533:366:21","statements":[{"assignments":[4071],"declarations":[{"constant":false,"id":4071,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:21","nodeType":"VariableDeclaration","scope":4093,"src":"3551:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4076,"initialValue":{"baseExpression":{"expression":{"id":4072,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"3571:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"3571:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4075,"indexExpression":{"id":4074,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"3583:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:21"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4077,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"3693:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"3693:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4081,"indexExpression":{"id":4079,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3705:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4082,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"3722:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4084,"nodeType":"ExpressionStatement","src":"3693:38:21"},{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4085,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"3805:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"3805:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4089,"indexExpression":{"id":4087,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"3818:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4090,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"3831:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"3805:36:21"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"3977:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"3977:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3977:15:21","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"ExpressionStatement","src":"3977:17:21"},{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:21","subExpression":{"baseExpression":{"expression":{"id":4102,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"4069:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"4069:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4105,"indexExpression":{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4082:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4107,"nodeType":"ExpressionStatement","src":"4062:26:21"},{"expression":{"hexValue":"74727565","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4042,"id":4109,"nodeType":"Return","src":"4103:11:21"}]}}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"2624:157:21","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:21","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"set","nameLocation":"2815:3:21","nodeType":"VariableDeclaration","scope":4116,"src":"2803:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4035,"nodeType":"UserDefinedTypeName","pathNode":{"id":4034,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"2803:3:21"},"referencedDeclaration":3990,"src":"2803:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"value","nameLocation":"2828:5:21","nodeType":"VariableDeclaration","scope":4116,"src":"2820:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:21"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"2852:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4040,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:21"},"scope":4592,"src":"2786:1388:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4134,"nodeType":"Block","src":"4334:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4127,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"4351:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"4351:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4130,"indexExpression":{"id":4129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"4364:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4126,"id":4133,"nodeType":"Return","src":"4344:31:21"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"4180:70:21","text":" @dev Returns true if the value is in the set. O(1)."},"id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:21","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"set","nameLocation":"4286:3:21","nodeType":"VariableDeclaration","scope":4135,"src":"4274:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4119,"nodeType":"UserDefinedTypeName","pathNode":{"id":4118,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"4274:3:21"},"referencedDeclaration":3990,"src":"4274:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"value","nameLocation":"4299:5:21","nodeType":"VariableDeclaration","scope":4135,"src":"4291:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:21"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4135,"src":"4328:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4124,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:21"},"scope":4592,"src":"4255:127:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4148,"nodeType":"Block","src":"4528:42:21","statements":[{"expression":{"expression":{"expression":{"id":4144,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"4545:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"4545:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4545:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4143,"id":4147,"nodeType":"Return","src":"4538:25:21"}]},"documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"4388:70:21","text":" @dev Returns the number of values on the set. O(1)."},"id":4149,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:21","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"set","nameLocation":"4492:3:21","nodeType":"VariableDeclaration","scope":4149,"src":"4480:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4138,"nodeType":"UserDefinedTypeName","pathNode":{"id":4137,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"4480:3:21"},"referencedDeclaration":3990,"src":"4480:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:21"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4149,"src":"4519:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:21"},"scope":4592,"src":"4463:107:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4165,"nodeType":"Block","src":"4988:42:21","statements":[{"expression":{"baseExpression":{"expression":{"id":4160,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"5005:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"5005:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4163,"indexExpression":{"id":4162,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"5017:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4159,"id":4164,"nodeType":"Return","src":"4998:25:21"}]},"documentation":{"id":4150,"nodeType":"StructuredDocumentation","src":"4576:331:21","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:21","nodeType":"FunctionDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"set","nameLocation":"4937:3:21","nodeType":"VariableDeclaration","scope":4166,"src":"4925:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4152,"nodeType":"UserDefinedTypeName","pathNode":{"id":4151,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"4925:3:21"},"referencedDeclaration":3990,"src":"4925:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"index","nameLocation":"4950:5:21","nodeType":"VariableDeclaration","scope":4166,"src":"4942:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:21"},"returnParameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"4979:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:21"},"scope":4592,"src":"4912:118:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4179,"nodeType":"Block","src":"5644:35:21","statements":[{"expression":{"expression":{"id":4176,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5661:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"5661:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":4175,"id":4178,"nodeType":"Return","src":"5654:18:21"}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"5036:529:21","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4180,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:21","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"set","nameLocation":"5599:3:21","nodeType":"VariableDeclaration","scope":4180,"src":"5587:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"5587:3:21"},"referencedDeclaration":3990,"src":"5587:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:21"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4180,"src":"5626:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4173,"nodeType":"ArrayTypeName","src":"5626:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:21"},"scope":4592,"src":"5570:109:21","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":4184,"members":[{"constant":false,"id":4183,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:21","nodeType":"VariableDeclaration","scope":4184,"src":"5732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"5732:3:21"},"referencedDeclaration":3990,"src":"5732:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:21","nodeType":"StructDefinition","scope":4592,"src":"5704:45:21","visibility":"public"},{"body":{"id":4201,"nodeType":"Block","src":"5995:47:21","statements":[{"expression":{"arguments":[{"expression":{"id":4196,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"6017:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"6017:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"6029:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4195,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"6012:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4194,"id":4200,"nodeType":"Return","src":"6005:30:21"}]},"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"5755:159:21","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:21","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"set","nameLocation":"5951:3:21","nodeType":"VariableDeclaration","scope":4202,"src":"5932:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4187,"nodeType":"UserDefinedTypeName","pathNode":{"id":4186,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"5932:10:21"},"referencedDeclaration":4184,"src":"5932:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"value","nameLocation":"5964:5:21","nodeType":"VariableDeclaration","scope":4202,"src":"5956:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:21"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4202,"src":"5989:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4192,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:21"},"scope":4592,"src":"5919:123:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4219,"nodeType":"Block","src":"6289:50:21","statements":[{"expression":{"arguments":[{"expression":{"id":4214,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"6314:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"6314:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"6326:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4213,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"6306:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4212,"id":4218,"nodeType":"Return","src":"6299:33:21"}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"6048:157:21","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:21","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"set","nameLocation":"6245:3:21","nodeType":"VariableDeclaration","scope":4220,"src":"6226:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4205,"nodeType":"UserDefinedTypeName","pathNode":{"id":4204,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"6226:10:21"},"referencedDeclaration":4184,"src":"6226:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"value","nameLocation":"6258:5:21","nodeType":"VariableDeclaration","scope":4220,"src":"6250:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:21"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4220,"src":"6283:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4210,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:21"},"scope":4592,"src":"6210:129:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4237,"nodeType":"Block","src":"6506:52:21","statements":[{"expression":{"arguments":[{"expression":{"id":4232,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"6533:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"6533:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"6545:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4231,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6523:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4230,"id":4236,"nodeType":"Return","src":"6516:35:21"}]},"documentation":{"id":4221,"nodeType":"StructuredDocumentation","src":"6345:70:21","text":" @dev Returns true if the value is in the set. O(1)."},"id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:21","nodeType":"FunctionDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"set","nameLocation":"6457:3:21","nodeType":"VariableDeclaration","scope":4238,"src":"6438:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4223,"nodeType":"UserDefinedTypeName","pathNode":{"id":4222,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"6438:10:21"},"referencedDeclaration":4184,"src":"6438:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"value","nameLocation":"6470:5:21","nodeType":"VariableDeclaration","scope":4238,"src":"6462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:21"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4238,"src":"6500:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4228,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:21"},"scope":4592,"src":"6420:138:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"6711:43:21","statements":[{"expression":{"arguments":[{"expression":{"id":4248,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"6736:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"6736:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4247,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6728:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6728:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4246,"id":4251,"nodeType":"Return","src":"6721:26:21"}]},"documentation":{"id":4239,"nodeType":"StructuredDocumentation","src":"6564:70:21","text":" @dev Returns the number of values in the set. O(1)."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:21","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"set","nameLocation":"6674:3:21","nodeType":"VariableDeclaration","scope":4253,"src":"6655:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4241,"nodeType":"UserDefinedTypeName","pathNode":{"id":4240,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"6655:10:21"},"referencedDeclaration":4184,"src":"6655:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:21"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"6702:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:21"},"scope":4592,"src":"6639:115:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4270,"nodeType":"Block","src":"7179:46:21","statements":[{"expression":{"arguments":[{"expression":{"id":4265,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"7200:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"7200:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4267,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7212:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4264,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7196:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4263,"id":4269,"nodeType":"Return","src":"7189:29:21"}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"6760:331:21","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:21","nodeType":"FunctionDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"set","nameLocation":"7127:3:21","nodeType":"VariableDeclaration","scope":4271,"src":"7108:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"7108:10:21"},"referencedDeclaration":4184,"src":"7108:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"index","nameLocation":"7140:5:21","nodeType":"VariableDeclaration","scope":4271,"src":"7132:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:21"},"returnParameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"7170:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:21"},"scope":4592,"src":"7096:129:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"7846:219:21","statements":[{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"store","nameLocation":"7873:5:21","nodeType":"VariableDeclaration","scope":4300,"src":"7856:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4284,"nodeType":"ArrayTypeName","src":"7856:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4290,"initialValue":{"arguments":[{"expression":{"id":4287,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"7889:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"7889:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4286,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"7881:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7881:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:21"},{"assignments":[4295],"declarations":[{"constant":false,"id":4295,"mutability":"mutable","name":"result","nameLocation":"7927:6:21","nodeType":"VariableDeclaration","scope":4300,"src":"7910:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4294,"nodeType":"ArrayTypeName","src":"7910:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4296,"nodeType":"VariableDeclarationStatement","src":"7910:23:21"},{"AST":{"nodeType":"YulBlock","src":"7996:39:21","statements":[{"nodeType":"YulAssignment","src":"8010:15:21","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4295,"isOffset":false,"isSlot":false,"src":"8010:6:21","valueSize":1},{"declaration":4285,"isOffset":false,"isSlot":false,"src":"8020:5:21","valueSize":1}],"id":4297,"nodeType":"InlineAssembly","src":"7987:48:21"},{"expression":{"id":4298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"8052:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4280,"id":4299,"nodeType":"Return","src":"8045:13:21"}]},"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"7231:529:21","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:21","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"set","nameLocation":"7800:3:21","nodeType":"VariableDeclaration","scope":4301,"src":"7781:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4274,"nodeType":"UserDefinedTypeName","pathNode":{"id":4273,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"7781:10:21"},"referencedDeclaration":4184,"src":"7781:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4184_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:21"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"7828:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4278,"nodeType":"ArrayTypeName","src":"7828:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:21"},"scope":4592,"src":"7765:300:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":4305,"members":[{"constant":false,"id":4304,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:21","nodeType":"VariableDeclaration","scope":4305,"src":"8118:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4303,"nodeType":"UserDefinedTypeName","pathNode":{"id":4302,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"8118:3:21"},"referencedDeclaration":3990,"src":"8118:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:21","nodeType":"StructDefinition","scope":4592,"src":"8090:45:21","visibility":"public"},{"body":{"id":4331,"nodeType":"Block","src":"8381:74:21","statements":[{"expression":{"arguments":[{"expression":{"id":4317,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"8403:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"8403:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"8439:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4323,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:21","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:21","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:21","typeDescriptions":{}}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4316,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"8398:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8398:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4315,"id":4330,"nodeType":"Return","src":"8391:57:21"}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"8141:159:21","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:21","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"set","nameLocation":"8337:3:21","nodeType":"VariableDeclaration","scope":4332,"src":"8318:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4308,"nodeType":"UserDefinedTypeName","pathNode":{"id":4307,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"8318:10:21"},"referencedDeclaration":4305,"src":"8318:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"value","nameLocation":"8350:5:21","nodeType":"VariableDeclaration","scope":4332,"src":"8342:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:21"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"8375:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4313,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:21"},"scope":4592,"src":"8305:150:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4358,"nodeType":"Block","src":"8702:77:21","statements":[{"expression":{"arguments":[{"expression":{"id":4344,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"8727:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"8727:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"8763:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4350,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:21","typeDescriptions":{}}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:21","typeDescriptions":{}}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:21","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4343,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"8719:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4342,"id":4357,"nodeType":"Return","src":"8712:60:21"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"8461:157:21","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4359,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:21","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"set","nameLocation":"8658:3:21","nodeType":"VariableDeclaration","scope":4359,"src":"8639:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4335,"nodeType":"UserDefinedTypeName","pathNode":{"id":4334,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"8639:10:21"},"referencedDeclaration":4305,"src":"8639:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"value","nameLocation":"8671:5:21","nodeType":"VariableDeclaration","scope":4359,"src":"8663:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4337,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:21"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4359,"src":"8696:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4340,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:21"},"scope":4592,"src":"8623:156:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4385,"nodeType":"Block","src":"8946:79:21","statements":[{"expression":{"arguments":[{"expression":{"id":4371,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"8973:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"8973:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9009:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4377,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:21","typeDescriptions":{}}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:21","typeDescriptions":{}}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:21","typeDescriptions":{}}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4370,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"8963:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4369,"id":4384,"nodeType":"Return","src":"8956:62:21"}]},"documentation":{"id":4360,"nodeType":"StructuredDocumentation","src":"8785:70:21","text":" @dev Returns true if the value is in the set. O(1)."},"id":4386,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:21","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"set","nameLocation":"8897:3:21","nodeType":"VariableDeclaration","scope":4386,"src":"8878:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4362,"nodeType":"UserDefinedTypeName","pathNode":{"id":4361,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"8878:10:21"},"referencedDeclaration":4305,"src":"8878:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"value","nameLocation":"8910:5:21","nodeType":"VariableDeclaration","scope":4386,"src":"8902:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4364,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:21"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4386,"src":"8940:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4367,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:21"},"scope":4592,"src":"8860:165:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4400,"nodeType":"Block","src":"9178:43:21","statements":[{"expression":{"arguments":[{"expression":{"id":4396,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"9203:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"9203:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4395,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"9195:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4394,"id":4399,"nodeType":"Return","src":"9188:26:21"}]},"documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"9031:70:21","text":" @dev Returns the number of values in the set. O(1)."},"id":4401,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:21","nodeType":"FunctionDefinition","parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"set","nameLocation":"9141:3:21","nodeType":"VariableDeclaration","scope":4401,"src":"9122:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4389,"nodeType":"UserDefinedTypeName","pathNode":{"id":4388,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"9122:10:21"},"referencedDeclaration":4305,"src":"9122:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:21"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4401,"src":"9169:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:21"},"scope":4592,"src":"9106:115:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4427,"nodeType":"Block","src":"9646:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4419,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"9691:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"9691:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4421,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"9703:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4418,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"9687:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:21","typeDescriptions":{}}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4414,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:21","typeDescriptions":{}}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4412,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:21","typeDescriptions":{}}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4411,"id":4426,"nodeType":"Return","src":"9656:56:21"}]},"documentation":{"id":4402,"nodeType":"StructuredDocumentation","src":"9227:331:21","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4428,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:21","nodeType":"FunctionDefinition","parameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"set","nameLocation":"9594:3:21","nodeType":"VariableDeclaration","scope":4428,"src":"9575:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4404,"nodeType":"UserDefinedTypeName","pathNode":{"id":4403,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"9575:10:21"},"referencedDeclaration":4305,"src":"9575:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4407,"mutability":"mutable","name":"index","nameLocation":"9607:5:21","nodeType":"VariableDeclaration","scope":4428,"src":"9599:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:21"},"returnParameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4428,"src":"9637:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4409,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:21"},"scope":4592,"src":"9563:156:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4457,"nodeType":"Block","src":"10340:219:21","statements":[{"assignments":[4442],"declarations":[{"constant":false,"id":4442,"mutability":"mutable","name":"store","nameLocation":"10367:5:21","nodeType":"VariableDeclaration","scope":4457,"src":"10350:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4441,"nodeType":"ArrayTypeName","src":"10350:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4447,"initialValue":{"arguments":[{"expression":{"id":4444,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10383:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"10383:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4443,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10375:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:21"},{"assignments":[4452],"declarations":[{"constant":false,"id":4452,"mutability":"mutable","name":"result","nameLocation":"10421:6:21","nodeType":"VariableDeclaration","scope":4457,"src":"10404:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4450,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4451,"nodeType":"ArrayTypeName","src":"10404:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4453,"nodeType":"VariableDeclarationStatement","src":"10404:23:21"},{"AST":{"nodeType":"YulBlock","src":"10490:39:21","statements":[{"nodeType":"YulAssignment","src":"10504:15:21","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4452,"isOffset":false,"isSlot":false,"src":"10504:6:21","valueSize":1},{"declaration":4442,"isOffset":false,"isSlot":false,"src":"10514:5:21","valueSize":1}],"id":4454,"nodeType":"InlineAssembly","src":"10481:48:21"},{"expression":{"id":4455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"10546:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4437,"id":4456,"nodeType":"Return","src":"10539:13:21"}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"9725:529:21","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4458,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:21","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"set","nameLocation":"10294:3:21","nodeType":"VariableDeclaration","scope":4458,"src":"10275:22:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"10275:10:21"},"referencedDeclaration":4305,"src":"10275:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:21"},"returnParameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4458,"src":"10322:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4435,"nodeType":"ArrayTypeName","src":"10322:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:21"},"scope":4592,"src":"10259:300:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4462,"members":[{"constant":false,"id":4461,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:21","nodeType":"VariableDeclaration","scope":4462,"src":"10606:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4460,"nodeType":"UserDefinedTypeName","pathNode":{"id":4459,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"10606:3:21"},"referencedDeclaration":3990,"src":"10606:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:21","nodeType":"StructDefinition","scope":4592,"src":"10581:42:21","visibility":"public"},{"body":{"id":4482,"nodeType":"Block","src":"10866:56:21","statements":[{"expression":{"arguments":[{"expression":{"id":4474,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"10888:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"10888:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"10908:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:21","typeDescriptions":{}}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10900:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4473,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"10883:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10883:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4472,"id":4481,"nodeType":"Return","src":"10876:39:21"}]},"documentation":{"id":4463,"nodeType":"StructuredDocumentation","src":"10629:159:21","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4483,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:21","nodeType":"FunctionDefinition","parameters":{"id":4469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"set","nameLocation":"10822:3:21","nodeType":"VariableDeclaration","scope":4483,"src":"10806:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4465,"nodeType":"UserDefinedTypeName","pathNode":{"id":4464,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"10806:7:21"},"referencedDeclaration":4462,"src":"10806:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4468,"mutability":"mutable","name":"value","nameLocation":"10835:5:21","nodeType":"VariableDeclaration","scope":4483,"src":"10827:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:21"},"returnParameters":{"id":4472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4483,"src":"10860:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4470,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:21"},"scope":4592,"src":"10793:129:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4503,"nodeType":"Block","src":"11166:59:21","statements":[{"expression":{"arguments":[{"expression":{"id":4495,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"11191:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"11191:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11211:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:21","typeDescriptions":{}}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4494,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11183:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11183:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4493,"id":4502,"nodeType":"Return","src":"11176:42:21"}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"10928:157:21","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4504,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:21","nodeType":"FunctionDefinition","parameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"set","nameLocation":"11122:3:21","nodeType":"VariableDeclaration","scope":4504,"src":"11106:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4486,"nodeType":"UserDefinedTypeName","pathNode":{"id":4485,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"11106:7:21"},"referencedDeclaration":4462,"src":"11106:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4489,"mutability":"mutable","name":"value","nameLocation":"11135:5:21","nodeType":"VariableDeclaration","scope":4504,"src":"11127:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:21"},"returnParameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4504,"src":"11160:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4491,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:21"},"scope":4592,"src":"11090:135:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"11389:61:21","statements":[{"expression":{"arguments":[{"expression":{"id":4516,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11416:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"11416:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"11436:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:21","typeDescriptions":{}}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4515,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"11406:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11406:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4514,"id":4523,"nodeType":"Return","src":"11399:44:21"}]},"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"11231:70:21","text":" @dev Returns true if the value is in the set. O(1)."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:21","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"set","nameLocation":"11340:3:21","nodeType":"VariableDeclaration","scope":4525,"src":"11324:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4507,"nodeType":"UserDefinedTypeName","pathNode":{"id":4506,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"11324:7:21"},"referencedDeclaration":4462,"src":"11324:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"value","nameLocation":"11353:5:21","nodeType":"VariableDeclaration","scope":4525,"src":"11345:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:21"},"returnParameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"11383:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4512,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:21"},"scope":4592,"src":"11306:144:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4539,"nodeType":"Block","src":"11600:43:21","statements":[{"expression":{"arguments":[{"expression":{"id":4535,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"11625:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"11625:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4534,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"11617:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4533,"id":4538,"nodeType":"Return","src":"11610:26:21"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"11456:70:21","text":" @dev Returns the number of values in the set. O(1)."},"id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:21","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"set","nameLocation":"11563:3:21","nodeType":"VariableDeclaration","scope":4540,"src":"11547:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4528,"nodeType":"UserDefinedTypeName","pathNode":{"id":4527,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"11547:7:21"},"referencedDeclaration":4462,"src":"11547:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:21"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4540,"src":"11591:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:21"},"scope":4592,"src":"11531:112:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"12065:55:21","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4554,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"12094:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"12094:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4556,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"12106:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"12090:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:21","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4550,"id":4559,"nodeType":"Return","src":"12075:38:21"}]},"documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"11649:331:21","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:21","nodeType":"FunctionDefinition","parameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4544,"mutability":"mutable","name":"set","nameLocation":"12013:3:21","nodeType":"VariableDeclaration","scope":4561,"src":"11997:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4543,"nodeType":"UserDefinedTypeName","pathNode":{"id":4542,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"11997:7:21"},"referencedDeclaration":4462,"src":"11997:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"index","nameLocation":"12026:5:21","nodeType":"VariableDeclaration","scope":4561,"src":"12018:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:21"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"12056:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:21"},"scope":4592,"src":"11985:135:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"12738:219:21","statements":[{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"store","nameLocation":"12765:5:21","nodeType":"VariableDeclaration","scope":4590,"src":"12748:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4574,"nodeType":"ArrayTypeName","src":"12748:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4580,"initialValue":{"arguments":[{"expression":{"id":4577,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"12781:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"12781:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3990_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4576,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"12773:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3990_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12773:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:21"},{"assignments":[4585],"declarations":[{"constant":false,"id":4585,"mutability":"mutable","name":"result","nameLocation":"12819:6:21","nodeType":"VariableDeclaration","scope":4590,"src":"12802:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4584,"nodeType":"ArrayTypeName","src":"12802:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4586,"nodeType":"VariableDeclarationStatement","src":"12802:23:21"},{"AST":{"nodeType":"YulBlock","src":"12888:39:21","statements":[{"nodeType":"YulAssignment","src":"12902:15:21","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4585,"isOffset":false,"isSlot":false,"src":"12902:6:21","valueSize":1},{"declaration":4575,"isOffset":false,"isSlot":false,"src":"12912:5:21","valueSize":1}],"id":4587,"nodeType":"InlineAssembly","src":"12879:48:21"},{"expression":{"id":4588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12944:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4570,"id":4589,"nodeType":"Return","src":"12937:13:21"}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"12126:529:21","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:21","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"set","nameLocation":"12692:3:21","nodeType":"VariableDeclaration","scope":4591,"src":"12676:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4564,"nodeType":"UserDefinedTypeName","pathNode":{"id":4563,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4462,"src":"12676:7:21"},"referencedDeclaration":4462,"src":"12676:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4462_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:21"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"12720:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4568,"nodeType":"ArrayTypeName","src":"12720:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:21"},"scope":4592,"src":"12660:297:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4593,"src":"1329:11630:21","usedErrors":[]}],"src":"205:12755:21"},"id":21},"contracts/Claim.sol":{"ast":{"absolutePath":"contracts/Claim.sol","exportedSymbols":{"Address":[2355],"Claim":[4785],"Claim_Contract_Does_Not_Have_Enough_Tokens":[4603],"Claim_Exceeded_Daily_Claiming_Limit":[4601],"Context":[2377],"ECDSA":[2972],"EnumerableSet":[4592],"IERC20":[1588],"IERC20Permit":[1649],"Math":[3874],"Ownable":[858],"ReentrancyGuard":[923],"SafeERC20":[2025],"SignatureChecker":[160],"SignedMath":[3979],"SignerManager":[206],"Strings":[2606]},"id":4786,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4594,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"193:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":1589,"src":"219:56:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":2026,"src":"276:65:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":4597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":924,"src":"342:62:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@divergencetech/ethier/contracts/crypto/SignerManager.sol","file":"@divergencetech/ethier/contracts/crypto/SignerManager.sol","id":4598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":207,"src":"405:67:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol","file":"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol","id":4599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4786,"sourceUnit":161,"src":"473:70:22","symbolAliases":[],"unitAlias":""},{"errorSelector":"9b01268b","id":4601,"name":"Claim_Exceeded_Daily_Claiming_Limit","nameLocation":"552:35:22","nodeType":"ErrorDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[],"src":"587:2:22"},"src":"546:44:22"},{"errorSelector":"fcb0d137","id":4603,"name":"Claim_Contract_Does_Not_Have_Enough_Tokens","nameLocation":"597:42:22","nodeType":"ErrorDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[],"src":"639:2:22"},"src":"591:51:22"},{"abstract":false,"baseContracts":[{"baseName":{"id":4604,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":923,"src":"662:15:22"},"id":4605,"nodeType":"InheritanceSpecifier","src":"662:15:22"},{"baseName":{"id":4606,"name":"SignerManager","nodeType":"IdentifierPath","referencedDeclaration":206,"src":"679:13:22"},"id":4607,"nodeType":"InheritanceSpecifier","src":"679:13:22"}],"canonicalName":"Claim","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4785,"linearizedBaseContracts":[4785,206,858,2377,923],"name":"Claim","nameLocation":"653:5:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4611,"libraryName":{"id":4608,"name":"SignatureChecker","nodeType":"IdentifierPath","referencedDeclaration":160,"src":"705:16:22"},"nodeType":"UsingForDirective","src":"699:52:22","typeName":{"id":4610,"nodeType":"UserDefinedTypeName","pathNode":{"id":4609,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"726:24:22"},"referencedDeclaration":4305,"src":"726:24:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":4615,"libraryName":{"id":4612,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":2025,"src":"762:9:22"},"nodeType":"UsingForDirective","src":"756:27:22","typeName":{"id":4614,"nodeType":"UserDefinedTypeName","pathNode":{"id":4613,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"776:6:22"},"referencedDeclaration":1588,"src":"776:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}}},{"constant":false,"id":4619,"mutability":"mutable","name":"usedMessages","nameLocation":"822:12:22","nodeType":"VariableDeclaration","scope":4785,"src":"789:45:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":4618,"keyType":{"id":4616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"789:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":4617,"name":"bool","nodeType":"ElementaryTypeName","src":"808:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"functionSelector":"fc0c546a","id":4622,"mutability":"mutable","name":"token","nameLocation":"855:5:22","nodeType":"VariableDeclaration","scope":4785,"src":"841:19:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"},"typeName":{"id":4621,"nodeType":"UserDefinedTypeName","pathNode":{"id":4620,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"841:6:22"},"referencedDeclaration":1588,"src":"841:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"054a1bcd","id":4624,"mutability":"mutable","name":"maxDailyClaim","nameLocation":"882:13:22","nodeType":"VariableDeclaration","scope":4785,"src":"867:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":4626,"mutability":"mutable","name":"totalDailyClaimed","nameLocation":"917:17:22","nodeType":"VariableDeclaration","scope":4785,"src":"901:33:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4628,"mutability":"mutable","name":"lastResetTimestamp","nameLocation":"956:18:22","nodeType":"VariableDeclaration","scope":4785,"src":"940:34:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":4650,"nodeType":"Block","src":"1040:132:22","statements":[{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4635,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"1050:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4637,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"1065:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4636,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1058:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1588_$","typeString":"type(contract IERC20)"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1058:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"src":"1050:29:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":4640,"nodeType":"ExpressionStatement","src":"1050:29:22"},{"expression":{"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4641,"name":"lastResetTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"1089:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4642,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1110:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1110:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1089:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4645,"nodeType":"ExpressionStatement","src":"1089:36:22"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4646,"name":"maxDailyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"1135:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4647,"name":"_maxDailyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1151:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1135:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"1135:30:22"}]},"id":4651,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1001:13:22","nodeType":"VariableDeclaration","scope":4651,"src":"993:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"_maxDailyClaim","nameLocation":"1024:14:22","nodeType":"VariableDeclaration","scope":4651,"src":"1016:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"992:47:22"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"1040:0:22"},"scope":4785,"src":"981:191:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4662,"nodeType":"Block","src":"1247:47:22","statements":[{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"maxDailyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"1257:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4659,"name":"_maxDailyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"1273:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1257:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"1257:30:22"}]},"functionSelector":"96e09b71","id":4663,"implemented":true,"kind":"function","modifiers":[{"id":4656,"kind":"modifierInvocation","modifierName":{"id":4655,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1237:9:22"},"nodeType":"ModifierInvocation","src":"1237:9:22"}],"name":"setMaxDailyClaim","nameLocation":"1187:16:22","nodeType":"FunctionDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"_maxDailyClaim","nameLocation":"1212:14:22","nodeType":"VariableDeclaration","scope":4663,"src":"1204:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:24:22"},"returnParameters":{"id":4657,"nodeType":"ParameterList","parameters":[],"src":"1247:0:22"},"scope":4785,"src":"1178:116:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4753,"nodeType":"Block","src":"1434:954:22","statements":[{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"currentTimestamp","nameLocation":"1452:16:22","nodeType":"VariableDeclaration","scope":4753,"src":"1444:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4678,"initialValue":{"expression":{"id":4676,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1471:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1471:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1444:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"lastResetTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"1563:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3234","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1584:8:22","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"24"},"src":"1563:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4682,"name":"currentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"1595:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1563:48:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4693,"nodeType":"IfStatement","src":"1559:206:22","trueBody":{"id":4692,"nodeType":"Block","src":"1613:152:22","statements":[{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4684,"name":"totalDailyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"1682:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1682:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4687,"nodeType":"ExpressionStatement","src":"1682:21:22"},{"expression":{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4688,"name":"lastResetTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"1717:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4689,"name":"currentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"1738:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1717:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4691,"nodeType":"ExpressionStatement","src":"1717:37:22"}]}},{"expression":{"arguments":[{"arguments":[{"id":4699,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1867:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4700,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"1874:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4697,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1850:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1850:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1850:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4702,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"1895:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4703,"name":"usedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4619,"src":"1919:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}],"expression":{"id":4694,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1807:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4305_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"requireValidSignature","nodeType":"MemberAccess","referencedDeclaration":50,"src":"1807:29:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4305_storage_ptr_$_t_bytes_memory_ptr_$_t_bytes_calldata_ptr_$_t_mapping$_t_bytes32_$_t_bool_$_$returns$__$bound_to$_t_struct$_AddressSet_$4305_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,bytes memory,bytes calldata,mapping(bytes32 => bool))"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1807:134:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4705,"nodeType":"ExpressionStatement","src":"1807:134:22"},{"assignments":[4707,4709],"declarations":[{"constant":false,"id":4707,"mutability":"mutable","name":"amount","nameLocation":"1961:6:22","nodeType":"VariableDeclaration","scope":4753,"src":"1953:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"recipient","nameLocation":"1977:9:22","nodeType":"VariableDeclaration","scope":4753,"src":"1969:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4708,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4719,"initialValue":{"arguments":[{"id":4712,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"2014:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2034:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:22","typeDescriptions":{}}},{"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2043:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4715,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:22","typeDescriptions":{}}}],"id":4717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2033:18:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$","typeString":"tuple(type(uint256),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$","typeString":"tuple(type(uint256),type(address))"}],"expression":{"id":4710,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1990:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1990:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1990:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"1952:109:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"totalDailyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2076:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"2096:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4723,"name":"maxDailyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"2105:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4728,"nodeType":"IfStatement","src":"2072:104:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4725,"name":"Claim_Exceeded_Daily_Claiming_Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"2139:35:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4727,"nodeType":"RevertStatement","src":"2132:44:22"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4733,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2215:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$4785","typeString":"contract Claim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Claim_$4785","typeString":"contract Claim"}],"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2207:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"2207:7:22","typeDescriptions":{}}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2207:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4729,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2191:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1545,"src":"2191:15:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2191:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"2224:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2191:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4741,"nodeType":"IfStatement","src":"2187:108:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4738,"name":"Claim_Contract_Does_Not_Have_Enough_Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2251:42:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2251:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4740,"nodeType":"RevertStatement","src":"2244:51:22"}},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"totalDailyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2306:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"2327:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2306:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"2306:27:22"},{"expression":{"arguments":[{"id":4749,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"2363:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4750,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"2374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2344:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1682,"src":"2344:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1588_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2344:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4752,"nodeType":"ExpressionStatement","src":"2344:37:22"}]},"functionSelector":"7aee389b","id":4754,"implemented":true,"kind":"function","modifiers":[{"id":4672,"kind":"modifierInvocation","modifierName":{"id":4671,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":888,"src":"1422:12:22"},"nodeType":"ModifierInvocation","src":"1422:12:22"}],"name":"claimToken","nameLocation":"1309:10:22","nodeType":"FunctionDefinition","parameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"_nonce","nameLocation":"1337:6:22","nodeType":"VariableDeclaration","scope":4754,"src":"1329:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1329:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"_data","nameLocation":"1366:5:22","nodeType":"VariableDeclaration","scope":4754,"src":"1353:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4666,"name":"bytes","nodeType":"ElementaryTypeName","src":"1353:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4669,"mutability":"mutable","name":"_signature","nameLocation":"1396:10:22","nodeType":"VariableDeclaration","scope":4754,"src":"1381:25:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4668,"name":"bytes","nodeType":"ElementaryTypeName","src":"1381:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1319:93:22"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[],"src":"1434:0:22"},"scope":4785,"src":"1300:1088:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4783,"nodeType":"Block","src":"2495:176:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4767,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2533:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$4785","typeString":"contract Claim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Claim_$4785","typeString":"contract Claim"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2525:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4765,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:22","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2525:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4763,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2509:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1545,"src":"2509:15:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4770,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"2542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2509:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4775,"nodeType":"IfStatement","src":"2505:109:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4772,"name":"Claim_Contract_Does_Not_Have_Enough_Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2570:42:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2570:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4774,"nodeType":"RevertStatement","src":"2563:51:22"}},{"expression":{"arguments":[{"id":4779,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"2644:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4780,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"2656:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2625:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1588","typeString":"contract IERC20"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1682,"src":"2625:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1588_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1588_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2625:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4782,"nodeType":"ExpressionStatement","src":"2625:39:22"}]},"functionSelector":"9e281a98","id":4784,"implemented":true,"kind":"function","modifiers":[{"id":4761,"kind":"modifierInvocation","modifierName":{"id":4760,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2485:9:22"},"nodeType":"ModifierInvocation","src":"2485:9:22"}],"name":"withdrawToken","nameLocation":"2403:13:22","nodeType":"FunctionDefinition","parameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"_recipient","nameLocation":"2434:10:22","nodeType":"VariableDeclaration","scope":4784,"src":"2426:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4755,"name":"address","nodeType":"ElementaryTypeName","src":"2426:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"_amount","nameLocation":"2462:7:22","nodeType":"VariableDeclaration","scope":4784,"src":"2454:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2416:59:22"},"returnParameters":{"id":4762,"nodeType":"ParameterList","parameters":[],"src":"2495:0:22"},"scope":4785,"src":"2394:277:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4786,"src":"644:2029:22","usedErrors":[4601,4603]}],"src":"193:2481:22"},"id":22},"contracts/DemoToken.sol":{"ast":{"absolutePath":"contracts/DemoToken.sol","exportedSymbols":{"AccessControl":[522],"AccessControlEnumerable":[647],"Context":[2377],"DemoToken":[4806],"ERC165":[2996],"ERC20":[1510],"EnumerableSet":[4592],"IAccessControl":[720],"IAccessControlEnumerable":[745],"IERC165":[3008],"IERC20":[1588],"IERC20Metadata":[1613],"Math":[3874],"SignedMath":[3979],"Strings":[2606]},"id":4807,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4787,"literals":["solidity","0.8",".13"],"nodeType":"PragmaDirective","src":"37:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4807,"sourceUnit":1511,"src":"62:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":4789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4807,"sourceUnit":648,"src":"118:68:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4790,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":647,"src":"210:23:23"},"id":4791,"nodeType":"InheritanceSpecifier","src":"210:23:23"},{"arguments":[{"hexValue":"44656d6f","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"241:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1fa80dfa525b0dc55b12ba46a17458339a6afae32d611782099c8da6716de0d9","typeString":"literal_string \"Demo\""},"value":"Demo"},{"hexValue":"4444","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"249:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c91ae39b411ab15cfdcf148a174f4aa7e922c8f9c050daa346a72c933a1a731","typeString":"literal_string \"DD\""},"value":"DD"}],"baseName":{"id":4792,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"235:5:23"},"id":4795,"nodeType":"InheritanceSpecifier","src":"235:19:23"}],"canonicalName":"DemoToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4806,"linearizedBaseContracts":[4806,1510,1613,1588,647,522,2996,3008,745,720,2377],"name":"DemoToken","nameLocation":"197:9:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4804,"nodeType":"Block","src":"275:58:23","statements":[{"expression":{"arguments":[{"expression":{"id":4799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"291:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"291:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030303030303030303030303030303030303030","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"303:22:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"value":"1000000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}],"id":4798,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"285:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"285:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4803,"nodeType":"ExpressionStatement","src":"285:41:23"}]},"id":4805,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[],"src":"272:2:23"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[],"src":"275:0:23"},"scope":4806,"src":"261:72:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4807,"src":"188:147:23","usedErrors":[]}],"src":"37:299:23"},"id":23},"contracts/HelpfulInterface.sol":{"ast":{"absolutePath":"contracts/HelpfulInterface.sol","exportedSymbols":{"HelpfulInterface":[4875]},"id":4876,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":4808,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"HelpfulInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4875,"linearizedBaseContracts":[4875],"name":"HelpfulInterface","nameLocation":"74:16:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"59968288","id":4819,"implemented":false,"kind":"function","modifiers":[],"name":"build","nameLocation":"106:5:24","nodeType":"FunctionDefinition","parameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"collateral","nameLocation":"129:10:24","nodeType":"VariableDeclaration","scope":4819,"src":"121:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"121:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4812,"mutability":"mutable","name":"leverage","nameLocation":"157:8:24","nodeType":"VariableDeclaration","scope":4819,"src":"149:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"isLong","nameLocation":"180:6:24","nodeType":"VariableDeclaration","scope":4819,"src":"175:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4813,"name":"bool","nodeType":"ElementaryTypeName","src":"175:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4816,"mutability":"mutable","name":"priceLimit","nameLocation":"204:10:24","nodeType":"VariableDeclaration","scope":4819,"src":"196:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"196:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111:109:24"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[],"src":"229:0:24"},"scope":4875,"src":"97:133:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c45a0155","id":4824,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"245:7:24","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"252:2:24"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"278:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4821,"name":"address","nodeType":"ElementaryTypeName","src":"278:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"277:9:24"},"scope":4875,"src":"236:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9d2f053c","id":4831,"implemented":false,"kind":"function","modifiers":[],"name":"params","nameLocation":"302:6:24","nodeType":"FunctionDefinition","parameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"idx","nameLocation":"317:3:24","nodeType":"VariableDeclaration","scope":4831,"src":"309:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"308:13:24"},"returnParameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4831,"src":"345:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"344:9:24"},"scope":4875,"src":"293:61:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4840,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"369:7:24","nodeType":"FunctionDefinition","parameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"spender","nameLocation":"385:7:24","nodeType":"VariableDeclaration","scope":4840,"src":"377:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4832,"name":"address","nodeType":"ElementaryTypeName","src":"377:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"amount","nameLocation":"402:6:24","nodeType":"VariableDeclaration","scope":4840,"src":"394:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"376:33:24"},"returnParameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4840,"src":"428:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4837,"name":"bool","nodeType":"ElementaryTypeName","src":"428:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"427:6:24"},"scope":4875,"src":"360:74:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c18f32f6","id":4851,"implemented":false,"kind":"function","modifiers":[],"name":"notional","nameLocation":"449:8:24","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"_address","nameLocation":"475:8:24","nodeType":"VariableDeclaration","scope":4851,"src":"467:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4841,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"sender","nameLocation":"501:6:24","nodeType":"VariableDeclaration","scope":4851,"src":"493:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4843,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4846,"mutability":"mutable","name":"id","nameLocation":"522:2:24","nodeType":"VariableDeclaration","scope":4851,"src":"517:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4845,"name":"uint","nodeType":"ElementaryTypeName","src":"517:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"457:73:24"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"554:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint","nodeType":"ElementaryTypeName","src":"554:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"553:6:24"},"scope":4875,"src":"440:120:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4860,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"575:8:24","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"recipient","nameLocation":"601:9:24","nodeType":"VariableDeclaration","scope":4860,"src":"593:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4852,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4855,"mutability":"mutable","name":"amount","nameLocation":"628:6:24","nodeType":"VariableDeclaration","scope":4860,"src":"620:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"620:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"583:57:24"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"659:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4857,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"658:6:24"},"scope":4875,"src":"566:99:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"b98b46cc473761b09478db481c36070133bf6b7a18241892f5477e725b063b5a","id":4874,"name":"Build","nameLocation":"677:5:24","nodeType":"EventDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"708:6:24","nodeType":"VariableDeclaration","scope":4874,"src":"692:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4861,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4864,"indexed":false,"mutability":"mutable","name":"positionId","nameLocation":"780:10:24","nodeType":"VariableDeclaration","scope":4874,"src":"772:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4866,"indexed":false,"mutability":"mutable","name":"oi","nameLocation":"832:2:24","nodeType":"VariableDeclaration","scope":4874,"src":"824:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4868,"indexed":false,"mutability":"mutable","name":"debt","nameLocation":"879:4:24","nodeType":"VariableDeclaration","scope":4874,"src":"871:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4870,"indexed":false,"mutability":"mutable","name":"isLong","nameLocation":"927:6:24","nodeType":"VariableDeclaration","scope":4874,"src":"922:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4869,"name":"bool","nodeType":"ElementaryTypeName","src":"922:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4872,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"979:5:24","nodeType":"VariableDeclaration","scope":4874,"src":"971:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"682:323:24"},"src":"671:335:24"}],"scope":4876,"src":"64:944:24","usedErrors":[]}],"src":"39:970:24"},"id":24}},"contracts":{"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096625f2e914d0d5a4e35dd8c9298f26bfb933cbc7f78bde665a52cea7565769264736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH3 0x5F2E91 0x4D 0xD GAS 0x4E CALLDATALOAD 0xDD DUP13 SWAP3 SWAP9 CALLCODE PUSH12 0xFB933CBC7F78BDE665A52CEA PUSH22 0x65769264736F6C634300080D00330000000000000000 ","sourceMap":"457:3348:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096625f2e914d0d5a4e35dd8c9298f26bfb933cbc7f78bde665a52cea7565769264736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH3 0x5F2E91 0x4D 0xD GAS 0x4E CALLDATALOAD 0xDD DUP13 SWAP3 SWAP9 CALLCODE PUSH12 0xFB933CBC7F78BDE665A52CEA PUSH22 0x65769264736F6C634300080D00330000000000000000 ","sourceMap":"457:3348:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Additional functions for EnumerableSet.Addresset that require a valid ECDSA signature of a standardized message, signed by any member of the set.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol\":{\"keccak256\":\"0x3944aa1dd47e5f23e1ce9597908190b69a9245717949ddcbd57cc13b54f6f373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f2ca92399d3889bc716cc0a84c3fa28b35e892cc22240e0a3872069812ae81\",\"dweb:/ipfs/QmS5snZV24EXFT4tJgUFpYVAmq18XWCur8h7yo9i2u8FjB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@divergencetech/ethier/contracts/crypto/SignerManager.sol":{"SignerManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"addSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"removeSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_769":{"entryPoint":null,"id":769,"parameterSlots":0,"returnSlots":0},"@_msgSender_2367":{"entryPoint":50,"id":2367,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_857":{"entryPoint":58,"id":857,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107f38061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e316ab71461005c578063715018a6146100785780638da5cb5b14610082578063eb12d61e146100a0578063f2fde38b146100bc575b600080fd5b6100766004803603810190610071919061058c565b6100d8565b005b6100806100f8565b005b61008a61010c565b60405161009791906105c8565b60405180910390f35b6100ba60048036038101906100b5919061058c565b610135565b005b6100d660048036038101906100d1919061058c565b610155565b005b6100e06101d8565b6100f481600161025690919063ffffffff16565b5050565b6101006101d8565b61010a6000610286565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61013d6101d8565b61015181600161034a90919063ffffffff16565b5050565b61015d6101d8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390610666565b60405180910390fd5b6101d581610286565b50565b6101e061037a565b73ffffffffffffffffffffffffffffffffffffffff166101fe61010c565b73ffffffffffffffffffffffffffffffffffffffff1614610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b906106d2565b60405180910390fd5b565b600061027e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610382565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610372836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610496565b905092915050565b600033905090565b6000808360010160008481526020019081526020016000205490506000811461048a5760006001826103b4919061072b565b90506000600186600001805490506103cc919061072b565b905081811461043b5760008660000182815481106103ed576103ec61075f565b5b90600052602060002001549050808760000184815481106104115761041061075f565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061044f5761044e61078e565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610490565b60009150505b92915050565b60006104a28383610506565b6104fb578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610500565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105598261052e565b9050919050565b6105698161054e565b811461057457600080fd5b50565b60008135905061058681610560565b92915050565b6000602082840312156105a2576105a1610529565b5b60006105b084828501610577565b91505092915050565b6105c28161054e565b82525050565b60006020820190506105dd60008301846105b9565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006106506026836105e3565b915061065b826105f4565b604082019050919050565b6000602082019050818103600083015261067f81610643565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106bc6020836105e3565b91506106c782610686565b602082019050919050565b600060208201905081810360008301526106eb816106af565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610736826106f2565b9150610741836106f2565b925082821015610754576107536106fc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206936ca5d233b402e98c25c493449ab443315a0d119d402b2385cff21d9b582c064736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7F3 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE316AB7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0xF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH1 0x1 PUSH2 0x256 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x10A PUSH1 0x0 PUSH2 0x286 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x151 DUP2 PUSH1 0x1 PUSH2 0x34A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5 DUP2 PUSH2 0x286 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x37A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x382 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3ED JUMPI PUSH2 0x3EC PUSH2 0x75F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x411 JUMPI PUSH2 0x410 PUSH2 0x75F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x78E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4FB JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 PUSH2 0x52E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x569 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x586 DUP2 PUSH2 0x560 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B0 DUP5 DUP3 DUP6 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C2 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH1 0x26 DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B DUP3 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x67F DUP2 PUSH2 0x643 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BC PUSH1 0x20 DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C7 DUP3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6EB DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x741 DUP4 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x754 JUMPI PUSH2 0x753 PUSH2 0x6FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x36CA5D233B402E98C25C 0x49 CALLVALUE 0x49 0xAB DIFFICULTY CALLER ISZERO LOG0 0xD1 NOT 0xD4 MUL 0xB2 CODESIZE 0x5C SELFDESTRUCT 0x21 0xD9 0xB5 DUP3 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"426:567:1:-:0;;;;;;;;;;;;;936:32:6;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;426:567:1;;640:96:14;693:7;719:10;712:17;;640:96;:::o;2426:187:6:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;426:567:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_4032":{"entryPoint":1174,"id":4032,"parameterSlots":2,"returnSlots":1},"@_checkOwner_800":{"entryPoint":472,"id":800,"parameterSlots":0,"returnSlots":0},"@_contains_4135":{"entryPoint":1286,"id":4135,"parameterSlots":2,"returnSlots":1},"@_msgSender_2367":{"entryPoint":890,"id":2367,"parameterSlots":0,"returnSlots":1},"@_remove_4116":{"entryPoint":898,"id":4116,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_857":{"entryPoint":646,"id":857,"parameterSlots":1,"returnSlots":0},"@addSigner_190":{"entryPoint":309,"id":190,"parameterSlots":1,"returnSlots":0},"@add_4332":{"entryPoint":842,"id":4332,"parameterSlots":2,"returnSlots":1},"@owner_786":{"entryPoint":268,"id":786,"parameterSlots":0,"returnSlots":1},"@removeSigner_205":{"entryPoint":216,"id":205,"parameterSlots":1,"returnSlots":0},"@remove_4359":{"entryPoint":598,"id":4359,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_814":{"entryPoint":248,"id":814,"parameterSlots":0,"returnSlots":0},"@transferOwnership_837":{"entryPoint":341,"id":837,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1465,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":1603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":1711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1638,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1746,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1507,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1835,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1358,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1778,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1788,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":1934,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1887,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1321,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":1524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":1670,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1376,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4551:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"748:87:25","statements":[{"nodeType":"YulAssignment","src":"758:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:25"},"nodeType":"YulFunctionCall","src":"767:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:25"},"nodeType":"YulFunctionCall","src":"796:33:25"},"nodeType":"YulExpressionStatement","src":"796:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:25","type":""}],"src":"696:139:25"},{"body":{"nodeType":"YulBlock","src":"907:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:25"},"nodeType":"YulFunctionCall","src":"955:79:25"},"nodeType":"YulExpressionStatement","src":"955:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:25"},"nodeType":"YulFunctionCall","src":"924:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:25"},"nodeType":"YulFunctionCall","src":"920:32:25"},"nodeType":"YulIf","src":"917:119:25"},{"nodeType":"YulBlock","src":"1046:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:25"},"nodeType":"YulFunctionCall","src":"1121:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:25"},"nodeType":"YulFunctionCall","src":"1100:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:25","type":""}],"src":"841:329:25"},{"body":{"nodeType":"YulBlock","src":"1241:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1258:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1281:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1263:17:25"},"nodeType":"YulFunctionCall","src":"1263:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:25"},"nodeType":"YulFunctionCall","src":"1251:37:25"},"nodeType":"YulExpressionStatement","src":"1251:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1236:3:25","type":""}],"src":"1176:118:25"},{"body":{"nodeType":"YulBlock","src":"1398:124:25","statements":[{"nodeType":"YulAssignment","src":"1408:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:25"},"nodeType":"YulFunctionCall","src":"1416:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1408:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1488:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:25"},"nodeType":"YulFunctionCall","src":"1497:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1444:43:25"},"nodeType":"YulFunctionCall","src":"1444:71:25"},"nodeType":"YulExpressionStatement","src":"1444:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1370:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1382:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1393:4:25","type":""}],"src":"1300:222:25"},{"body":{"nodeType":"YulBlock","src":"1624:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:25"},"nodeType":"YulFunctionCall","src":"1634:19:25"},"nodeType":"YulExpressionStatement","src":"1634:19:25"},{"nodeType":"YulAssignment","src":"1662:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:25"},"nodeType":"YulFunctionCall","src":"1677:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:25","type":""}],"src":"1528:169:25"},{"body":{"nodeType":"YulBlock","src":"1809:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:25"},"nodeType":"YulFunctionCall","src":"1827:14:25"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1843:34:25","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:25"},"nodeType":"YulFunctionCall","src":"1820:58:25"},"nodeType":"YulExpressionStatement","src":"1820:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1899:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1907:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1895:3:25"},"nodeType":"YulFunctionCall","src":"1895:15:25"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1912:8:25","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1888:6:25"},"nodeType":"YulFunctionCall","src":"1888:33:25"},"nodeType":"YulExpressionStatement","src":"1888:33:25"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:25","type":""}],"src":"1703:225:25"},{"body":{"nodeType":"YulBlock","src":"2080:220:25","statements":[{"nodeType":"YulAssignment","src":"2090:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2156:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2161:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2097:58:25"},"nodeType":"YulFunctionCall","src":"2097:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2090:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2262:3:25"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"2173:88:25"},"nodeType":"YulFunctionCall","src":"2173:93:25"},"nodeType":"YulExpressionStatement","src":"2173:93:25"},{"nodeType":"YulAssignment","src":"2275:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2286:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2291:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:25"},"nodeType":"YulFunctionCall","src":"2282:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2275:3:25"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2068:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2076:3:25","type":""}],"src":"1934:366:25"},{"body":{"nodeType":"YulBlock","src":"2477:248:25","statements":[{"nodeType":"YulAssignment","src":"2487:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2499:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2495:3:25"},"nodeType":"YulFunctionCall","src":"2495:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2487:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:25"},"nodeType":"YulFunctionCall","src":"2530:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2553:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2559:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2549:3:25"},"nodeType":"YulFunctionCall","src":"2549:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2523:6:25"},"nodeType":"YulFunctionCall","src":"2523:47:25"},"nodeType":"YulExpressionStatement","src":"2523:47:25"},{"nodeType":"YulAssignment","src":"2579:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2713:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2587:124:25"},"nodeType":"YulFunctionCall","src":"2587:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2579:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2457:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2472:4:25","type":""}],"src":"2306:419:25"},{"body":{"nodeType":"YulBlock","src":"2837:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2859:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2867:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2855:3:25"},"nodeType":"YulFunctionCall","src":"2855:14:25"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2871:34:25","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:25"},"nodeType":"YulFunctionCall","src":"2848:58:25"},"nodeType":"YulExpressionStatement","src":"2848:58:25"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2829:6:25","type":""}],"src":"2731:182:25"},{"body":{"nodeType":"YulBlock","src":"3065:220:25","statements":[{"nodeType":"YulAssignment","src":"3075:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3141:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3146:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3082:58:25"},"nodeType":"YulFunctionCall","src":"3082:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3075:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3247:3:25"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3158:88:25"},"nodeType":"YulFunctionCall","src":"3158:93:25"},"nodeType":"YulExpressionStatement","src":"3158:93:25"},{"nodeType":"YulAssignment","src":"3260:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3271:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3267:3:25"},"nodeType":"YulFunctionCall","src":"3267:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3260:3:25"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3053:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3061:3:25","type":""}],"src":"2919:366:25"},{"body":{"nodeType":"YulBlock","src":"3462:248:25","statements":[{"nodeType":"YulAssignment","src":"3472:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3484:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:25"},"nodeType":"YulFunctionCall","src":"3480:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3472:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3519:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3530:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3515:3:25"},"nodeType":"YulFunctionCall","src":"3515:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3538:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3544:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3534:3:25"},"nodeType":"YulFunctionCall","src":"3534:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3508:6:25"},"nodeType":"YulFunctionCall","src":"3508:47:25"},"nodeType":"YulExpressionStatement","src":"3508:47:25"},{"nodeType":"YulAssignment","src":"3564:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3698:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3572:124:25"},"nodeType":"YulFunctionCall","src":"3572:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3564:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3442:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3457:4:25","type":""}],"src":"3291:419:25"},{"body":{"nodeType":"YulBlock","src":"3761:32:25","statements":[{"nodeType":"YulAssignment","src":"3771:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3782:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3771:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3743:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3753:7:25","type":""}],"src":"3716:77:25"},{"body":{"nodeType":"YulBlock","src":"3827:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3844:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3847:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3837:6:25"},"nodeType":"YulFunctionCall","src":"3837:88:25"},"nodeType":"YulExpressionStatement","src":"3837:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3941:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3944:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3934:6:25"},"nodeType":"YulFunctionCall","src":"3934:15:25"},"nodeType":"YulExpressionStatement","src":"3934:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3965:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3968:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3958:6:25"},"nodeType":"YulFunctionCall","src":"3958:15:25"},"nodeType":"YulExpressionStatement","src":"3958:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3799:180:25"},{"body":{"nodeType":"YulBlock","src":"4030:146:25","statements":[{"nodeType":"YulAssignment","src":"4040:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4063:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4045:17:25"},"nodeType":"YulFunctionCall","src":"4045:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4040:1:25"}]},{"nodeType":"YulAssignment","src":"4074:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4097:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4079:17:25"},"nodeType":"YulFunctionCall","src":"4079:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4074:1:25"}]},{"body":{"nodeType":"YulBlock","src":"4121:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4123:16:25"},"nodeType":"YulFunctionCall","src":"4123:18:25"},"nodeType":"YulExpressionStatement","src":"4123:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4115:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"4118:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4112:2:25"},"nodeType":"YulFunctionCall","src":"4112:8:25"},"nodeType":"YulIf","src":"4109:34:25"},{"nodeType":"YulAssignment","src":"4153:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4165:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"4168:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4161:3:25"},"nodeType":"YulFunctionCall","src":"4161:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4153:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4016:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"4019:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4025:4:25","type":""}],"src":"3985:191:25"},{"body":{"nodeType":"YulBlock","src":"4210:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4227:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4230:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4220:6:25"},"nodeType":"YulFunctionCall","src":"4220:88:25"},"nodeType":"YulExpressionStatement","src":"4220:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4324:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4327:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4317:6:25"},"nodeType":"YulFunctionCall","src":"4317:15:25"},"nodeType":"YulExpressionStatement","src":"4317:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4348:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4351:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4341:6:25"},"nodeType":"YulFunctionCall","src":"4341:15:25"},"nodeType":"YulExpressionStatement","src":"4341:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4182:180:25"},{"body":{"nodeType":"YulBlock","src":"4396:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4413:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4416:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4406:6:25"},"nodeType":"YulFunctionCall","src":"4406:88:25"},"nodeType":"YulExpressionStatement","src":"4406:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4510:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4513:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4503:6:25"},"nodeType":"YulFunctionCall","src":"4503:15:25"},"nodeType":"YulExpressionStatement","src":"4503:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4534:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4537:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4527:6:25"},"nodeType":"YulFunctionCall","src":"4527:15:25"},"nodeType":"YulExpressionStatement","src":"4527:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"4368:180:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80630e316ab71461005c578063715018a6146100785780638da5cb5b14610082578063eb12d61e146100a0578063f2fde38b146100bc575b600080fd5b6100766004803603810190610071919061058c565b6100d8565b005b6100806100f8565b005b61008a61010c565b60405161009791906105c8565b60405180910390f35b6100ba60048036038101906100b5919061058c565b610135565b005b6100d660048036038101906100d1919061058c565b610155565b005b6100e06101d8565b6100f481600161025690919063ffffffff16565b5050565b6101006101d8565b61010a6000610286565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61013d6101d8565b61015181600161034a90919063ffffffff16565b5050565b61015d6101d8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390610666565b60405180910390fd5b6101d581610286565b50565b6101e061037a565b73ffffffffffffffffffffffffffffffffffffffff166101fe61010c565b73ffffffffffffffffffffffffffffffffffffffff1614610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b906106d2565b60405180910390fd5b565b600061027e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610382565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610372836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610496565b905092915050565b600033905090565b6000808360010160008481526020019081526020016000205490506000811461048a5760006001826103b4919061072b565b90506000600186600001805490506103cc919061072b565b905081811461043b5760008660000182815481106103ed576103ec61075f565b5b90600052602060002001549050808760000184815481106104115761041061075f565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061044f5761044e61078e565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610490565b60009150505b92915050565b60006104a28383610506565b6104fb578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610500565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105598261052e565b9050919050565b6105698161054e565b811461057457600080fd5b50565b60008135905061058681610560565b92915050565b6000602082840312156105a2576105a1610529565b5b60006105b084828501610577565b91505092915050565b6105c28161054e565b82525050565b60006020820190506105dd60008301846105b9565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006106506026836105e3565b915061065b826105f4565b604082019050919050565b6000602082019050818103600083015261067f81610643565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106bc6020836105e3565b91506106c782610686565b602082019050919050565b600060208201905081810360008301526106eb816106af565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610736826106f2565b9150610741836106f2565b925082821015610754576107536106fc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206936ca5d233b402e98c25c493449ab443315a0d119d402b2385cff21d9b582c064736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE316AB7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0xF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH1 0x1 PUSH2 0x256 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x10A PUSH1 0x0 PUSH2 0x286 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x151 DUP2 PUSH1 0x1 PUSH2 0x34A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5 DUP2 PUSH2 0x286 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x37A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x382 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3ED JUMPI PUSH2 0x3EC PUSH2 0x75F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x411 JUMPI PUSH2 0x410 PUSH2 0x75F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x78E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4FB JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 PUSH2 0x52E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x569 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x586 DUP2 PUSH2 0x560 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B0 DUP5 DUP3 DUP6 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C2 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH1 0x26 DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B DUP3 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x67F DUP2 PUSH2 0x643 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BC PUSH1 0x20 DUP4 PUSH2 0x5E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C7 DUP3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6EB DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x741 DUP4 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x754 JUMPI PUSH2 0x753 PUSH2 0x6FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x36CA5D233B402E98C25C 0x49 CALLVALUE 0x49 0xAB DIFFICULTY CALLER ISZERO LOG0 0xD1 NOT 0xD4 MUL 0xB2 CODESIZE 0x5C SELFDESTRUCT 0x21 0xD9 0xB5 DUP3 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"426:567:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:6;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;718:90:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;895:96:1;1094:13:6;:11;:13::i;:::-;962:22:1::1;977:6;962:7;:14;;:22;;;;:::i;:::-;;895:96:::0;:::o;1824:101:6:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;718:90:1:-;1094:13:6;:11;:13::i;:::-;782:19:1::1;794:6;782:7;:11;;:19;;;;:::i;:::-;;718:90:::0;:::o;2074:198:6:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;8623:156:21:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;2426:187:6:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;8305:150:21:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;2786:1388:21:-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;4255:127::-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:225::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:8;1907:2;1899:6;1895:15;1888:33;1703:225;:::o;1934:366::-;2076:3;2097:67;2161:2;2156:3;2097:67;:::i;:::-;2090:74;;2173:93;2262:3;2173:93;:::i;:::-;2291:2;2286:3;2282:12;2275:19;;1934:366;;;:::o;2306:419::-;2472:4;2510:2;2499:9;2495:18;2487:26;;2559:9;2553:4;2549:20;2545:1;2534:9;2530:17;2523:47;2587:131;2713:4;2587:131;:::i;:::-;2579:139;;2306:419;;;:::o;2731:182::-;2871:34;2867:1;2859:6;2855:14;2848:58;2731:182;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o;3716:77::-;3753:7;3782:5;3771:16;;3716:77;;;:::o;3799:180::-;3847:77;3844:1;3837:88;3944:4;3941:1;3934:15;3968:4;3965:1;3958:15;3985:191;4025:4;4045:20;4063:1;4045:20;:::i;:::-;4040:25;;4079:20;4097:1;4079:20;:::i;:::-;4074:25;;4118:1;4115;4112:8;4109:34;;;4123:18;;:::i;:::-;4109:34;4168:1;4165;4161:9;4153:17;;3985:191;;;;:::o;4182:180::-;4230:77;4227:1;4220:88;4327:4;4324:1;4317:15;4351:4;4348:1;4341:15;4368:180;4416:77;4413:1;4406:88;4513:4;4510:1;4503:15;4537:4;4534:1;4527:15"},"methodIdentifiers":{"addSigner(address)":"eb12d61e","owner()":"8da5cb5b","removeSigner(address)":"0e316ab7","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"signers\":{\"details\":\"Addresses from which signatures can be accepted.\"}},\"title\":\"SignerManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSigner(address)\":{\"notice\":\"Add an address to the set of accepted signers.\"},\"removeSigner(address)\":{\"notice\":\"Remove an address previously added with addSigner().\"}},\"notice\":\"Manges addition and removal of a core set of addresses from which valid ECDSA signatures can be accepted; see SignatureChecker.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@divergencetech/ethier/contracts/crypto/SignerManager.sol\":\"SignerManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@divergencetech/ethier/contracts/crypto/SignerManager.sol\":{\"keccak256\":\"0xffc887b57eda01f60fcd4b43d707a80f23714d18858e268ac2efc2765cad9fcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863fbfedf848863d2cfde3679b6d36df658e31480d8aaabd79287074fd60f904\",\"dweb:/ipfs/Qmehdu8jhtgfX3xNytrdCB1Eb6TVLqDgQeLnnNyQTDqmm1\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_968":{"entryPoint":null,"id":968,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"423:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:25"},"nodeType":"YulFunctionCall","src":"433:12:25"},"nodeType":"YulExpressionStatement","src":"433:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:25"},{"body":{"nodeType":"YulBlock","src":"546:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:25"},"nodeType":"YulFunctionCall","src":"556:12:25"},"nodeType":"YulExpressionStatement","src":"556:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:25"},{"body":{"nodeType":"YulBlock","src":"628:54:25","statements":[{"nodeType":"YulAssignment","src":"638:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:25"},"nodeType":"YulFunctionCall","src":"652:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:25"},"nodeType":"YulFunctionCall","src":"668:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:25"},"nodeType":"YulFunctionCall","src":"648:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:25","type":""}],"src":"580:102:25"},{"body":{"nodeType":"YulBlock","src":"716:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:25"},"nodeType":"YulFunctionCall","src":"726:88:25"},"nodeType":"YulExpressionStatement","src":"726:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:25"},"nodeType":"YulFunctionCall","src":"823:15:25"},"nodeType":"YulExpressionStatement","src":"823:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:25"},"nodeType":"YulFunctionCall","src":"847:15:25"},"nodeType":"YulExpressionStatement","src":"847:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:25"},{"body":{"nodeType":"YulBlock","src":"917:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:25"},"nodeType":"YulFunctionCall","src":"957:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:25"},"nodeType":"YulFunctionCall","src":"945:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:25"},"nodeType":"YulFunctionCall","src":"1098:18:25"},"nodeType":"YulExpressionStatement","src":"1098:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:25"},"nodeType":"YulFunctionCall","src":"1036:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:25"},"nodeType":"YulFunctionCall","src":"1072:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:25"},"nodeType":"YulFunctionCall","src":"1033:62:25"},"nodeType":"YulIf","src":"1030:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:25"},"nodeType":"YulFunctionCall","src":"1127:22:25"},"nodeType":"YulExpressionStatement","src":"1127:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:25","type":""}],"src":"874:281:25"},{"body":{"nodeType":"YulBlock","src":"1202:88:25","statements":[{"nodeType":"YulAssignment","src":"1212:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:25"},"nodeType":"YulFunctionCall","src":"1222:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:25"},"nodeType":"YulFunctionCall","src":"1251:33:25"},"nodeType":"YulExpressionStatement","src":"1251:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:25","type":""}],"src":"1161:129:25"},{"body":{"nodeType":"YulBlock","src":"1363:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:25"},"nodeType":"YulFunctionCall","src":"1470:18:25"},"nodeType":"YulExpressionStatement","src":"1470:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:25"},"nodeType":"YulFunctionCall","src":"1437:30:25"},"nodeType":"YulIf","src":"1434:56:25"},{"nodeType":"YulAssignment","src":"1500:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:25"},"nodeType":"YulFunctionCall","src":"1508:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:25"}]},{"nodeType":"YulAssignment","src":"1574:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:25"},"nodeType":"YulFunctionCall","src":"1582:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:25","type":""}],"src":"1296:308:25"},{"body":{"nodeType":"YulBlock","src":"1659:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:25"},"nodeType":"YulFunctionCall","src":"1759:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:25"},"nodeType":"YulFunctionCall","src":"1778:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:25"},"nodeType":"YulFunctionCall","src":"1772:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:25"},"nodeType":"YulFunctionCall","src":"1752:39:25"},"nodeType":"YulExpressionStatement","src":"1752:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:25"},"nodeType":"YulFunctionCall","src":"1696:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:25","statements":[{"nodeType":"YulAssignment","src":"1712:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:25"},"nodeType":"YulFunctionCall","src":"1717:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:25","statements":[]},"src":"1688:113:25"},{"body":{"nodeType":"YulBlock","src":"1835:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:25"},"nodeType":"YulFunctionCall","src":"1881:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:25"},"nodeType":"YulFunctionCall","src":"1874:27:25"},"nodeType":"YulExpressionStatement","src":"1874:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:25"},"nodeType":"YulFunctionCall","src":"1813:13:25"},"nodeType":"YulIf","src":"1810:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:25","type":""}],"src":"1610:307:25"},{"body":{"nodeType":"YulBlock","src":"2018:326:25","statements":[{"nodeType":"YulAssignment","src":"2028:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:25"},"nodeType":"YulFunctionCall","src":"2053:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:25"},"nodeType":"YulFunctionCall","src":"2037:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:25"},"nodeType":"YulFunctionCall","src":"2112:21:25"},"nodeType":"YulExpressionStatement","src":"2112:21:25"},{"nodeType":"YulVariableDeclaration","src":"2142:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:25"},"nodeType":"YulFunctionCall","src":"2153:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:25"},"nodeType":"YulFunctionCall","src":"2209:79:25"},"nodeType":"YulExpressionStatement","src":"2209:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:25"},"nodeType":"YulFunctionCall","src":"2184:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:25"},"nodeType":"YulFunctionCall","src":"2181:25:25"},"nodeType":"YulIf","src":"2178:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:25"},"nodeType":"YulFunctionCall","src":"2299:39:25"},"nodeType":"YulExpressionStatement","src":"2299:39:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:25","type":""}],"src":"1923:421:25"},{"body":{"nodeType":"YulBlock","src":"2437:282:25","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:25"},"nodeType":"YulFunctionCall","src":"2488:79:25"},"nodeType":"YulExpressionStatement","src":"2488:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:25"},"nodeType":"YulFunctionCall","src":"2461:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:25"},"nodeType":"YulFunctionCall","src":"2457:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:25"},"nodeType":"YulFunctionCall","src":"2450:35:25"},"nodeType":"YulIf","src":"2447:122:25"},{"nodeType":"YulVariableDeclaration","src":"2578:27:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:25"},"nodeType":"YulFunctionCall","src":"2592:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:25"},"nodeType":"YulFunctionCall","src":"2682:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:25"},"nodeType":"YulFunctionCall","src":"2623:90:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:25","type":""}],"src":"2364:355:25"},{"body":{"nodeType":"YulBlock","src":"2839:739:25","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:25"},"nodeType":"YulFunctionCall","src":"2887:79:25"},"nodeType":"YulExpressionStatement","src":"2887:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:25"},"nodeType":"YulFunctionCall","src":"2856:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:25"},"nodeType":"YulFunctionCall","src":"2852:32:25"},"nodeType":"YulIf","src":"2849:119:25"},{"nodeType":"YulBlock","src":"2978:291:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:25"},"nodeType":"YulFunctionCall","src":"3013:17:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:25"},"nodeType":"YulFunctionCall","src":"3007:24:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:25"},"nodeType":"YulFunctionCall","src":"3080:79:25"},"nodeType":"YulExpressionStatement","src":"3080:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:25"},"nodeType":"YulFunctionCall","src":"3047:30:25"},"nodeType":"YulIf","src":"3044:117:25"},{"nodeType":"YulAssignment","src":"3175:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:25"},"nodeType":"YulFunctionCall","src":"3227:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:25"},"nodeType":"YulFunctionCall","src":"3185:74:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:25"}]}]},{"nodeType":"YulBlock","src":"3279:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:25"},"nodeType":"YulFunctionCall","src":"3314:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:25"},"nodeType":"YulFunctionCall","src":"3308:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:25"},"nodeType":"YulFunctionCall","src":"3382:79:25"},"nodeType":"YulExpressionStatement","src":"3382:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:25"},"nodeType":"YulFunctionCall","src":"3349:30:25"},"nodeType":"YulIf","src":"3346:117:25"},{"nodeType":"YulAssignment","src":"3477:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:25"},"nodeType":"YulFunctionCall","src":"3529:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:25"},"nodeType":"YulFunctionCall","src":"3487:74:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:25"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:25","type":""}],"src":"2725:853:25"},{"body":{"nodeType":"YulBlock","src":"3612:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:25"},"nodeType":"YulFunctionCall","src":"3622:88:25"},"nodeType":"YulExpressionStatement","src":"3622:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:25"},"nodeType":"YulFunctionCall","src":"3719:15:25"},"nodeType":"YulExpressionStatement","src":"3719:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:25"},"nodeType":"YulFunctionCall","src":"3743:15:25"},"nodeType":"YulExpressionStatement","src":"3743:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:25"},{"body":{"nodeType":"YulBlock","src":"3821:269:25","statements":[{"nodeType":"YulAssignment","src":"3831:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:25"},"nodeType":"YulFunctionCall","src":"3841:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:25"},"nodeType":"YulFunctionCall","src":"3888:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:25","statements":[{"nodeType":"YulAssignment","src":"3953:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:25"},"nodeType":"YulFunctionCall","src":"3912:26:25"},"nodeType":"YulIf","src":"3909:81:25"},{"body":{"nodeType":"YulBlock","src":"4042:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:25"},"nodeType":"YulFunctionCall","src":"4056:18:25"},"nodeType":"YulExpressionStatement","src":"4056:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:25"},"nodeType":"YulFunctionCall","src":"4026:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:25"},"nodeType":"YulFunctionCall","src":"4003:38:25"},"nodeType":"YulIf","src":"4000:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:25","type":""}],"src":"3770:320:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001611380380620016118339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a7565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b602082108103620003a157620003a062000343565b5b50919050565b61125a80620003b76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ebe565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f50565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fe2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061104e565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611172565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290611204565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c55565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b83811115610ac5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ae782610a7c565b610af18185610a87565b9350610b01818560208601610a98565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4157610e40610dc7565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ea8602583610a87565b9150610eb382610e4c565b604082019050919050565b60006020820190508181036000830152610ed781610e9b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3a602483610a87565b9150610f4582610ede565b604082019050919050565b60006020820190508181036000830152610f6981610f2d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcc602283610a87565b9150610fd782610f70565b604082019050919050565b60006020820190508181036000830152610ffb81610fbf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611038601d83610a87565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110ca602583610a87565b91506110d58261106e565b604082019050919050565b600060208201905081810360008301526110f9816110bd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061115c602383610a87565b915061116782611100565b604082019050919050565b6000602082019050818103600083015261118b8161114f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111ee602683610a87565b91506111f982611192565b604082019050919050565b6000602082019050818103600083015261121d816111e1565b905091905056fea26469706673582212203b937bf67a0bb84ce713b8811e9fc5731543492b8c23f08b818713655b3a3ac364736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1611 CODESIZE SUB DUP1 PUSH3 0x1611 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A7 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3A1 JUMPI PUSH3 0x3A0 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125A DUP1 PUSH3 0x3B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE40 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB3 DUP3 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED7 DUP2 PUSH2 0xE9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF69 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCC PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD7 DUP3 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFFB DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1038 PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 DUP3 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1067 DUP2 PUSH2 0x102B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CA PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D5 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F9 DUP2 PUSH2 0x10BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115C PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1167 DUP3 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118B DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11EE PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F9 DUP3 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x121D DUP2 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP4 PUSH28 0xF67A0BB84CE713B8811E9FC5731543492B8C23F08B818713655B3A3A 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"1532:11312:8:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1532:11312:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1509":{"entryPoint":2679,"id":1509,"parameterSlots":3,"returnSlots":0},"@_approve_1444":{"entryPoint":1447,"id":1444,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1498":{"entryPoint":2674,"id":1498,"parameterSlots":3,"returnSlots":0},"@_msgSender_2367":{"entryPoint":1439,"id":2367,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1487":{"entryPoint":1904,"id":1487,"parameterSlots":3,"returnSlots":0},"@_transfer_1270":{"entryPoint":2044,"id":1270,"parameterSlots":3,"returnSlots":0},"@allowance_1065":{"entryPoint":1304,"id":1065,"parameterSlots":2,"returnSlots":1},"@approve_1090":{"entryPoint":776,"id":1090,"parameterSlots":2,"returnSlots":1},"@balanceOf_1022":{"entryPoint":932,"id":1022,"parameterSlots":1,"returnSlots":1},"@decimals_998":{"entryPoint":868,"id":998,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1193":{"entryPoint":1150,"id":1193,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1152":{"entryPoint":877,"id":1152,"parameterSlots":2,"returnSlots":1},"@name_978":{"entryPoint":630,"id":978,"parameterSlots":0,"returnSlots":1},"@symbol_988":{"entryPoint":1004,"id":988,"parameterSlots":0,"returnSlots":1},"@totalSupply_1008":{"entryPoint":811,"id":1008,"parameterSlots":0,"returnSlots":1},"@transferFrom_1123":{"entryPoint":821,"id":1123,"parameterSlots":3,"returnSlots":1},"@transfer_1047":{"entryPoint":1269,"id":1047,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3367,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3184,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3142,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4466,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4066,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3774,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3295,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3527,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3431,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2871,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2763,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4352,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4098,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4498,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4206,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3806,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3660,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:25","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:25","statements":[{"nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:25"},"nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nodeType":"YulBlock","src":"208:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:25"},"nodeType":"YulFunctionCall","src":"218:19:25"},"nodeType":"YulExpressionStatement","src":"218:19:25"},{"nodeType":"YulAssignment","src":"246:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:25"},"nodeType":"YulFunctionCall","src":"261:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:25","type":""}],"src":"112:169:25"},{"body":{"nodeType":"YulBlock","src":"336:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:25"},"nodeType":"YulFunctionCall","src":"436:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:25"},"nodeType":"YulFunctionCall","src":"455:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:25"},"nodeType":"YulFunctionCall","src":"449:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:25"},"nodeType":"YulFunctionCall","src":"429:39:25"},"nodeType":"YulExpressionStatement","src":"429:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:25"},"nodeType":"YulFunctionCall","src":"373:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:25","statements":[{"nodeType":"YulAssignment","src":"389:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:25"},"nodeType":"YulFunctionCall","src":"394:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:25","statements":[]},"src":"365:113:25"},{"body":{"nodeType":"YulBlock","src":"512:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:25"},"nodeType":"YulFunctionCall","src":"558:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:25"},"nodeType":"YulFunctionCall","src":"551:27:25"},"nodeType":"YulExpressionStatement","src":"551:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:25"},"nodeType":"YulFunctionCall","src":"490:13:25"},"nodeType":"YulIf","src":"487:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:25","type":""}],"src":"287:307:25"},{"body":{"nodeType":"YulBlock","src":"648:54:25","statements":[{"nodeType":"YulAssignment","src":"658:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:25"},"nodeType":"YulFunctionCall","src":"672:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:25"},"nodeType":"YulFunctionCall","src":"688:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:25"},"nodeType":"YulFunctionCall","src":"668:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:25","type":""}],"src":"600:102:25"},{"body":{"nodeType":"YulBlock","src":"800:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:25"},"nodeType":"YulFunctionCall","src":"824:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:25","type":""}]},{"nodeType":"YulAssignment","src":"872:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:25"},"nodeType":"YulFunctionCall","src":"879:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:25"},"nodeType":"YulFunctionCall","src":"981:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:25"},"nodeType":"YulFunctionCall","src":"959:52:25"},"nodeType":"YulExpressionStatement","src":"959:52:25"},{"nodeType":"YulAssignment","src":"1020:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:25"},"nodeType":"YulFunctionCall","src":"1036:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:25"},"nodeType":"YulFunctionCall","src":"1027:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:25","type":""}],"src":"708:364:25"},{"body":{"nodeType":"YulBlock","src":"1196:195:25","statements":[{"nodeType":"YulAssignment","src":"1206:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:25"},"nodeType":"YulFunctionCall","src":"1214:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:25"},"nodeType":"YulFunctionCall","src":"1249:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:25"},"nodeType":"YulFunctionCall","src":"1268:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:25"},"nodeType":"YulFunctionCall","src":"1242:47:25"},"nodeType":"YulExpressionStatement","src":"1242:47:25"},{"nodeType":"YulAssignment","src":"1298:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:25"},"nodeType":"YulFunctionCall","src":"1306:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:25","type":""}],"src":"1078:313:25"},{"body":{"nodeType":"YulBlock","src":"1437:35:25","statements":[{"nodeType":"YulAssignment","src":"1447:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:25"},"nodeType":"YulFunctionCall","src":"1457:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:25","type":""}],"src":"1397:75:25"},{"body":{"nodeType":"YulBlock","src":"1567:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:25"},"nodeType":"YulFunctionCall","src":"1577:12:25"},"nodeType":"YulExpressionStatement","src":"1577:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:25"},{"body":{"nodeType":"YulBlock","src":"1690:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:25"},"nodeType":"YulFunctionCall","src":"1700:12:25"},"nodeType":"YulExpressionStatement","src":"1700:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:25"},{"body":{"nodeType":"YulBlock","src":"1769:81:25","statements":[{"nodeType":"YulAssignment","src":"1779:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:25"},"nodeType":"YulFunctionCall","src":"1790:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:25","type":""}],"src":"1724:126:25"},{"body":{"nodeType":"YulBlock","src":"1901:51:25","statements":[{"nodeType":"YulAssignment","src":"1911:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:25"},"nodeType":"YulFunctionCall","src":"1922:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:25","type":""}],"src":"1856:96:25"},{"body":{"nodeType":"YulBlock","src":"2001:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:25"},"nodeType":"YulFunctionCall","src":"2060:12:25"},"nodeType":"YulExpressionStatement","src":"2060:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:25"},"nodeType":"YulFunctionCall","src":"2031:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:25"},"nodeType":"YulFunctionCall","src":"2021:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:25"},"nodeType":"YulFunctionCall","src":"2014:43:25"},"nodeType":"YulIf","src":"2011:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:25","type":""}],"src":"1958:122:25"},{"body":{"nodeType":"YulBlock","src":"2138:87:25","statements":[{"nodeType":"YulAssignment","src":"2148:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:25"},"nodeType":"YulFunctionCall","src":"2157:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:25"},"nodeType":"YulFunctionCall","src":"2186:33:25"},"nodeType":"YulExpressionStatement","src":"2186:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:25","type":""}],"src":"2086:139:25"},{"body":{"nodeType":"YulBlock","src":"2276:32:25","statements":[{"nodeType":"YulAssignment","src":"2286:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:25","type":""}],"src":"2231:77:25"},{"body":{"nodeType":"YulBlock","src":"2357:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:25"},"nodeType":"YulFunctionCall","src":"2416:12:25"},"nodeType":"YulExpressionStatement","src":"2416:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:25"},"nodeType":"YulFunctionCall","src":"2387:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:25"},"nodeType":"YulFunctionCall","src":"2377:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:25"},"nodeType":"YulFunctionCall","src":"2370:43:25"},"nodeType":"YulIf","src":"2367:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:25","type":""}],"src":"2314:122:25"},{"body":{"nodeType":"YulBlock","src":"2494:87:25","statements":[{"nodeType":"YulAssignment","src":"2504:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:25"},"nodeType":"YulFunctionCall","src":"2513:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:25"},"nodeType":"YulFunctionCall","src":"2542:33:25"},"nodeType":"YulExpressionStatement","src":"2542:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:25","type":""}],"src":"2442:139:25"},{"body":{"nodeType":"YulBlock","src":"2670:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:25"},"nodeType":"YulFunctionCall","src":"2718:79:25"},"nodeType":"YulExpressionStatement","src":"2718:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:25"},"nodeType":"YulFunctionCall","src":"2687:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:25"},"nodeType":"YulFunctionCall","src":"2683:32:25"},"nodeType":"YulIf","src":"2680:119:25"},{"nodeType":"YulBlock","src":"2809:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:25"},"nodeType":"YulFunctionCall","src":"2884:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:25"},"nodeType":"YulFunctionCall","src":"2863:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:25"}]}]},{"nodeType":"YulBlock","src":"2936:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:25"},"nodeType":"YulFunctionCall","src":"3012:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:25"},"nodeType":"YulFunctionCall","src":"2991:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:25","type":""}],"src":"2587:474:25"},{"body":{"nodeType":"YulBlock","src":"3109:48:25","statements":[{"nodeType":"YulAssignment","src":"3119:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:25"},"nodeType":"YulFunctionCall","src":"3137:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:25"},"nodeType":"YulFunctionCall","src":"3130:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:25","type":""}],"src":"3067:90:25"},{"body":{"nodeType":"YulBlock","src":"3222:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:25"},"nodeType":"YulFunctionCall","src":"3244:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:25"},"nodeType":"YulFunctionCall","src":"3232:34:25"},"nodeType":"YulExpressionStatement","src":"3232:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:25","type":""}],"src":"3163:109:25"},{"body":{"nodeType":"YulBlock","src":"3370:118:25","statements":[{"nodeType":"YulAssignment","src":"3380:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:25"},"nodeType":"YulFunctionCall","src":"3388:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:25"},"nodeType":"YulFunctionCall","src":"3463:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:25"},"nodeType":"YulFunctionCall","src":"3416:65:25"},"nodeType":"YulExpressionStatement","src":"3416:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:25","type":""}],"src":"3278:210:25"},{"body":{"nodeType":"YulBlock","src":"3559:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:25"},"nodeType":"YulFunctionCall","src":"3581:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:25"},"nodeType":"YulFunctionCall","src":"3569:37:25"},"nodeType":"YulExpressionStatement","src":"3569:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:25","type":""}],"src":"3494:118:25"},{"body":{"nodeType":"YulBlock","src":"3716:124:25","statements":[{"nodeType":"YulAssignment","src":"3726:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:25"},"nodeType":"YulFunctionCall","src":"3734:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:25"},"nodeType":"YulFunctionCall","src":"3815:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:25"},"nodeType":"YulFunctionCall","src":"3762:71:25"},"nodeType":"YulExpressionStatement","src":"3762:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:25","type":""}],"src":"3618:222:25"},{"body":{"nodeType":"YulBlock","src":"3946:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:25"},"nodeType":"YulFunctionCall","src":"3994:79:25"},"nodeType":"YulExpressionStatement","src":"3994:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:25"},"nodeType":"YulFunctionCall","src":"3959:32:25"},"nodeType":"YulIf","src":"3956:119:25"},{"nodeType":"YulBlock","src":"4085:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:25"},"nodeType":"YulFunctionCall","src":"4160:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:25"},"nodeType":"YulFunctionCall","src":"4139:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:25"}]}]},{"nodeType":"YulBlock","src":"4212:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:25"},"nodeType":"YulFunctionCall","src":"4288:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:25"},"nodeType":"YulFunctionCall","src":"4267:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:25"}]}]},{"nodeType":"YulBlock","src":"4340:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:25"},"nodeType":"YulFunctionCall","src":"4416:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:25"},"nodeType":"YulFunctionCall","src":"4395:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:25","type":""}],"src":"3846:619:25"},{"body":{"nodeType":"YulBlock","src":"4514:43:25","statements":[{"nodeType":"YulAssignment","src":"4524:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:25"},"nodeType":"YulFunctionCall","src":"4535:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:25","type":""}],"src":"4471:86:25"},{"body":{"nodeType":"YulBlock","src":"4624:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:25"},"nodeType":"YulFunctionCall","src":"4646:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:25"},"nodeType":"YulFunctionCall","src":"4634:35:25"},"nodeType":"YulExpressionStatement","src":"4634:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:25","type":""}],"src":"4563:112:25"},{"body":{"nodeType":"YulBlock","src":"4775:120:25","statements":[{"nodeType":"YulAssignment","src":"4785:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:25"},"nodeType":"YulFunctionCall","src":"4793:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:25"},"nodeType":"YulFunctionCall","src":"4870:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:25"},"nodeType":"YulFunctionCall","src":"4821:67:25"},"nodeType":"YulExpressionStatement","src":"4821:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:25","type":""}],"src":"4681:214:25"},{"body":{"nodeType":"YulBlock","src":"4967:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:25"},"nodeType":"YulFunctionCall","src":"5015:79:25"},"nodeType":"YulExpressionStatement","src":"5015:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:25"},"nodeType":"YulFunctionCall","src":"4984:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:25"},"nodeType":"YulFunctionCall","src":"4980:32:25"},"nodeType":"YulIf","src":"4977:119:25"},{"nodeType":"YulBlock","src":"5106:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:25"},"nodeType":"YulFunctionCall","src":"5181:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:25"},"nodeType":"YulFunctionCall","src":"5160:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:25","type":""}],"src":"4901:329:25"},{"body":{"nodeType":"YulBlock","src":"5319:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:25"},"nodeType":"YulFunctionCall","src":"5367:79:25"},"nodeType":"YulExpressionStatement","src":"5367:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:25"},"nodeType":"YulFunctionCall","src":"5336:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:25"},"nodeType":"YulFunctionCall","src":"5332:32:25"},"nodeType":"YulIf","src":"5329:119:25"},{"nodeType":"YulBlock","src":"5458:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:25"},"nodeType":"YulFunctionCall","src":"5533:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:25"},"nodeType":"YulFunctionCall","src":"5512:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:25"}]}]},{"nodeType":"YulBlock","src":"5585:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:25"},"nodeType":"YulFunctionCall","src":"5661:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:25"},"nodeType":"YulFunctionCall","src":"5640:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:25","type":""}],"src":"5236:474:25"},{"body":{"nodeType":"YulBlock","src":"5744:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:25"},"nodeType":"YulFunctionCall","src":"5754:88:25"},"nodeType":"YulExpressionStatement","src":"5754:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:25"},"nodeType":"YulFunctionCall","src":"5851:15:25"},"nodeType":"YulExpressionStatement","src":"5851:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:25"},"nodeType":"YulFunctionCall","src":"5875:15:25"},"nodeType":"YulExpressionStatement","src":"5875:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:25"},{"body":{"nodeType":"YulBlock","src":"5953:269:25","statements":[{"nodeType":"YulAssignment","src":"5963:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:25"},"nodeType":"YulFunctionCall","src":"5973:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:25"},"nodeType":"YulFunctionCall","src":"6020:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:25","statements":[{"nodeType":"YulAssignment","src":"6085:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:25"},"nodeType":"YulFunctionCall","src":"6095:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:25"},"nodeType":"YulFunctionCall","src":"6044:26:25"},"nodeType":"YulIf","src":"6041:81:25"},{"body":{"nodeType":"YulBlock","src":"6174:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:25"},"nodeType":"YulFunctionCall","src":"6188:18:25"},"nodeType":"YulExpressionStatement","src":"6188:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:25"},"nodeType":"YulFunctionCall","src":"6158:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:25"},"nodeType":"YulFunctionCall","src":"6135:38:25"},"nodeType":"YulIf","src":"6132:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:25","type":""}],"src":"5902:320:25"},{"body":{"nodeType":"YulBlock","src":"6256:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:25"},"nodeType":"YulFunctionCall","src":"6266:88:25"},"nodeType":"YulExpressionStatement","src":"6266:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:25"},"nodeType":"YulFunctionCall","src":"6363:15:25"},"nodeType":"YulExpressionStatement","src":"6363:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:25"},"nodeType":"YulFunctionCall","src":"6387:15:25"},"nodeType":"YulExpressionStatement","src":"6387:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:25"},{"body":{"nodeType":"YulBlock","src":"6458:261:25","statements":[{"nodeType":"YulAssignment","src":"6468:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:25"},"nodeType":"YulFunctionCall","src":"6473:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:25"}]},{"nodeType":"YulAssignment","src":"6502:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:25"},"nodeType":"YulFunctionCall","src":"6507:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:25"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:25"},"nodeType":"YulFunctionCall","src":"6667:18:25"},"nodeType":"YulExpressionStatement","src":"6667:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:25"},"nodeType":"YulFunctionCall","src":"6589:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:25"},"nodeType":"YulFunctionCall","src":"6583:81:25"},"nodeType":"YulIf","src":"6580:107:25"},{"nodeType":"YulAssignment","src":"6697:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:25"},"nodeType":"YulFunctionCall","src":"6704:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:25","type":""}],"src":"6414:305:25"},{"body":{"nodeType":"YulBlock","src":"6831:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:25"},"nodeType":"YulFunctionCall","src":"6849:14:25"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:25","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:25"},"nodeType":"YulFunctionCall","src":"6842:58:25"},"nodeType":"YulExpressionStatement","src":"6842:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:25"},"nodeType":"YulFunctionCall","src":"6917:15:25"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:25","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:25"},"nodeType":"YulFunctionCall","src":"6910:32:25"},"nodeType":"YulExpressionStatement","src":"6910:32:25"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:25","type":""}],"src":"6725:224:25"},{"body":{"nodeType":"YulBlock","src":"7101:220:25","statements":[{"nodeType":"YulAssignment","src":"7111:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:25"},"nodeType":"YulFunctionCall","src":"7118:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:25"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:25"},"nodeType":"YulFunctionCall","src":"7194:93:25"},"nodeType":"YulExpressionStatement","src":"7194:93:25"},{"nodeType":"YulAssignment","src":"7296:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:25"},"nodeType":"YulFunctionCall","src":"7303:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:25"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:25","type":""}],"src":"6955:366:25"},{"body":{"nodeType":"YulBlock","src":"7498:248:25","statements":[{"nodeType":"YulAssignment","src":"7508:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:25"},"nodeType":"YulFunctionCall","src":"7516:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:25"},"nodeType":"YulFunctionCall","src":"7551:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:25"},"nodeType":"YulFunctionCall","src":"7570:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:25"},"nodeType":"YulFunctionCall","src":"7544:47:25"},"nodeType":"YulExpressionStatement","src":"7544:47:25"},{"nodeType":"YulAssignment","src":"7600:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:25"},"nodeType":"YulFunctionCall","src":"7608:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:25","type":""}],"src":"7327:419:25"},{"body":{"nodeType":"YulBlock","src":"7858:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:25"},"nodeType":"YulFunctionCall","src":"7876:14:25"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:25","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:25"},"nodeType":"YulFunctionCall","src":"7869:58:25"},"nodeType":"YulExpressionStatement","src":"7869:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:25"},"nodeType":"YulFunctionCall","src":"7944:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:25"},"nodeType":"YulFunctionCall","src":"7937:31:25"},"nodeType":"YulExpressionStatement","src":"7937:31:25"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:25","type":""}],"src":"7752:223:25"},{"body":{"nodeType":"YulBlock","src":"8127:220:25","statements":[{"nodeType":"YulAssignment","src":"8137:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:25"},"nodeType":"YulFunctionCall","src":"8144:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:25"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:25"},"nodeType":"YulFunctionCall","src":"8220:93:25"},"nodeType":"YulExpressionStatement","src":"8220:93:25"},{"nodeType":"YulAssignment","src":"8322:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:25"},"nodeType":"YulFunctionCall","src":"8329:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:25"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:25","type":""}],"src":"7981:366:25"},{"body":{"nodeType":"YulBlock","src":"8524:248:25","statements":[{"nodeType":"YulAssignment","src":"8534:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:25"},"nodeType":"YulFunctionCall","src":"8542:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:25"},"nodeType":"YulFunctionCall","src":"8577:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:25"},"nodeType":"YulFunctionCall","src":"8596:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:25"},"nodeType":"YulFunctionCall","src":"8570:47:25"},"nodeType":"YulExpressionStatement","src":"8570:47:25"},{"nodeType":"YulAssignment","src":"8626:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:25"},"nodeType":"YulFunctionCall","src":"8634:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:25","type":""}],"src":"8353:419:25"},{"body":{"nodeType":"YulBlock","src":"8884:115:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:25"},"nodeType":"YulFunctionCall","src":"8902:14:25"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:25","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:25"},"nodeType":"YulFunctionCall","src":"8895:58:25"},"nodeType":"YulExpressionStatement","src":"8895:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:25"},"nodeType":"YulFunctionCall","src":"8970:15:25"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:25","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:25"},"nodeType":"YulFunctionCall","src":"8963:29:25"},"nodeType":"YulExpressionStatement","src":"8963:29:25"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:25","type":""}],"src":"8778:221:25"},{"body":{"nodeType":"YulBlock","src":"9151:220:25","statements":[{"nodeType":"YulAssignment","src":"9161:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:25","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:25"},"nodeType":"YulFunctionCall","src":"9168:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:25"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:25"},"nodeType":"YulFunctionCall","src":"9244:93:25"},"nodeType":"YulExpressionStatement","src":"9244:93:25"},{"nodeType":"YulAssignment","src":"9346:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:25"},"nodeType":"YulFunctionCall","src":"9353:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:25"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:25","type":""}],"src":"9005:366:25"},{"body":{"nodeType":"YulBlock","src":"9548:248:25","statements":[{"nodeType":"YulAssignment","src":"9558:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:25"},"nodeType":"YulFunctionCall","src":"9566:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:25"},"nodeType":"YulFunctionCall","src":"9601:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:25"},"nodeType":"YulFunctionCall","src":"9620:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:25"},"nodeType":"YulFunctionCall","src":"9594:47:25"},"nodeType":"YulExpressionStatement","src":"9594:47:25"},{"nodeType":"YulAssignment","src":"9650:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:25"},"nodeType":"YulFunctionCall","src":"9658:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:25","type":""}],"src":"9377:419:25"},{"body":{"nodeType":"YulBlock","src":"9908:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:25"},"nodeType":"YulFunctionCall","src":"9926:14:25"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:25","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:25"},"nodeType":"YulFunctionCall","src":"9919:55:25"},"nodeType":"YulExpressionStatement","src":"9919:55:25"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:25","type":""}],"src":"9802:179:25"},{"body":{"nodeType":"YulBlock","src":"10133:220:25","statements":[{"nodeType":"YulAssignment","src":"10143:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:25","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:25"},"nodeType":"YulFunctionCall","src":"10150:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:25"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:25"},"nodeType":"YulFunctionCall","src":"10226:93:25"},"nodeType":"YulExpressionStatement","src":"10226:93:25"},{"nodeType":"YulAssignment","src":"10328:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:25"},"nodeType":"YulFunctionCall","src":"10335:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:25"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:25","type":""}],"src":"9987:366:25"},{"body":{"nodeType":"YulBlock","src":"10530:248:25","statements":[{"nodeType":"YulAssignment","src":"10540:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:25"},"nodeType":"YulFunctionCall","src":"10548:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:25"},"nodeType":"YulFunctionCall","src":"10583:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:25"},"nodeType":"YulFunctionCall","src":"10602:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:25"},"nodeType":"YulFunctionCall","src":"10576:47:25"},"nodeType":"YulExpressionStatement","src":"10576:47:25"},{"nodeType":"YulAssignment","src":"10632:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:25"},"nodeType":"YulFunctionCall","src":"10640:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:25","type":""}],"src":"10359:419:25"},{"body":{"nodeType":"YulBlock","src":"10890:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:25"},"nodeType":"YulFunctionCall","src":"10908:14:25"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:25","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:25"},"nodeType":"YulFunctionCall","src":"10901:58:25"},"nodeType":"YulExpressionStatement","src":"10901:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:25"},"nodeType":"YulFunctionCall","src":"10976:15:25"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:25","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:25"},"nodeType":"YulFunctionCall","src":"10969:32:25"},"nodeType":"YulExpressionStatement","src":"10969:32:25"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:25","type":""}],"src":"10784:224:25"},{"body":{"nodeType":"YulBlock","src":"11160:220:25","statements":[{"nodeType":"YulAssignment","src":"11170:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:25"},"nodeType":"YulFunctionCall","src":"11177:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:25"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:25"},"nodeType":"YulFunctionCall","src":"11253:93:25"},"nodeType":"YulExpressionStatement","src":"11253:93:25"},{"nodeType":"YulAssignment","src":"11355:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:25"},"nodeType":"YulFunctionCall","src":"11362:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:25"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:25","type":""}],"src":"11014:366:25"},{"body":{"nodeType":"YulBlock","src":"11557:248:25","statements":[{"nodeType":"YulAssignment","src":"11567:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:25"},"nodeType":"YulFunctionCall","src":"11575:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:25"},"nodeType":"YulFunctionCall","src":"11610:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:25"},"nodeType":"YulFunctionCall","src":"11629:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:25"},"nodeType":"YulFunctionCall","src":"11603:47:25"},"nodeType":"YulExpressionStatement","src":"11603:47:25"},{"nodeType":"YulAssignment","src":"11659:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:25"},"nodeType":"YulFunctionCall","src":"11667:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:25","type":""}],"src":"11386:419:25"},{"body":{"nodeType":"YulBlock","src":"11917:116:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:25"},"nodeType":"YulFunctionCall","src":"11935:14:25"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:25","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:25"},"nodeType":"YulFunctionCall","src":"11928:58:25"},"nodeType":"YulExpressionStatement","src":"11928:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:25"},"nodeType":"YulFunctionCall","src":"12003:15:25"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:25","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:25"},"nodeType":"YulFunctionCall","src":"11996:30:25"},"nodeType":"YulExpressionStatement","src":"11996:30:25"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:25","type":""}],"src":"11811:222:25"},{"body":{"nodeType":"YulBlock","src":"12185:220:25","statements":[{"nodeType":"YulAssignment","src":"12195:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:25","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:25"},"nodeType":"YulFunctionCall","src":"12202:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:25"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:25"},"nodeType":"YulFunctionCall","src":"12278:93:25"},"nodeType":"YulExpressionStatement","src":"12278:93:25"},{"nodeType":"YulAssignment","src":"12380:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:25"},"nodeType":"YulFunctionCall","src":"12387:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:25"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:25","type":""}],"src":"12039:366:25"},{"body":{"nodeType":"YulBlock","src":"12582:248:25","statements":[{"nodeType":"YulAssignment","src":"12592:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:25"},"nodeType":"YulFunctionCall","src":"12600:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:25"},"nodeType":"YulFunctionCall","src":"12635:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:25"},"nodeType":"YulFunctionCall","src":"12654:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:25"},"nodeType":"YulFunctionCall","src":"12628:47:25"},"nodeType":"YulExpressionStatement","src":"12628:47:25"},{"nodeType":"YulAssignment","src":"12684:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:25"},"nodeType":"YulFunctionCall","src":"12692:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:25","type":""}],"src":"12411:419:25"},{"body":{"nodeType":"YulBlock","src":"12942:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:25"},"nodeType":"YulFunctionCall","src":"12960:14:25"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:25","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:25"},"nodeType":"YulFunctionCall","src":"12953:58:25"},"nodeType":"YulExpressionStatement","src":"12953:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:25"},"nodeType":"YulFunctionCall","src":"13028:15:25"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:25","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:25"},"nodeType":"YulFunctionCall","src":"13021:33:25"},"nodeType":"YulExpressionStatement","src":"13021:33:25"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:25","type":""}],"src":"12836:225:25"},{"body":{"nodeType":"YulBlock","src":"13213:220:25","statements":[{"nodeType":"YulAssignment","src":"13223:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:25"},"nodeType":"YulFunctionCall","src":"13230:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:25"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:25"},"nodeType":"YulFunctionCall","src":"13306:93:25"},"nodeType":"YulExpressionStatement","src":"13306:93:25"},{"nodeType":"YulAssignment","src":"13408:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:25"},"nodeType":"YulFunctionCall","src":"13415:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:25"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:25","type":""}],"src":"13067:366:25"},{"body":{"nodeType":"YulBlock","src":"13610:248:25","statements":[{"nodeType":"YulAssignment","src":"13620:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:25"},"nodeType":"YulFunctionCall","src":"13628:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:25"},"nodeType":"YulFunctionCall","src":"13663:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:25"},"nodeType":"YulFunctionCall","src":"13682:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:25"},"nodeType":"YulFunctionCall","src":"13656:47:25"},"nodeType":"YulExpressionStatement","src":"13656:47:25"},{"nodeType":"YulAssignment","src":"13712:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:25"},"nodeType":"YulFunctionCall","src":"13720:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:25","type":""}],"src":"13439:419:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ebe565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f50565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fe2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061104e565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611172565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290611204565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c55565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b83811115610ac5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ae782610a7c565b610af18185610a87565b9350610b01818560208601610a98565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4157610e40610dc7565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ea8602583610a87565b9150610eb382610e4c565b604082019050919050565b60006020820190508181036000830152610ed781610e9b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3a602483610a87565b9150610f4582610ede565b604082019050919050565b60006020820190508181036000830152610f6981610f2d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcc602283610a87565b9150610fd782610f70565b604082019050919050565b60006020820190508181036000830152610ffb81610fbf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611038601d83610a87565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110ca602583610a87565b91506110d58261106e565b604082019050919050565b600060208201905081810360008301526110f9816110bd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061115c602383610a87565b915061116782611100565b604082019050919050565b6000602082019050818103600083015261118b8161114f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111ee602683610a87565b91506111f982611192565b604082019050919050565b6000602082019050818103600083015261121d816111e1565b905091905056fea26469706673582212203b937bf67a0bb84ce713b8811e9fc5731543492b8c23f08b818713655b3a3ac364736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE40 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB3 DUP3 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED7 DUP2 PUSH2 0xE9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF69 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCC PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD7 DUP3 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFFB DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1038 PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 DUP3 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1067 DUP2 PUSH2 0x102B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CA PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D5 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F9 DUP2 PUSH2 0x10BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115C PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1167 DUP3 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118B DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11EE PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F9 DUP3 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x121D DUP2 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP4 PUSH28 0xF67A0BB84CE713B8811E9FC5731543492B8C23F08B818713655B3A3A 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"1532:11312:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10457:340:8:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050a9bfb921e501c1785218f255de28c9b80a0e25e2745042cdaa6d11c52691df64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xA9 0xBF 0xB9 0x21 0xE5 ADD 0xC1 PUSH25 0x5218F255DE28C9B80A0E25E2745042CDAA6D11C52691DF6473 PUSH16 0x6C634300080D00330000000000000000 ","sourceMap":"701:6211:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050a9bfb921e501c1785218f255de28c9b80a0e25e2745042cdaa6d11c52691df64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xA9 0xBF 0xB9 0x21 0xE5 ADD 0xC1 PUSH25 0x5218F255DE28C9B80A0E25E2745042CDAA6D11C52691DF6473 PUSH16 0x6C634300080D00330000000000000000 ","sourceMap":"701:6211:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3955e939f14a44b99e14f2a1684aaae31b1c211c14f01cf516e34e8d5987b7164736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP6 0x5E SWAP4 SWAP16 EQ LOG4 0x4B SWAP10 0xE1 0x4F 0x2A AND DUP5 0xAA 0xAE BALANCE 0xB1 0xC2 GT 0xC1 0x4F ADD 0xCF MLOAD PUSH15 0x34E8D5987B7164736F6C634300080D STOP CALLER ","sourceMap":"194:9169:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3955e939f14a44b99e14f2a1684aaae31b1c211c14f01cf516e34e8d5987b7164736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP6 0x5E SWAP4 SWAP16 EQ LOG4 0x4B SWAP10 0xE1 0x4F 0x2A AND DUP5 0xAA 0xAE BALANCE 0xB1 0xC2 GT 0xC1 0x4F ADD 0xCF MLOAD PUSH15 0x34E8D5987B7164736F6C634300080D STOP CALLER ","sourceMap":"194:9169:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c37e205669d299482463daf82f30a5ea086f585e6297e947b18d2fc30718ffae64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH31 0x205669D299482463DAF82F30A5EA086F585E6297E947B18D2FC30718FFAE64 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c37e205669d299482463daf82f30a5ea086f585e6297e947b18d2fc30718ffae64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH31 0x205669D299482463DAF82F30A5EA086F585E6297E947B18D2FC30718FFAE64 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207fcdf73939310b5e83ede214274f2923db906e1b7697b7d7af253904d041f73c64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xCDF73939310B5E83EDE214274F2923DB906E1B7697B7D7AF253904D041F73C64 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"369:8761:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207fcdf73939310b5e83ede214274f2923db906e1b7697b7d7af253904d041f73c64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xCDF73939310B5E83EDE214274F2923DB906E1B7697B7D7AF253904D041F73C64 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"369:8761:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204629007b917844b869ff12d0eaa3f7259029155fa88e537e2c8aff71b475c9e964736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x29 STOP PUSH28 0x917844B869FF12D0EAA3F7259029155FA88E537E2C8AFF71B475C9E9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"202:12582:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204629007b917844b869ff12d0eaa3f7259029155fa88e537e2c8aff71b475c9e964736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x29 STOP PUSH28 0x917844B869FF12D0EAA3F7259029155FA88E537E2C8AFF71B475C9E9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"202:12582:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f4dedf7e889da463d50053388dce0c38cb1fe1f3a38b00a93c063ed8fef84ae64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4D 0xED 0xF7 0xE8 DUP10 0xDA CHAINID RETURNDATASIZE POP SDIV CALLER DUP9 0xDC 0xE0 0xC3 DUP13 0xB1 INVALID 0x1F GASPRICE CODESIZE 0xB0 EXP SWAP4 0xC0 PUSH4 0xED8FEF84 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f4dedf7e889da463d50053388dce0c38cb1fe1f3a38b00a93c063ed8fef84ae64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4D 0xED 0xF7 0xE8 DUP10 0xDA CHAINID RETURNDATASIZE POP SDIV CALLER DUP9 0xDC 0xE0 0xC3 DUP13 0xB1 INVALID 0x1F GASPRICE CODESIZE 0xB0 EXP SWAP4 0xC0 PUSH4 0xED8FEF84 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e5d6df0a397fb874044f84843b75e017c1d5d741c0e48ac9be7e7caefb9510164736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x5D PUSH14 0xF0A397FB874044F84843B75E017C SAR 0x5D PUSH21 0x1C0E48AC9BE7E7CAEFB9510164736F6C634300080D STOP CALLER ","sourceMap":"1329:11630:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e5d6df0a397fb874044f84843b75e017c1d5d741c0e48ac9be7e7caefb9510164736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x5D PUSH14 0xF0A397FB874044F84843B75E017C SAR 0x5D PUSH21 0x1C0E48AC9BE7E7CAEFB9510164736F6C634300080D STOP CALLER ","sourceMap":"1329:11630:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/Claim.sol":{"Claim":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_maxDailyClaim","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Claim_Contract_Does_Not_Have_Enough_Tokens","type":"error"},{"inputs":[],"name":"Claim_Exceeded_Daily_Claiming_Limit","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"addSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_nonce","type":"bytes32"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"claimToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxDailyClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"removeSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxDailyClaim","type":"uint256"}],"name":"setMaxDailyClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4651":{"entryPoint":null,"id":4651,"parameterSlots":2,"returnSlots":0},"@_769":{"entryPoint":null,"id":769,"parameterSlots":0,"returnSlots":0},"@_877":{"entryPoint":null,"id":877,"parameterSlots":0,"returnSlots":0},"@_msgSender_2367":{"entryPoint":182,"id":2367,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_857":{"entryPoint":190,"id":857,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256_fromMemory":{"entryPoint":553,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":425,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":494,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":388,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":445,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1715:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"890:32:25","statements":[{"nodeType":"YulAssignment","src":"900:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:25","type":""}],"src":"845:77:25"},{"body":{"nodeType":"YulBlock","src":"971:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:25"},"nodeType":"YulFunctionCall","src":"1030:12:25"},"nodeType":"YulExpressionStatement","src":"1030:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:25"},"nodeType":"YulFunctionCall","src":"1001:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:25"},"nodeType":"YulFunctionCall","src":"991:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:25"},"nodeType":"YulFunctionCall","src":"984:43:25"},"nodeType":"YulIf","src":"981:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:25","type":""}],"src":"928:122:25"},{"body":{"nodeType":"YulBlock","src":"1119:80:25","statements":[{"nodeType":"YulAssignment","src":"1129:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:25"},"nodeType":"YulFunctionCall","src":"1138:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:25"},"nodeType":"YulFunctionCall","src":"1160:33:25"},"nodeType":"YulExpressionStatement","src":"1160:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:25","type":""}],"src":"1056:143:25"},{"body":{"nodeType":"YulBlock","src":"1299:413:25","statements":[{"body":{"nodeType":"YulBlock","src":"1345:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1347:77:25"},"nodeType":"YulFunctionCall","src":"1347:79:25"},"nodeType":"YulExpressionStatement","src":"1347:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1320:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1329:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1316:3:25"},"nodeType":"YulFunctionCall","src":"1316:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1341:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1312:3:25"},"nodeType":"YulFunctionCall","src":"1312:32:25"},"nodeType":"YulIf","src":"1309:119:25"},{"nodeType":"YulBlock","src":"1438:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1453:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1467:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1482:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1528:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1539:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1524:3:25"},"nodeType":"YulFunctionCall","src":"1524:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1548:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1492:31:25"},"nodeType":"YulFunctionCall","src":"1492:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1482:6:25"}]}]},{"nodeType":"YulBlock","src":"1576:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1591:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1605:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1595:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1621:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1667:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1678:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1663:3:25"},"nodeType":"YulFunctionCall","src":"1663:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1687:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1631:31:25"},"nodeType":"YulFunctionCall","src":"1631:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1621:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1261:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1272:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1284:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1292:6:25","type":""}],"src":"1205:507:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620025c0380380620025c0833981810160405281019062000037919062000229565b60016000819055506200005f62000053620000b660201b60201c565b620000be60201b60201c565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260088190555080600681905550505062000270565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b68262000189565b9050919050565b620001c881620001a9565b8114620001d457600080fd5b50565b600081519050620001e881620001bd565b92915050565b6000819050919050565b6200020381620001ee565b81146200020f57600080fd5b50565b6000815190506200022381620001f8565b92915050565b6000806040838503121562000243576200024262000184565b5b60006200025385828601620001d7565b9250506020620002668582860162000212565b9150509250929050565b61234080620002806000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806396e09b711161006657806396e09b71146101215780639e281a981461013d578063eb12d61e14610159578063f2fde38b14610175578063fc0c546a146101915761009e565b8063054a1bcd146100a35780630e316ab7146100c1578063715018a6146100dd5780637aee389b146100e75780638da5cb5b14610103575b600080fd5b6100ab6101af565b6040516100b891906113e4565b60405180910390f35b6100db60048036038101906100d69190611471565b6101b5565b005b6100e56101d5565b005b61010160048036038101906100fc919061167a565b6101e9565b005b61010b61040a565b6040516101189190611719565b60405180910390f35b61013b60048036038101906101369190611760565b610434565b005b6101576004803603810190610152919061178d565b610446565b005b610173600480360381019061016e9190611471565b610574565b005b61018f600480360381019061018a9190611471565b610594565b005b610199610617565b6040516101a6919061182c565b60405180910390f35b60065481565b6101bd61063d565b6101d18160026106bb90919063ffffffff16565b5050565b6101dd61063d565b6101e760006106eb565b565b6101f16107b1565b600042905080620151806008546102089190611876565b101561021e576000600781905550806008819055505b61025a8486604051602001610234929190611967565b60405160208183030381529060405284846004600261080090949392919063ffffffff16565b6000808580602001905181019061027191906119e2565b91509150600654826007546102869190611876565b11156102be576040517f9b01268b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161031a9190611719565b602060405180830381865afa158015610337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035b9190611a22565b1015610393576040517ffcb0d13700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760008282546103a59190611876565b925050819055506103f98183600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ac9092919063ffffffff16565b505050610404610932565b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61043c61063d565b8060068190555050565b61044e61063d565b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104aa9190611719565b602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb9190611a22565b1015610523576040517ffcb0d13700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105708282600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ac9092919063ffffffff16565b5050565b61057c61063d565b61059081600261093c90919063ffffffff16565b5050565b61059c61063d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290611ad2565b60405180910390fd5b610614816106eb565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61064561096c565b73ffffffffffffffffffffffffffffffffffffffff1661066361040a565b73ffffffffffffffffffffffffffffffffffffffff16146106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090611b3e565b60405180910390fd5b565b60006106e3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610974565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600054036107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90611baa565b60405180910390fd5b6002600081905550565b600061080b85610a88565b905081600082815260200190815260200160002060009054906101000a900460ff161561086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490611c3c565b60405180910390fd5b600182600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a486828686610a9a565b505050505050565b61092d8363a9059cbb60e01b84846040516024016108cb929190611c5c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610aeb565b505050565b6001600081905550565b6000610964836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610bb3565b905092915050565b600033905090565b60008083600101600084815260200190815260200160002054905060008114610a7c5760006001826109a69190611c85565b90506000600186600001805490506109be9190611c85565b9050818114610a2d5760008660000182815481106109df576109de611cb9565b5b9060005260206000200154905080876000018481548110610a0357610a02611cb9565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610a4157610a40611ce8565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a82565b60009150505b92915050565b6000610a9382610c23565b9050919050565b610aa684848484610c5e565b610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611d89565b60405180910390fd5b50505050565b6000610b4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610cca9092919063ffffffff16565b9050600081511480610b6f575080806020019051810190610b6e9190611de1565b5b610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611e80565b60405180910390fd5b505050565b6000610bbf8383610ce2565b610c18578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610c1d565b600090505b92915050565b6000610c2f8251610d05565b82604051602001610c41929190611f33565b604051602081830303815290604052805190602001209050919050565b6000610cc0610cb18585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd3565b86610dfa90919063ffffffff16565b9050949350505050565b6060610cd98484600085610e2a565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006001610d1484610ef7565b01905060008167ffffffffffffffff811115610d3357610d326114ef565b5b6040519080825280601f01601f191660200182016040528015610d655781602001600182028036833780820191505090505b509050600082602001820190505b600115610dc8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610dbc57610dbb611f62565b5b04945060008503610d73575b819350505050919050565b6000806000610de2858561104a565b91509150610def8161109b565b819250505092915050565b6000610e22836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610ce2565b905092915050565b606082471015610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690612003565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e989190612023565b60006040518083038185875af1925050503d8060008114610ed5576040519150601f19603f3d011682016040523d82523d6000602084013e610eda565b606091505b5091509150610eeb87838387611201565b92505050949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610f55577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610f4b57610f4a611f62565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610f92576d04ee2d6d415b85acef81000000008381610f8857610f87611f62565b5b0492506020810190505b662386f26fc100008310610fc157662386f26fc100008381610fb757610fb6611f62565b5b0492506010810190505b6305f5e1008310610fea576305f5e1008381610fe057610fdf611f62565b5b0492506008810190505b612710831061100f57612710838161100557611004611f62565b5b0492506004810190505b60648310611032576064838161102857611027611f62565b5b0492506002810190505b600a8310611041576001810190505b80915050919050565b600080604183510361108b5760008060006020860151925060408601519150606086015160001a905061107f87828585611276565b94509450505050611094565b60006002915091505b9250929050565b600060048111156110af576110ae61203a565b5b8160048111156110c2576110c161203a565b5b03156111fe57600160048111156110dc576110db61203a565b5b8160048111156110ef576110ee61203a565b5b0361112f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611126906120b5565b60405180910390fd5b600260048111156111435761114261203a565b5b8160048111156111565761115561203a565b5b03611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118d90612121565b60405180910390fd5b600360048111156111aa576111a961203a565b5b8160048111156111bd576111bc61203a565b5b036111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f4906121b3565b60405180910390fd5b5b50565b6060831561126357600083510361125b5761121b85611358565b61125a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112519061221f565b60405180910390fd5b5b82905061126e565b61126d838361137b565b5b949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156112b157600060039150915061134f565b6000600187878787604051600081526020016040526040516112d6949392919061226a565b6020604051602081039080840390855afa1580156112f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113465760006001925092505061134f565b80600092509250505b94509492505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561138e5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c291906122e8565b60405180910390fd5b6000819050919050565b6113de816113cb565b82525050565b60006020820190506113f960008301846113d5565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143e82611413565b9050919050565b61144e81611433565b811461145957600080fd5b50565b60008135905061146b81611445565b92915050565b60006020828403121561148757611486611409565b5b60006114958482850161145c565b91505092915050565b6000819050919050565b6114b18161149e565b81146114bc57600080fd5b50565b6000813590506114ce816114a8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611527826114de565b810181811067ffffffffffffffff82111715611546576115456114ef565b5b80604052505050565b60006115596113ff565b9050611565828261151e565b919050565b600067ffffffffffffffff821115611585576115846114ef565b5b61158e826114de565b9050602081019050919050565b82818337600083830152505050565b60006115bd6115b88461156a565b61154f565b9050828152602081018484840111156115d9576115d86114d9565b5b6115e484828561159b565b509392505050565b600082601f830112611601576116006114d4565b5b81356116118482602086016115aa565b91505092915050565b600080fd5b600080fd5b60008083601f84011261163a576116396114d4565b5b8235905067ffffffffffffffff8111156116575761165661161a565b5b6020830191508360018202830111156116735761167261161f565b5b9250929050565b6000806000806060858703121561169457611693611409565b5b60006116a2878288016114bf565b945050602085013567ffffffffffffffff8111156116c3576116c261140e565b5b6116cf878288016115ec565b935050604085013567ffffffffffffffff8111156116f0576116ef61140e565b5b6116fc87828801611624565b925092505092959194509250565b61171381611433565b82525050565b600060208201905061172e600083018461170a565b92915050565b61173d816113cb565b811461174857600080fd5b50565b60008135905061175a81611734565b92915050565b60006020828403121561177657611775611409565b5b60006117848482850161174b565b91505092915050565b600080604083850312156117a4576117a3611409565b5b60006117b28582860161145c565b92505060206117c38582860161174b565b9150509250929050565b6000819050919050565b60006117f26117ed6117e884611413565b6117cd565b611413565b9050919050565b6000611804826117d7565b9050919050565b6000611816826117f9565b9050919050565b6118268161180b565b82525050565b6000602082019050611841600083018461181d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611881826113cb565b915061188c836113cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118c1576118c0611847565b5b828201905092915050565b600081519050919050565b600081905092915050565b60005b838110156119005780820151818401526020810190506118e5565b8381111561190f576000848401525b50505050565b6000611920826118cc565b61192a81856118d7565b935061193a8185602086016118e2565b80840191505092915050565b6000819050919050565b61196161195c8261149e565b611946565b82525050565b60006119738285611915565b915061197f8284611950565b6020820191508190509392505050565b60008151905061199e81611734565b92915050565b60006119af82611413565b9050919050565b6119bf816119a4565b81146119ca57600080fd5b50565b6000815190506119dc816119b6565b92915050565b600080604083850312156119f9576119f8611409565b5b6000611a078582860161198f565b9250506020611a18858286016119cd565b9150509250929050565b600060208284031215611a3857611a37611409565b5b6000611a468482850161198f565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611abc602683611a4f565b9150611ac782611a60565b604082019050919050565b60006020820190508181036000830152611aeb81611aaf565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b28602083611a4f565b9150611b3382611af2565b602082019050919050565b60006020820190508181036000830152611b5781611b1b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b94601f83611a4f565b9150611b9f82611b5e565b602082019050919050565b60006020820190508181036000830152611bc381611b87565b9050919050565b7f5369676e6174757265436865636b65723a204d65737361676520616c7265616460008201527f7920757365640000000000000000000000000000000000000000000000000000602082015250565b6000611c26602683611a4f565b9150611c3182611bca565b604082019050919050565b60006020820190508181036000830152611c5581611c19565b9050919050565b6000604082019050611c71600083018561170a565b611c7e60208301846113d5565b9392505050565b6000611c90826113cb565b9150611c9b836113cb565b925082821015611cae57611cad611847565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f5369676e6174757265436865636b65723a20496e76616c6964207369676e617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b6000611d73602383611a4f565b9150611d7e82611d17565b604082019050919050565b60006020820190508181036000830152611da281611d66565b9050919050565b60008115159050919050565b611dbe81611da9565b8114611dc957600080fd5b50565b600081519050611ddb81611db5565b92915050565b600060208284031215611df757611df6611409565b5b6000611e0584828501611dcc565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611e6a602a83611a4f565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611ee1601a83611ea0565b9150611eec82611eab565b601a82019050919050565b600081519050919050565b6000611f0d82611ef7565b611f178185611ea0565b9350611f278185602086016118e2565b80840191505092915050565b6000611f3e82611ed4565b9150611f4a8285611f02565b9150611f568284611915565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611fed602683611a4f565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b600061202f8284611915565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061209f601883611a4f565b91506120aa82612069565b602082019050919050565b600060208201905081810360008301526120ce81612092565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061210b601f83611a4f565b9150612116826120d5565b602082019050919050565b6000602082019050818103600083015261213a816120fe565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061219d602283611a4f565b91506121a882612141565b604082019050919050565b600060208201905081810360008301526121cc81612190565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612209601d83611a4f565b9150612214826121d3565b602082019050919050565b60006020820190508181036000830152612238816121fc565b9050919050565b6122488161149e565b82525050565b600060ff82169050919050565b6122648161224e565b82525050565b600060808201905061227f600083018761223f565b61228c602083018661225b565b612299604083018561223f565b6122a6606083018461223f565b95945050505050565b60006122ba82611ef7565b6122c48185611a4f565b93506122d48185602086016118e2565b6122dd816114de565b840191505092915050565b6000602082019050818103600083015261230281846122af565b90509291505056fea2646970667358221220867e318b47eefb118f9370a9a2bd46dff0c366dc58463b32a40698af9297e74264736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25C0 CODESIZE SUB DUP1 PUSH3 0x25C0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x5F PUSH3 0x53 PUSH3 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x270 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B6 DUP3 PUSH3 0x189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C8 DUP2 PUSH3 0x1A9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E8 DUP2 PUSH3 0x1BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x203 DUP2 PUSH3 0x1EE JUMP JUMPDEST DUP2 EQ PUSH3 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x223 DUP2 PUSH3 0x1F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x243 JUMPI PUSH3 0x242 PUSH3 0x184 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x253 DUP6 DUP3 DUP7 ADD PUSH3 0x1D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x266 DUP6 DUP3 DUP7 ADD PUSH3 0x212 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2340 DUP1 PUSH3 0x280 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96E09B71 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x96E09B71 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x191 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x54A1BCD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE316AB7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x7AEE389B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x1D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63D JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH1 0x2 PUSH2 0x6BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x63D JUMP JUMPDEST PUSH2 0x1E7 PUSH1 0x0 PUSH2 0x6EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP DUP1 PUSH3 0x15180 PUSH1 0x8 SLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x25A DUP5 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP5 PUSH1 0x4 PUSH1 0x2 PUSH2 0x800 SWAP1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 SLOAD DUP3 PUSH1 0x7 SLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B01268B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x337 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCB0D13700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3F9 DUP2 DUP4 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0x404 PUSH2 0x932 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x43C PUSH2 0x63D JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x44E PUSH2 0x63D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST LT ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCB0D13700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x570 DUP3 DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0x63D JUMP JUMPDEST PUSH2 0x590 DUP2 PUSH1 0x2 PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x59C PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x6EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x645 PUSH2 0x96C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x663 PUSH2 0x40A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80B DUP6 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x864 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8A4 DUP7 DUP3 DUP7 DUP7 PUSH2 0xA9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8CB SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x964 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xA7C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xA2D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x1CB9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH2 0xA02 PUSH2 0x1CB9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0xA41 JUMPI PUSH2 0xA40 PUSH2 0x1CE8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP3 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCCA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xB6F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBF DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0xC18 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP3 MLOAD PUSH2 0xD05 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC41 SWAP3 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0xCB1 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD3 JUMP JUMPDEST DUP7 PUSH2 0xDFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCD9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xD14 DUP5 PUSH2 0xEF7 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD65 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xDC8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xD73 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP6 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDEF DUP2 PUSH2 0x109B JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE22 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xCE2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEEB DUP8 DUP4 DUP4 DUP8 PUSH2 0x1201 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xF55 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xF4B JUMPI PUSH2 0xF4A PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF92 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFC1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xFB7 JUMPI PUSH2 0xFB6 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFEA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xFE0 JUMPI PUSH2 0xFDF PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x100F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1005 JUMPI PUSH2 0x1004 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1032 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1028 JUMPI PUSH2 0x1027 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1041 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x107F DUP8 DUP3 DUP6 DUP6 PUSH2 0x1276 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x11FE JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1126 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH2 0x1142 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11A9 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x125B JUMPI PUSH2 0x121B DUP6 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x126E JUMP JUMPDEST PUSH2 0x126D DUP4 DUP4 PUSH2 0x137B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x12D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1346 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x134F JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x138E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DE DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144E DUP2 PUSH2 0x1433 JUMP JUMPDEST DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146B DUP2 PUSH2 0x1445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1486 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1495 DUP5 DUP3 DUP6 ADD PUSH2 0x145C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B1 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP2 EQ PUSH2 0x14BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1527 DUP3 PUSH2 0x14DE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1559 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH2 0x1565 DUP3 DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST PUSH2 0x158E DUP3 PUSH2 0x14DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD PUSH2 0x15B8 DUP5 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x14D9 JUMP JUMPDEST JUMPDEST PUSH2 0x15E4 DUP5 DUP3 DUP6 PUSH2 0x159B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1611 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x161A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x161F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A2 DUP8 DUP3 DUP9 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x140E JUMP JUMPDEST JUMPDEST PUSH2 0x16CF DUP8 DUP3 DUP9 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x140E JUMP JUMPDEST JUMPDEST PUSH2 0x16FC DUP8 DUP3 DUP9 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175A DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1784 DUP5 DUP3 DUP6 ADD PUSH2 0x174B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP6 DUP3 DUP7 ADD PUSH2 0x145C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x174B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F2 PUSH2 0x17ED PUSH2 0x17E8 DUP5 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1816 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1826 DUP2 PUSH2 0x180B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1841 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH2 0x188C DUP4 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1900 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP3 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x192A DUP2 DUP6 PUSH2 0x18D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x193A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1961 PUSH2 0x195C DUP3 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP3 DUP6 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP PUSH2 0x197F DUP3 DUP5 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x199E DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AF DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BF DUP2 PUSH2 0x19A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19DC DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F8 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A07 DUP6 DUP3 DUP7 ADD PUSH2 0x198F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x19CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A38 JUMPI PUSH2 0x1A37 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP5 DUP3 DUP6 ADD PUSH2 0x198F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B28 PUSH1 0x20 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B33 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B57 DUP2 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B94 PUSH1 0x1F DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9F DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC3 DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E6174757265436865636B65723A204D65737361676520616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C26 PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C31 DUP3 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C55 DUP2 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1C7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9B DUP4 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5369676E6174757265436865636B65723A20496E76616C6964207369676E6174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D73 PUSH1 0x23 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7E DUP3 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA2 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DDB DUP2 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E05 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x2A DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE1 PUSH1 0x1A DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEC DUP3 PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D DUP3 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1F17 DUP2 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E DUP3 PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4A DUP3 DUP6 PUSH2 0x1F02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP3 DUP5 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F DUP3 DUP5 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209F PUSH1 0x18 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x20AA DUP3 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20CE DUP2 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210B PUSH1 0x1F DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x2116 DUP3 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213A DUP2 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219D PUSH1 0x22 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP3 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21CC DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 PUSH1 0x1D DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x2214 DUP3 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2238 DUP2 PUSH2 0x21FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2264 DUP2 PUSH2 0x224E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x227F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x228C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x2299 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x22A6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x223F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA DUP3 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22C4 DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP PUSH2 0x22D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x14DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2302 DUP2 DUP5 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH31 0x318B47EEFB118F9370A9A2BD46DFF0C366DC58463B32A40698AF9297E74264 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"644:2029:22:-:0;;;981:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:7;1821:7;:22;;;;936:32:6;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1065:13:22;1050:5;;:29;;;;;;;;;;;;;;;;;;1110:15;1089:18;:36;;;;1151:14;1135:13;:30;;;;981:191;;644:2029;;640:96:14;693:7;719:10;712:17;;640:96;:::o;2426:187:6:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;644:2029:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_4032":{"entryPoint":2995,"id":4032,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_1976":{"entryPoint":2795,"id":1976,"parameterSlots":2,"returnSlots":0},"@_checkOwner_800":{"entryPoint":1597,"id":800,"parameterSlots":0,"returnSlots":0},"@_contains_4135":{"entryPoint":3298,"id":4135,"parameterSlots":2,"returnSlots":1},"@_msgSender_2367":{"entryPoint":2412,"id":2367,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_911":{"entryPoint":2354,"id":911,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_903":{"entryPoint":1969,"id":903,"parameterSlots":0,"returnSlots":0},"@_remove_4116":{"entryPoint":2420,"id":4116,"parameterSlots":2,"returnSlots":1},"@_revert_2354":{"entryPoint":4987,"id":2354,"parameterSlots":2,"returnSlots":0},"@_throwError_2660":{"entryPoint":4251,"id":2660,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_857":{"entryPoint":1771,"id":857,"parameterSlots":1,"returnSlots":0},"@addSigner_190":{"entryPoint":1396,"id":190,"parameterSlots":1,"returnSlots":0},"@add_4332":{"entryPoint":2364,"id":4332,"parameterSlots":2,"returnSlots":1},"@claimToken_4754":{"entryPoint":489,"id":4754,"parameterSlots":4,"returnSlots":0},"@contains_4386":{"entryPoint":3578,"id":4386,"parameterSlots":2,"returnSlots":1},"@functionCallWithValue_2179":{"entryPoint":3626,"id":2179,"parameterSlots":4,"returnSlots":1},"@functionCall_2115":{"entryPoint":3274,"id":2115,"parameterSlots":3,"returnSlots":1},"@generateMessage_159":{"entryPoint":2696,"id":159,"parameterSlots":1,"returnSlots":1},"@isContract_2043":{"entryPoint":4952,"id":2043,"parameterSlots":1,"returnSlots":1},"@log10_3711":{"entryPoint":3831,"id":3711,"parameterSlots":1,"returnSlots":1},"@maxDailyClaim_4624":{"entryPoint":431,"id":4624,"parameterSlots":0,"returnSlots":0},"@owner_786":{"entryPoint":1034,"id":786,"parameterSlots":0,"returnSlots":1},"@recover_2733":{"entryPoint":3539,"id":2733,"parameterSlots":2,"returnSlots":1},"@removeSigner_205":{"entryPoint":437,"id":205,"parameterSlots":1,"returnSlots":0},"@remove_4359":{"entryPoint":1723,"id":4359,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_814":{"entryPoint":469,"id":814,"parameterSlots":0,"returnSlots":0},"@requireValidSignature_145":{"entryPoint":2714,"id":145,"parameterSlots":4,"returnSlots":0},"@requireValidSignature_50":{"entryPoint":2048,"id":50,"parameterSlots":5,"returnSlots":0},"@safeTransfer_1682":{"entryPoint":2220,"id":1682,"parameterSlots":3,"returnSlots":0},"@setMaxDailyClaim_4663":{"entryPoint":1076,"id":4663,"parameterSlots":1,"returnSlots":0},"@toEthSignedMessageHash_2939":{"entryPoint":3107,"id":2939,"parameterSlots":1,"returnSlots":1},"@toString_2436":{"entryPoint":3333,"id":2436,"parameterSlots":1,"returnSlots":1},"@token_4622":{"entryPoint":1559,"id":4622,"parameterSlots":0,"returnSlots":0},"@transferOwnership_837":{"entryPoint":1428,"id":837,"parameterSlots":1,"returnSlots":0},"@tryRecover_2706":{"entryPoint":4170,"id":2706,"parameterSlots":2,"returnSlots":2},"@tryRecover_2874":{"entryPoint":4726,"id":2874,"parameterSlots":4,"returnSlots":2},"@validSignature_124":{"entryPoint":3166,"id":124,"parameterSlots":4,"returnSlots":1},"@verifyCallResultFromTarget_2310":{"entryPoint":4609,"id":2310,"parameterSlots":4,"returnSlots":1},"@withdrawToken_4784":{"entryPoint":1094,"id":4784,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5546,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":6605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6029,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_calldata_ptr":{"entryPoint":5754,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":5984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payable_fromMemory":{"entryPoint":6626,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5898,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8767,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":6480,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$1588_to_t_address_fromStack":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":8338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5_to_t_string_memory_ptr_fromStack":{"entryPoint":7526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":8446,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":6831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":8592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":8160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":6939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7892,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":8700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa_to_t_string_memory_ptr_fromStack":{"entryPoint":7193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":7773,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5077,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8795,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":6503,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7987,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7260,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8810,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1588__to_t_address__fromStack_reversed":{"entryPoint":6188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7228,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7808,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7082,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5092,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5455,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5119,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":5482,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6348,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7927,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6359,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6735,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7840,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6262,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7301,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5171,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":6564,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7593,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5278,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5139,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8782,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$1588_to_t_address":{"entryPoint":6155,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6103,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5531,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":6370,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5406,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6093,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":6470,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6215,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8034,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8250,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7400,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7353,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5359,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5658,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5332,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5663,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5337,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5134,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5129,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5342,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":8297,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5":{"entryPoint":7447,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":8405,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":6752,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":8513,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":8081,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":6898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4":{"entryPoint":7851,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":8659,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa":{"entryPoint":7114,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":7694,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":7006,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5189,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":6582,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7605,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5288,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5940,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28981:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:25","statements":[{"nodeType":"YulAssignment","src":"62:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:77:25"},{"body":{"nodeType":"YulBlock","src":"155:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:25"},"nodeType":"YulFunctionCall","src":"177:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:25"},"nodeType":"YulFunctionCall","src":"165:37:25"},"nodeType":"YulExpressionStatement","src":"165:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:25","type":""}],"src":"90:118:25"},{"body":{"nodeType":"YulBlock","src":"312:124:25","statements":[{"nodeType":"YulAssignment","src":"322:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:25"},"nodeType":"YulFunctionCall","src":"330:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:25"},"nodeType":"YulFunctionCall","src":"411:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:25"},"nodeType":"YulFunctionCall","src":"358:71:25"},"nodeType":"YulExpressionStatement","src":"358:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:25","type":""}],"src":"214:222:25"},{"body":{"nodeType":"YulBlock","src":"482:35:25","statements":[{"nodeType":"YulAssignment","src":"492:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:25"},"nodeType":"YulFunctionCall","src":"502:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:25","type":""}],"src":"442:75:25"},{"body":{"nodeType":"YulBlock","src":"612:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:25"},"nodeType":"YulFunctionCall","src":"622:12:25"},"nodeType":"YulExpressionStatement","src":"622:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:25"},{"body":{"nodeType":"YulBlock","src":"735:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:25"},"nodeType":"YulFunctionCall","src":"745:12:25"},"nodeType":"YulExpressionStatement","src":"745:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:25"},{"body":{"nodeType":"YulBlock","src":"814:81:25","statements":[{"nodeType":"YulAssignment","src":"824:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"839:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"846:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"835:3:25"},"nodeType":"YulFunctionCall","src":"835:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:25","type":""}],"src":"769:126:25"},{"body":{"nodeType":"YulBlock","src":"946:51:25","statements":[{"nodeType":"YulAssignment","src":"956:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"967:17:25"},"nodeType":"YulFunctionCall","src":"967:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"956:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"928:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"938:7:25","type":""}],"src":"901:96:25"},{"body":{"nodeType":"YulBlock","src":"1046:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1103:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1112:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1115:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1105:6:25"},"nodeType":"YulFunctionCall","src":"1105:12:25"},"nodeType":"YulExpressionStatement","src":"1105:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1094:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1076:17:25"},"nodeType":"YulFunctionCall","src":"1076:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1066:2:25"},"nodeType":"YulFunctionCall","src":"1066:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1059:6:25"},"nodeType":"YulFunctionCall","src":"1059:43:25"},"nodeType":"YulIf","src":"1056:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1039:5:25","type":""}],"src":"1003:122:25"},{"body":{"nodeType":"YulBlock","src":"1183:87:25","statements":[{"nodeType":"YulAssignment","src":"1193:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1215:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1202:12:25"},"nodeType":"YulFunctionCall","src":"1202:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1193:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1231:26:25"},"nodeType":"YulFunctionCall","src":"1231:33:25"},"nodeType":"YulExpressionStatement","src":"1231:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1161:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1169:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1177:5:25","type":""}],"src":"1131:139:25"},{"body":{"nodeType":"YulBlock","src":"1342:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"1388:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1390:77:25"},"nodeType":"YulFunctionCall","src":"1390:79:25"},"nodeType":"YulExpressionStatement","src":"1390:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1359:3:25"},"nodeType":"YulFunctionCall","src":"1359:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1384:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1355:3:25"},"nodeType":"YulFunctionCall","src":"1355:32:25"},"nodeType":"YulIf","src":"1352:119:25"},{"nodeType":"YulBlock","src":"1481:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1496:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1510:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1500:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1525:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1560:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1571:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1556:3:25"},"nodeType":"YulFunctionCall","src":"1556:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1580:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1535:20:25"},"nodeType":"YulFunctionCall","src":"1535:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1525:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1312:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1323:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1335:6:25","type":""}],"src":"1276:329:25"},{"body":{"nodeType":"YulBlock","src":"1656:32:25","statements":[{"nodeType":"YulAssignment","src":"1666:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1677:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1666:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1638:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1648:7:25","type":""}],"src":"1611:77:25"},{"body":{"nodeType":"YulBlock","src":"1737:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1794:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1803:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1806:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1796:6:25"},"nodeType":"YulFunctionCall","src":"1796:12:25"},"nodeType":"YulExpressionStatement","src":"1796:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1760:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1785:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1767:17:25"},"nodeType":"YulFunctionCall","src":"1767:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1757:2:25"},"nodeType":"YulFunctionCall","src":"1757:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1750:6:25"},"nodeType":"YulFunctionCall","src":"1750:43:25"},"nodeType":"YulIf","src":"1747:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:25","type":""}],"src":"1694:122:25"},{"body":{"nodeType":"YulBlock","src":"1874:87:25","statements":[{"nodeType":"YulAssignment","src":"1884:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1906:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1893:12:25"},"nodeType":"YulFunctionCall","src":"1893:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1884:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1949:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1922:26:25"},"nodeType":"YulFunctionCall","src":"1922:33:25"},"nodeType":"YulExpressionStatement","src":"1922:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1852:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1860:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1868:5:25","type":""}],"src":"1822:139:25"},{"body":{"nodeType":"YulBlock","src":"2056:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2073:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2076:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2066:6:25"},"nodeType":"YulFunctionCall","src":"2066:12:25"},"nodeType":"YulExpressionStatement","src":"2066:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1967:117:25"},{"body":{"nodeType":"YulBlock","src":"2179:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2199:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2189:6:25"},"nodeType":"YulFunctionCall","src":"2189:12:25"},"nodeType":"YulExpressionStatement","src":"2189:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2090:117:25"},{"body":{"nodeType":"YulBlock","src":"2261:54:25","statements":[{"nodeType":"YulAssignment","src":"2271:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2289:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2296:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:25"},"nodeType":"YulFunctionCall","src":"2285:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2305:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2301:3:25"},"nodeType":"YulFunctionCall","src":"2301:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2281:3:25"},"nodeType":"YulFunctionCall","src":"2281:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2271:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2244:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2254:6:25","type":""}],"src":"2213:102:25"},{"body":{"nodeType":"YulBlock","src":"2349:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2366:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2369:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:25"},"nodeType":"YulFunctionCall","src":"2359:88:25"},"nodeType":"YulExpressionStatement","src":"2359:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2463:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2466:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2456:6:25"},"nodeType":"YulFunctionCall","src":"2456:15:25"},"nodeType":"YulExpressionStatement","src":"2456:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2487:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2490:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2480:6:25"},"nodeType":"YulFunctionCall","src":"2480:15:25"},"nodeType":"YulExpressionStatement","src":"2480:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2321:180:25"},{"body":{"nodeType":"YulBlock","src":"2550:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2560:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2582:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2612:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2590:21:25"},"nodeType":"YulFunctionCall","src":"2590:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2578:3:25"},"nodeType":"YulFunctionCall","src":"2578:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2564:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2729:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2731:16:25"},"nodeType":"YulFunctionCall","src":"2731:18:25"},"nodeType":"YulExpressionStatement","src":"2731:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2672:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2684:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2669:2:25"},"nodeType":"YulFunctionCall","src":"2669:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2708:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2720:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2705:2:25"},"nodeType":"YulFunctionCall","src":"2705:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2666:2:25"},"nodeType":"YulFunctionCall","src":"2666:62:25"},"nodeType":"YulIf","src":"2663:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2767:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2771:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2760:6:25"},"nodeType":"YulFunctionCall","src":"2760:22:25"},"nodeType":"YulExpressionStatement","src":"2760:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2536:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"2544:4:25","type":""}],"src":"2507:281:25"},{"body":{"nodeType":"YulBlock","src":"2835:88:25","statements":[{"nodeType":"YulAssignment","src":"2845:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2855:18:25"},"nodeType":"YulFunctionCall","src":"2855:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2845:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2904:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"2912:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2884:19:25"},"nodeType":"YulFunctionCall","src":"2884:33:25"},"nodeType":"YulExpressionStatement","src":"2884:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2819:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2828:6:25","type":""}],"src":"2794:129:25"},{"body":{"nodeType":"YulBlock","src":"2995:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"3100:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3102:16:25"},"nodeType":"YulFunctionCall","src":"3102:18:25"},"nodeType":"YulExpressionStatement","src":"3102:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3072:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3080:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3069:2:25"},"nodeType":"YulFunctionCall","src":"3069:30:25"},"nodeType":"YulIf","src":"3066:56:25"},{"nodeType":"YulAssignment","src":"3132:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3162:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3140:21:25"},"nodeType":"YulFunctionCall","src":"3140:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3132:4:25"}]},{"nodeType":"YulAssignment","src":"3206:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3218:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3224:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:25"},"nodeType":"YulFunctionCall","src":"3214:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3206:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2979:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2990:4:25","type":""}],"src":"2929:307:25"},{"body":{"nodeType":"YulBlock","src":"3293:103:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3316:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"3321:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"3326:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3303:12:25"},"nodeType":"YulFunctionCall","src":"3303:30:25"},"nodeType":"YulExpressionStatement","src":"3303:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3374:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"3379:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3370:3:25"},"nodeType":"YulFunctionCall","src":"3370:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"3388:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3363:6:25"},"nodeType":"YulFunctionCall","src":"3363:27:25"},"nodeType":"YulExpressionStatement","src":"3363:27:25"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3275:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3280:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"3285:6:25","type":""}],"src":"3242:154:25"},{"body":{"nodeType":"YulBlock","src":"3485:327:25","statements":[{"nodeType":"YulAssignment","src":"3495:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3561:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3520:40:25"},"nodeType":"YulFunctionCall","src":"3520:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3504:15:25"},"nodeType":"YulFunctionCall","src":"3504:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3495:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3585:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"3592:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3578:6:25"},"nodeType":"YulFunctionCall","src":"3578:21:25"},"nodeType":"YulExpressionStatement","src":"3578:21:25"},{"nodeType":"YulVariableDeclaration","src":"3608:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3623:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3630:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3619:3:25"},"nodeType":"YulFunctionCall","src":"3619:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3612:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3673:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3675:77:25"},"nodeType":"YulFunctionCall","src":"3675:79:25"},"nodeType":"YulExpressionStatement","src":"3675:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3654:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"3659:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:25"},"nodeType":"YulFunctionCall","src":"3650:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"3668:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3647:2:25"},"nodeType":"YulFunctionCall","src":"3647:25:25"},"nodeType":"YulIf","src":"3644:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3789:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"3794:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"3799:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"3765:23:25"},"nodeType":"YulFunctionCall","src":"3765:41:25"},"nodeType":"YulExpressionStatement","src":"3765:41:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3458:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"3463:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3471:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3479:5:25","type":""}],"src":"3402:410:25"},{"body":{"nodeType":"YulBlock","src":"3892:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"3941:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3943:77:25"},"nodeType":"YulFunctionCall","src":"3943:79:25"},"nodeType":"YulExpressionStatement","src":"3943:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3920:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3928:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:25"},"nodeType":"YulFunctionCall","src":"3916:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"3935:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:25"},"nodeType":"YulFunctionCall","src":"3912:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:25"},"nodeType":"YulFunctionCall","src":"3905:35:25"},"nodeType":"YulIf","src":"3902:122:25"},{"nodeType":"YulVariableDeclaration","src":"4033:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4060:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4047:12:25"},"nodeType":"YulFunctionCall","src":"4047:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4037:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4076:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4136:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4144:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4132:3:25"},"nodeType":"YulFunctionCall","src":"4132:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"4151:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"4159:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4085:46:25"},"nodeType":"YulFunctionCall","src":"4085:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4076:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3870:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3878:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3886:5:25","type":""}],"src":"3831:338:25"},{"body":{"nodeType":"YulBlock","src":"4264:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4281:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4284:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4274:6:25"},"nodeType":"YulFunctionCall","src":"4274:12:25"},"nodeType":"YulExpressionStatement","src":"4274:12:25"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"4175:117:25"},{"body":{"nodeType":"YulBlock","src":"4387:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4404:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4407:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4397:6:25"},"nodeType":"YulFunctionCall","src":"4397:12:25"},"nodeType":"YulExpressionStatement","src":"4397:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4298:117:25"},{"body":{"nodeType":"YulBlock","src":"4508:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"4557:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4559:77:25"},"nodeType":"YulFunctionCall","src":"4559:79:25"},"nodeType":"YulExpressionStatement","src":"4559:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4536:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4544:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4532:3:25"},"nodeType":"YulFunctionCall","src":"4532:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"4551:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4528:3:25"},"nodeType":"YulFunctionCall","src":"4528:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4521:6:25"},"nodeType":"YulFunctionCall","src":"4521:35:25"},"nodeType":"YulIf","src":"4518:122:25"},{"nodeType":"YulAssignment","src":"4649:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4672:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4659:12:25"},"nodeType":"YulFunctionCall","src":"4659:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4649:6:25"}]},{"body":{"nodeType":"YulBlock","src":"4722:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"4724:77:25"},"nodeType":"YulFunctionCall","src":"4724:79:25"},"nodeType":"YulExpressionStatement","src":"4724:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4694:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4702:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4691:2:25"},"nodeType":"YulFunctionCall","src":"4691:30:25"},"nodeType":"YulIf","src":"4688:117:25"},{"nodeType":"YulAssignment","src":"4814:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4830:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4838:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4826:3:25"},"nodeType":"YulFunctionCall","src":"4826:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4814:8:25"}]},{"body":{"nodeType":"YulBlock","src":"4897:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4899:77:25"},"nodeType":"YulFunctionCall","src":"4899:79:25"},"nodeType":"YulExpressionStatement","src":"4899:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4862:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4876:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4884:4:25","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4872:3:25"},"nodeType":"YulFunctionCall","src":"4872:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4858:3:25"},"nodeType":"YulFunctionCall","src":"4858:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"4892:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4855:2:25"},"nodeType":"YulFunctionCall","src":"4855:41:25"},"nodeType":"YulIf","src":"4852:128:25"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4475:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4483:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"4491:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4501:6:25","type":""}],"src":"4434:552:25"},{"body":{"nodeType":"YulBlock","src":"5120:867:25","statements":[{"body":{"nodeType":"YulBlock","src":"5166:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5168:77:25"},"nodeType":"YulFunctionCall","src":"5168:79:25"},"nodeType":"YulExpressionStatement","src":"5168:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5141:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5137:3:25"},"nodeType":"YulFunctionCall","src":"5137:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5162:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5133:3:25"},"nodeType":"YulFunctionCall","src":"5133:32:25"},"nodeType":"YulIf","src":"5130:119:25"},{"nodeType":"YulBlock","src":"5259:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5274:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5288:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5278:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5303:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5338:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5349:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:25"},"nodeType":"YulFunctionCall","src":"5334:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5358:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5313:20:25"},"nodeType":"YulFunctionCall","src":"5313:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5303:6:25"}]}]},{"nodeType":"YulBlock","src":"5386:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5401:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5443:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:25"},"nodeType":"YulFunctionCall","src":"5428:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5415:12:25"},"nodeType":"YulFunctionCall","src":"5415:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5405:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5494:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5496:77:25"},"nodeType":"YulFunctionCall","src":"5496:79:25"},"nodeType":"YulExpressionStatement","src":"5496:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5466:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5474:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5463:2:25"},"nodeType":"YulFunctionCall","src":"5463:30:25"},"nodeType":"YulIf","src":"5460:117:25"},{"nodeType":"YulAssignment","src":"5591:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5635:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5646:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5631:3:25"},"nodeType":"YulFunctionCall","src":"5631:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5655:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5601:29:25"},"nodeType":"YulFunctionCall","src":"5601:62:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5591:6:25"}]}]},{"nodeType":"YulBlock","src":"5683:297:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5698:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5740:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5725:3:25"},"nodeType":"YulFunctionCall","src":"5725:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5712:12:25"},"nodeType":"YulFunctionCall","src":"5712:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5702:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5791:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5793:77:25"},"nodeType":"YulFunctionCall","src":"5793:79:25"},"nodeType":"YulExpressionStatement","src":"5793:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5763:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5771:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5760:2:25"},"nodeType":"YulFunctionCall","src":"5760:30:25"},"nodeType":"YulIf","src":"5757:117:25"},{"nodeType":"YulAssignment","src":"5888:82:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5942:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5953:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5938:3:25"},"nodeType":"YulFunctionCall","src":"5938:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5962:7:25"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"5906:31:25"},"nodeType":"YulFunctionCall","src":"5906:64:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5888:6:25"},{"name":"value3","nodeType":"YulIdentifier","src":"5896:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5066:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5077:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5089:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5097:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5105:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5113:6:25","type":""}],"src":"4992:995:25"},{"body":{"nodeType":"YulBlock","src":"6058:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6075:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6098:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6080:17:25"},"nodeType":"YulFunctionCall","src":"6080:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6068:6:25"},"nodeType":"YulFunctionCall","src":"6068:37:25"},"nodeType":"YulExpressionStatement","src":"6068:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6046:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6053:3:25","type":""}],"src":"5993:118:25"},{"body":{"nodeType":"YulBlock","src":"6215:124:25","statements":[{"nodeType":"YulAssignment","src":"6225:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6248:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:25"},"nodeType":"YulFunctionCall","src":"6233:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6225:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6305:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6329:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:25"},"nodeType":"YulFunctionCall","src":"6314:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6261:43:25"},"nodeType":"YulFunctionCall","src":"6261:71:25"},"nodeType":"YulExpressionStatement","src":"6261:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6187:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6199:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6210:4:25","type":""}],"src":"6117:222:25"},{"body":{"nodeType":"YulBlock","src":"6388:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"6445:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6454:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6457:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6447:6:25"},"nodeType":"YulFunctionCall","src":"6447:12:25"},"nodeType":"YulExpressionStatement","src":"6447:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6411:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6436:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6418:17:25"},"nodeType":"YulFunctionCall","src":"6418:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6408:2:25"},"nodeType":"YulFunctionCall","src":"6408:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6401:6:25"},"nodeType":"YulFunctionCall","src":"6401:43:25"},"nodeType":"YulIf","src":"6398:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6381:5:25","type":""}],"src":"6345:122:25"},{"body":{"nodeType":"YulBlock","src":"6525:87:25","statements":[{"nodeType":"YulAssignment","src":"6535:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6557:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6544:12:25"},"nodeType":"YulFunctionCall","src":"6544:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6535:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6600:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6573:26:25"},"nodeType":"YulFunctionCall","src":"6573:33:25"},"nodeType":"YulExpressionStatement","src":"6573:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6503:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6511:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6519:5:25","type":""}],"src":"6473:139:25"},{"body":{"nodeType":"YulBlock","src":"6684:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"6730:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6732:77:25"},"nodeType":"YulFunctionCall","src":"6732:79:25"},"nodeType":"YulExpressionStatement","src":"6732:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6705:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6714:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6701:3:25"},"nodeType":"YulFunctionCall","src":"6701:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6726:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6697:3:25"},"nodeType":"YulFunctionCall","src":"6697:32:25"},"nodeType":"YulIf","src":"6694:119:25"},{"nodeType":"YulBlock","src":"6823:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6838:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6852:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6842:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6867:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6913:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:25"},"nodeType":"YulFunctionCall","src":"6898:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6922:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6877:20:25"},"nodeType":"YulFunctionCall","src":"6877:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6867:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6654:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6665:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6677:6:25","type":""}],"src":"6618:329:25"},{"body":{"nodeType":"YulBlock","src":"7036:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"7082:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7084:77:25"},"nodeType":"YulFunctionCall","src":"7084:79:25"},"nodeType":"YulExpressionStatement","src":"7084:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7057:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7066:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7053:3:25"},"nodeType":"YulFunctionCall","src":"7053:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7078:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7049:3:25"},"nodeType":"YulFunctionCall","src":"7049:32:25"},"nodeType":"YulIf","src":"7046:119:25"},{"nodeType":"YulBlock","src":"7175:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7190:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7204:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7194:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7219:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7265:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:25"},"nodeType":"YulFunctionCall","src":"7250:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7274:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7229:20:25"},"nodeType":"YulFunctionCall","src":"7229:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7219:6:25"}]}]},{"nodeType":"YulBlock","src":"7302:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7317:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7331:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7321:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7347:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7382:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7393:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7378:3:25"},"nodeType":"YulFunctionCall","src":"7378:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7402:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7357:20:25"},"nodeType":"YulFunctionCall","src":"7357:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7347:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6998:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7009:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7021:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7029:6:25","type":""}],"src":"6953:474:25"},{"body":{"nodeType":"YulBlock","src":"7465:28:25","statements":[{"nodeType":"YulAssignment","src":"7475:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"7482:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7475:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7451:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7461:3:25","type":""}],"src":"7433:60:25"},{"body":{"nodeType":"YulBlock","src":"7559:82:25","statements":[{"nodeType":"YulAssignment","src":"7569:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7627:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7609:17:25"},"nodeType":"YulFunctionCall","src":"7609:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7600:8:25"},"nodeType":"YulFunctionCall","src":"7600:34:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7582:17:25"},"nodeType":"YulFunctionCall","src":"7582:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7569:9:25"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7539:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7549:9:25","type":""}],"src":"7499:142:25"},{"body":{"nodeType":"YulBlock","src":"7707:66:25","statements":[{"nodeType":"YulAssignment","src":"7717:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7761:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"7730:30:25"},"nodeType":"YulFunctionCall","src":"7730:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7717:9:25"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7687:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7697:9:25","type":""}],"src":"7647:126:25"},{"body":{"nodeType":"YulBlock","src":"7854:66:25","statements":[{"nodeType":"YulAssignment","src":"7864:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7908:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7877:30:25"},"nodeType":"YulFunctionCall","src":"7877:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7864:9:25"}]}]},"name":"convert_t_contract$_IERC20_$1588_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7834:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7844:9:25","type":""}],"src":"7779:141:25"},{"body":{"nodeType":"YulBlock","src":"8006:81:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8023:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8074:5:25"}],"functionName":{"name":"convert_t_contract$_IERC20_$1588_to_t_address","nodeType":"YulIdentifier","src":"8028:45:25"},"nodeType":"YulFunctionCall","src":"8028:52:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8016:6:25"},"nodeType":"YulFunctionCall","src":"8016:65:25"},"nodeType":"YulExpressionStatement","src":"8016:65:25"}]},"name":"abi_encode_t_contract$_IERC20_$1588_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7994:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8001:3:25","type":""}],"src":"7926:161:25"},{"body":{"nodeType":"YulBlock","src":"8206:139:25","statements":[{"nodeType":"YulAssignment","src":"8216:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8239:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:25"},"nodeType":"YulFunctionCall","src":"8224:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8216:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8311:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8324:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8335:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8320:3:25"},"nodeType":"YulFunctionCall","src":"8320:17:25"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1588_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8252:58:25"},"nodeType":"YulFunctionCall","src":"8252:86:25"},"nodeType":"YulExpressionStatement","src":"8252:86:25"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1588__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8178:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8190:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8201:4:25","type":""}],"src":"8093:252:25"},{"body":{"nodeType":"YulBlock","src":"8379:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8396:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8399:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8389:6:25"},"nodeType":"YulFunctionCall","src":"8389:88:25"},"nodeType":"YulExpressionStatement","src":"8389:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8493:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8496:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8486:6:25"},"nodeType":"YulFunctionCall","src":"8486:15:25"},"nodeType":"YulExpressionStatement","src":"8486:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8517:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8520:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8510:6:25"},"nodeType":"YulFunctionCall","src":"8510:15:25"},"nodeType":"YulExpressionStatement","src":"8510:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8351:180:25"},{"body":{"nodeType":"YulBlock","src":"8581:261:25","statements":[{"nodeType":"YulAssignment","src":"8591:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8614:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8596:17:25"},"nodeType":"YulFunctionCall","src":"8596:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8591:1:25"}]},{"nodeType":"YulAssignment","src":"8625:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8648:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8630:17:25"},"nodeType":"YulFunctionCall","src":"8630:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8625:1:25"}]},{"body":{"nodeType":"YulBlock","src":"8788:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8790:16:25"},"nodeType":"YulFunctionCall","src":"8790:18:25"},"nodeType":"YulExpressionStatement","src":"8790:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8709:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8716:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"8784:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8712:3:25"},"nodeType":"YulFunctionCall","src":"8712:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8706:2:25"},"nodeType":"YulFunctionCall","src":"8706:81:25"},"nodeType":"YulIf","src":"8703:107:25"},{"nodeType":"YulAssignment","src":"8820:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8831:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"8834:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:25"},"nodeType":"YulFunctionCall","src":"8827:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8820:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8568:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"8571:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8577:3:25","type":""}],"src":"8537:305:25"},{"body":{"nodeType":"YulBlock","src":"8906:40:25","statements":[{"nodeType":"YulAssignment","src":"8917:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8933:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8927:5:25"},"nodeType":"YulFunctionCall","src":"8927:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8917:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8889:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8899:6:25","type":""}],"src":"8848:98:25"},{"body":{"nodeType":"YulBlock","src":"9065:34:25","statements":[{"nodeType":"YulAssignment","src":"9075:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"9090:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9075:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9037:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"9042:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9053:11:25","type":""}],"src":"8952:147:25"},{"body":{"nodeType":"YulBlock","src":"9154:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9164:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9173:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9168:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9233:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9258:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9263:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:25"},"nodeType":"YulFunctionCall","src":"9254:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9277:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9282:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:25"},"nodeType":"YulFunctionCall","src":"9273:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9267:5:25"},"nodeType":"YulFunctionCall","src":"9267:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9247:6:25"},"nodeType":"YulFunctionCall","src":"9247:39:25"},"nodeType":"YulExpressionStatement","src":"9247:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9194:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9197:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9191:2:25"},"nodeType":"YulFunctionCall","src":"9191:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9205:19:25","statements":[{"nodeType":"YulAssignment","src":"9207:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9216:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"9219:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9212:3:25"},"nodeType":"YulFunctionCall","src":"9212:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9207:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"9187:3:25","statements":[]},"src":"9183:113:25"},{"body":{"nodeType":"YulBlock","src":"9330:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9380:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9385:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9376:3:25"},"nodeType":"YulFunctionCall","src":"9376:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"9394:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9369:6:25"},"nodeType":"YulFunctionCall","src":"9369:27:25"},"nodeType":"YulExpressionStatement","src":"9369:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9311:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9314:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9308:2:25"},"nodeType":"YulFunctionCall","src":"9308:13:25"},"nodeType":"YulIf","src":"9305:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9136:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9141:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"9146:6:25","type":""}],"src":"9105:307:25"},{"body":{"nodeType":"YulBlock","src":"9526:265:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9536:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9582:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9550:31:25"},"nodeType":"YulFunctionCall","src":"9550:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9540:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9597:95:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9680:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9685:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9604:75:25"},"nodeType":"YulFunctionCall","src":"9604:88:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9597:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9727:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"9734:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:25"},"nodeType":"YulFunctionCall","src":"9723:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"9741:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9746:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9701:21:25"},"nodeType":"YulFunctionCall","src":"9701:52:25"},"nodeType":"YulExpressionStatement","src":"9701:52:25"},{"nodeType":"YulAssignment","src":"9762:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9773:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9778:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9769:3:25"},"nodeType":"YulFunctionCall","src":"9769:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9762:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9507:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9514:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9522:3:25","type":""}],"src":"9418:373:25"},{"body":{"nodeType":"YulBlock","src":"9844:32:25","statements":[{"nodeType":"YulAssignment","src":"9854:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"9865:5:25"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"9854:7:25"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9826:5:25","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"9836:7:25","type":""}],"src":"9797:79:25"},{"body":{"nodeType":"YulBlock","src":"9965:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9982:3:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10025:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10007:17:25"},"nodeType":"YulFunctionCall","src":"10007:24:25"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"9987:19:25"},"nodeType":"YulFunctionCall","src":"9987:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9975:6:25"},"nodeType":"YulFunctionCall","src":"9975:58:25"},"nodeType":"YulExpressionStatement","src":"9975:58:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9953:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9960:3:25","type":""}],"src":"9882:157:25"},{"body":{"nodeType":"YulBlock","src":"10207:250:25","statements":[{"nodeType":"YulAssignment","src":"10218:100:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10305:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"10314:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10225:79:25"},"nodeType":"YulFunctionCall","src":"10225:93:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10218:3:25"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10390:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"10399:3:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10328:61:25"},"nodeType":"YulFunctionCall","src":"10328:75:25"},"nodeType":"YulExpressionStatement","src":"10328:75:25"},{"nodeType":"YulAssignment","src":"10412:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10423:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"10428:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10419:3:25"},"nodeType":"YulFunctionCall","src":"10419:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10412:3:25"}]},{"nodeType":"YulAssignment","src":"10441:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"10448:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10441:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10178:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10184:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10192:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10203:3:25","type":""}],"src":"10045:412:25"},{"body":{"nodeType":"YulBlock","src":"10526:80:25","statements":[{"nodeType":"YulAssignment","src":"10536:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10551:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10545:5:25"},"nodeType":"YulFunctionCall","src":"10545:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10536:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10594:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10567:26:25"},"nodeType":"YulFunctionCall","src":"10567:33:25"},"nodeType":"YulExpressionStatement","src":"10567:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10504:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"10512:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10520:5:25","type":""}],"src":"10463:143:25"},{"body":{"nodeType":"YulBlock","src":"10665:51:25","statements":[{"nodeType":"YulAssignment","src":"10675:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10704:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10686:17:25"},"nodeType":"YulFunctionCall","src":"10686:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10675:7:25"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10647:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10657:7:25","type":""}],"src":"10612:104:25"},{"body":{"nodeType":"YulBlock","src":"10773:87:25","statements":[{"body":{"nodeType":"YulBlock","src":"10838:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10847:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10850:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10840:6:25"},"nodeType":"YulFunctionCall","src":"10840:12:25"},"nodeType":"YulExpressionStatement","src":"10840:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10796:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10829:5:25"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"10803:25:25"},"nodeType":"YulFunctionCall","src":"10803:32:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10793:2:25"},"nodeType":"YulFunctionCall","src":"10793:43:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10786:6:25"},"nodeType":"YulFunctionCall","src":"10786:51:25"},"nodeType":"YulIf","src":"10783:71:25"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10766:5:25","type":""}],"src":"10722:138:25"},{"body":{"nodeType":"YulBlock","src":"10937:88:25","statements":[{"nodeType":"YulAssignment","src":"10947:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10962:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10956:5:25"},"nodeType":"YulFunctionCall","src":"10956:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10947:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11013:5:25"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"10978:34:25"},"nodeType":"YulFunctionCall","src":"10978:41:25"},"nodeType":"YulExpressionStatement","src":"10978:41:25"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10915:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"10923:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10931:5:25","type":""}],"src":"10866:159:25"},{"body":{"nodeType":"YulBlock","src":"11133:421:25","statements":[{"body":{"nodeType":"YulBlock","src":"11179:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11181:77:25"},"nodeType":"YulFunctionCall","src":"11181:79:25"},"nodeType":"YulExpressionStatement","src":"11181:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11154:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11163:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11150:3:25"},"nodeType":"YulFunctionCall","src":"11150:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11175:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11146:3:25"},"nodeType":"YulFunctionCall","src":"11146:32:25"},"nodeType":"YulIf","src":"11143:119:25"},{"nodeType":"YulBlock","src":"11272:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11287:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11301:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11291:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11316:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11362:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11373:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11358:3:25"},"nodeType":"YulFunctionCall","src":"11358:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11382:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"11326:31:25"},"nodeType":"YulFunctionCall","src":"11326:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11316:6:25"}]}]},{"nodeType":"YulBlock","src":"11410:137:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11425:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11439:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11429:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11455:82:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11509:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11520:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11505:3:25"},"nodeType":"YulFunctionCall","src":"11505:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11529:7:25"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"11465:39:25"},"nodeType":"YulFunctionCall","src":"11465:72:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11455:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11095:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11106:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11118:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11126:6:25","type":""}],"src":"11031:523:25"},{"body":{"nodeType":"YulBlock","src":"11637:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"11683:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11685:77:25"},"nodeType":"YulFunctionCall","src":"11685:79:25"},"nodeType":"YulExpressionStatement","src":"11685:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11658:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11667:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11654:3:25"},"nodeType":"YulFunctionCall","src":"11654:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11679:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11650:3:25"},"nodeType":"YulFunctionCall","src":"11650:32:25"},"nodeType":"YulIf","src":"11647:119:25"},{"nodeType":"YulBlock","src":"11776:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11791:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11805:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11795:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11820:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11866:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11877:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11862:3:25"},"nodeType":"YulFunctionCall","src":"11862:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11886:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"11830:31:25"},"nodeType":"YulFunctionCall","src":"11830:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11820:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11607:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11618:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11630:6:25","type":""}],"src":"11560:351:25"},{"body":{"nodeType":"YulBlock","src":"12013:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12030:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"12035:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12023:6:25"},"nodeType":"YulFunctionCall","src":"12023:19:25"},"nodeType":"YulExpressionStatement","src":"12023:19:25"},{"nodeType":"YulAssignment","src":"12051:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12070:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12075:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12066:3:25"},"nodeType":"YulFunctionCall","src":"12066:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12051:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11985:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"11990:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12001:11:25","type":""}],"src":"11917:169:25"},{"body":{"nodeType":"YulBlock","src":"12198:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12220:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12228:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:25"},"nodeType":"YulFunctionCall","src":"12216:14:25"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"12232:34:25","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12209:6:25"},"nodeType":"YulFunctionCall","src":"12209:58:25"},"nodeType":"YulExpressionStatement","src":"12209:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12288:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12296:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12284:3:25"},"nodeType":"YulFunctionCall","src":"12284:15:25"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"12301:8:25","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12277:6:25"},"nodeType":"YulFunctionCall","src":"12277:33:25"},"nodeType":"YulExpressionStatement","src":"12277:33:25"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12190:6:25","type":""}],"src":"12092:225:25"},{"body":{"nodeType":"YulBlock","src":"12469:220:25","statements":[{"nodeType":"YulAssignment","src":"12479:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12545:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12550:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12486:58:25"},"nodeType":"YulFunctionCall","src":"12486:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12479:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12651:3:25"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"12562:88:25"},"nodeType":"YulFunctionCall","src":"12562:93:25"},"nodeType":"YulExpressionStatement","src":"12562:93:25"},{"nodeType":"YulAssignment","src":"12664:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12675:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12680:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12671:3:25"},"nodeType":"YulFunctionCall","src":"12671:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12664:3:25"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12457:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12465:3:25","type":""}],"src":"12323:366:25"},{"body":{"nodeType":"YulBlock","src":"12866:248:25","statements":[{"nodeType":"YulAssignment","src":"12876:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12888:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12899:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12884:3:25"},"nodeType":"YulFunctionCall","src":"12884:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12876:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12923:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12934:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:25"},"nodeType":"YulFunctionCall","src":"12919:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12942:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12948:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12938:3:25"},"nodeType":"YulFunctionCall","src":"12938:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12912:6:25"},"nodeType":"YulFunctionCall","src":"12912:47:25"},"nodeType":"YulExpressionStatement","src":"12912:47:25"},{"nodeType":"YulAssignment","src":"12968:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13102:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12976:124:25"},"nodeType":"YulFunctionCall","src":"12976:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12968:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12846:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12861:4:25","type":""}],"src":"12695:419:25"},{"body":{"nodeType":"YulBlock","src":"13226:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13248:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13256:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13244:3:25"},"nodeType":"YulFunctionCall","src":"13244:14:25"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13260:34:25","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13237:6:25"},"nodeType":"YulFunctionCall","src":"13237:58:25"},"nodeType":"YulExpressionStatement","src":"13237:58:25"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13218:6:25","type":""}],"src":"13120:182:25"},{"body":{"nodeType":"YulBlock","src":"13454:220:25","statements":[{"nodeType":"YulAssignment","src":"13464:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13530:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13535:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13471:58:25"},"nodeType":"YulFunctionCall","src":"13471:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13464:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13636:3:25"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"13547:88:25"},"nodeType":"YulFunctionCall","src":"13547:93:25"},"nodeType":"YulExpressionStatement","src":"13547:93:25"},{"nodeType":"YulAssignment","src":"13649:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13660:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13665:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13656:3:25"},"nodeType":"YulFunctionCall","src":"13656:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13649:3:25"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13442:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13450:3:25","type":""}],"src":"13308:366:25"},{"body":{"nodeType":"YulBlock","src":"13851:248:25","statements":[{"nodeType":"YulAssignment","src":"13861:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13873:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13884:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13869:3:25"},"nodeType":"YulFunctionCall","src":"13869:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13861:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13908:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13919:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:25"},"nodeType":"YulFunctionCall","src":"13904:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13927:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13933:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13923:3:25"},"nodeType":"YulFunctionCall","src":"13923:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13897:6:25"},"nodeType":"YulFunctionCall","src":"13897:47:25"},"nodeType":"YulExpressionStatement","src":"13897:47:25"},{"nodeType":"YulAssignment","src":"13953:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14087:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13961:124:25"},"nodeType":"YulFunctionCall","src":"13961:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13953:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13831:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13846:4:25","type":""}],"src":"13680:419:25"},{"body":{"nodeType":"YulBlock","src":"14211:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14233:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14241:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14229:3:25"},"nodeType":"YulFunctionCall","src":"14229:14:25"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"14245:33:25","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14222:6:25"},"nodeType":"YulFunctionCall","src":"14222:57:25"},"nodeType":"YulExpressionStatement","src":"14222:57:25"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14203:6:25","type":""}],"src":"14105:181:25"},{"body":{"nodeType":"YulBlock","src":"14438:220:25","statements":[{"nodeType":"YulAssignment","src":"14448:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14514:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14519:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14455:58:25"},"nodeType":"YulFunctionCall","src":"14455:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14448:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14620:3:25"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"14531:88:25"},"nodeType":"YulFunctionCall","src":"14531:93:25"},"nodeType":"YulExpressionStatement","src":"14531:93:25"},{"nodeType":"YulAssignment","src":"14633:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14644:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14649:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14640:3:25"},"nodeType":"YulFunctionCall","src":"14640:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14633:3:25"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14426:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14434:3:25","type":""}],"src":"14292:366:25"},{"body":{"nodeType":"YulBlock","src":"14835:248:25","statements":[{"nodeType":"YulAssignment","src":"14845:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14857:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14868:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14853:3:25"},"nodeType":"YulFunctionCall","src":"14853:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14845:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14892:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14903:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14888:3:25"},"nodeType":"YulFunctionCall","src":"14888:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14911:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14907:3:25"},"nodeType":"YulFunctionCall","src":"14907:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14881:6:25"},"nodeType":"YulFunctionCall","src":"14881:47:25"},"nodeType":"YulExpressionStatement","src":"14881:47:25"},{"nodeType":"YulAssignment","src":"14937:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15071:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14945:124:25"},"nodeType":"YulFunctionCall","src":"14945:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14937:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14815:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14830:4:25","type":""}],"src":"14664:419:25"},{"body":{"nodeType":"YulBlock","src":"15195:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15217:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15225:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15213:3:25"},"nodeType":"YulFunctionCall","src":"15213:14:25"},{"hexValue":"5369676e6174757265436865636b65723a204d65737361676520616c72656164","kind":"string","nodeType":"YulLiteral","src":"15229:34:25","type":"","value":"SignatureChecker: Message alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15206:6:25"},"nodeType":"YulFunctionCall","src":"15206:58:25"},"nodeType":"YulExpressionStatement","src":"15206:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15285:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15293:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15281:3:25"},"nodeType":"YulFunctionCall","src":"15281:15:25"},{"hexValue":"792075736564","kind":"string","nodeType":"YulLiteral","src":"15298:8:25","type":"","value":"y used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15274:6:25"},"nodeType":"YulFunctionCall","src":"15274:33:25"},"nodeType":"YulExpressionStatement","src":"15274:33:25"}]},"name":"store_literal_in_memory_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15187:6:25","type":""}],"src":"15089:225:25"},{"body":{"nodeType":"YulBlock","src":"15466:220:25","statements":[{"nodeType":"YulAssignment","src":"15476:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15542:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15547:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15483:58:25"},"nodeType":"YulFunctionCall","src":"15483:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15476:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15648:3:25"}],"functionName":{"name":"store_literal_in_memory_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa","nodeType":"YulIdentifier","src":"15559:88:25"},"nodeType":"YulFunctionCall","src":"15559:93:25"},"nodeType":"YulExpressionStatement","src":"15559:93:25"},{"nodeType":"YulAssignment","src":"15661:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15672:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15677:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15668:3:25"},"nodeType":"YulFunctionCall","src":"15668:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15661:3:25"}]}]},"name":"abi_encode_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15454:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15462:3:25","type":""}],"src":"15320:366:25"},{"body":{"nodeType":"YulBlock","src":"15863:248:25","statements":[{"nodeType":"YulAssignment","src":"15873:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15885:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15896:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15881:3:25"},"nodeType":"YulFunctionCall","src":"15881:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15873:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15931:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15916:3:25"},"nodeType":"YulFunctionCall","src":"15916:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15939:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15945:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15935:3:25"},"nodeType":"YulFunctionCall","src":"15935:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15909:6:25"},"nodeType":"YulFunctionCall","src":"15909:47:25"},"nodeType":"YulExpressionStatement","src":"15909:47:25"},{"nodeType":"YulAssignment","src":"15965:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16099:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15973:124:25"},"nodeType":"YulFunctionCall","src":"15973:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15843:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15858:4:25","type":""}],"src":"15692:419:25"},{"body":{"nodeType":"YulBlock","src":"16243:206:25","statements":[{"nodeType":"YulAssignment","src":"16253:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16265:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16276:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16261:3:25"},"nodeType":"YulFunctionCall","src":"16261:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16253:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16333:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16346:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16357:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16342:3:25"},"nodeType":"YulFunctionCall","src":"16342:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16289:43:25"},"nodeType":"YulFunctionCall","src":"16289:71:25"},"nodeType":"YulExpressionStatement","src":"16289:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16414:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16427:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16438:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16423:3:25"},"nodeType":"YulFunctionCall","src":"16423:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16370:43:25"},"nodeType":"YulFunctionCall","src":"16370:72:25"},"nodeType":"YulExpressionStatement","src":"16370:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16207:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16219:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16227:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16238:4:25","type":""}],"src":"16117:332:25"},{"body":{"nodeType":"YulBlock","src":"16500:146:25","statements":[{"nodeType":"YulAssignment","src":"16510:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16533:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16515:17:25"},"nodeType":"YulFunctionCall","src":"16515:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16510:1:25"}]},{"nodeType":"YulAssignment","src":"16544:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16567:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16549:17:25"},"nodeType":"YulFunctionCall","src":"16549:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16544:1:25"}]},{"body":{"nodeType":"YulBlock","src":"16591:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16593:16:25"},"nodeType":"YulFunctionCall","src":"16593:18:25"},"nodeType":"YulExpressionStatement","src":"16593:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16585:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"16588:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16582:2:25"},"nodeType":"YulFunctionCall","src":"16582:8:25"},"nodeType":"YulIf","src":"16579:34:25"},{"nodeType":"YulAssignment","src":"16623:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16635:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"16638:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16631:3:25"},"nodeType":"YulFunctionCall","src":"16631:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16623:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16486:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"16489:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16495:4:25","type":""}],"src":"16455:191:25"},{"body":{"nodeType":"YulBlock","src":"16680:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16697:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16700:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16690:6:25"},"nodeType":"YulFunctionCall","src":"16690:88:25"},"nodeType":"YulExpressionStatement","src":"16690:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16794:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16797:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16787:6:25"},"nodeType":"YulFunctionCall","src":"16787:15:25"},"nodeType":"YulExpressionStatement","src":"16787:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16818:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16821:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16811:6:25"},"nodeType":"YulFunctionCall","src":"16811:15:25"},"nodeType":"YulExpressionStatement","src":"16811:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16652:180:25"},{"body":{"nodeType":"YulBlock","src":"16866:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16883:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16886:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16876:6:25"},"nodeType":"YulFunctionCall","src":"16876:88:25"},"nodeType":"YulExpressionStatement","src":"16876:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16980:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16983:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16973:6:25"},"nodeType":"YulFunctionCall","src":"16973:15:25"},"nodeType":"YulExpressionStatement","src":"16973:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17004:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17007:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16997:6:25"},"nodeType":"YulFunctionCall","src":"16997:15:25"},"nodeType":"YulExpressionStatement","src":"16997:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"16838:180:25"},{"body":{"nodeType":"YulBlock","src":"17130:116:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17152:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17160:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17148:3:25"},"nodeType":"YulFunctionCall","src":"17148:14:25"},{"hexValue":"5369676e6174757265436865636b65723a20496e76616c6964207369676e6174","kind":"string","nodeType":"YulLiteral","src":"17164:34:25","type":"","value":"SignatureChecker: Invalid signat"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17141:6:25"},"nodeType":"YulFunctionCall","src":"17141:58:25"},"nodeType":"YulExpressionStatement","src":"17141:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17220:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17228:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17216:3:25"},"nodeType":"YulFunctionCall","src":"17216:15:25"},{"hexValue":"757265","kind":"string","nodeType":"YulLiteral","src":"17233:5:25","type":"","value":"ure"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17209:6:25"},"nodeType":"YulFunctionCall","src":"17209:30:25"},"nodeType":"YulExpressionStatement","src":"17209:30:25"}]},"name":"store_literal_in_memory_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17122:6:25","type":""}],"src":"17024:222:25"},{"body":{"nodeType":"YulBlock","src":"17398:220:25","statements":[{"nodeType":"YulAssignment","src":"17408:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17474:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17479:2:25","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17415:58:25"},"nodeType":"YulFunctionCall","src":"17415:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17408:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17580:3:25"}],"functionName":{"name":"store_literal_in_memory_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5","nodeType":"YulIdentifier","src":"17491:88:25"},"nodeType":"YulFunctionCall","src":"17491:93:25"},"nodeType":"YulExpressionStatement","src":"17491:93:25"},{"nodeType":"YulAssignment","src":"17593:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17609:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17600:3:25"},"nodeType":"YulFunctionCall","src":"17600:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17593:3:25"}]}]},"name":"abi_encode_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17386:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17394:3:25","type":""}],"src":"17252:366:25"},{"body":{"nodeType":"YulBlock","src":"17795:248:25","statements":[{"nodeType":"YulAssignment","src":"17805:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17817:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17828:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17813:3:25"},"nodeType":"YulFunctionCall","src":"17813:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17805:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17852:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17863:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17848:3:25"},"nodeType":"YulFunctionCall","src":"17848:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17871:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17877:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17867:3:25"},"nodeType":"YulFunctionCall","src":"17867:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17841:6:25"},"nodeType":"YulFunctionCall","src":"17841:47:25"},"nodeType":"YulExpressionStatement","src":"17841:47:25"},{"nodeType":"YulAssignment","src":"17897:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18031:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17905:124:25"},"nodeType":"YulFunctionCall","src":"17905:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17897:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17775:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17790:4:25","type":""}],"src":"17624:419:25"},{"body":{"nodeType":"YulBlock","src":"18091:48:25","statements":[{"nodeType":"YulAssignment","src":"18101:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18126:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18119:6:25"},"nodeType":"YulFunctionCall","src":"18119:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18112:6:25"},"nodeType":"YulFunctionCall","src":"18112:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18101:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18073:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18083:7:25","type":""}],"src":"18049:90:25"},{"body":{"nodeType":"YulBlock","src":"18185:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"18239:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18248:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18251:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18241:6:25"},"nodeType":"YulFunctionCall","src":"18241:12:25"},"nodeType":"YulExpressionStatement","src":"18241:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18208:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18230:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"18215:14:25"},"nodeType":"YulFunctionCall","src":"18215:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18205:2:25"},"nodeType":"YulFunctionCall","src":"18205:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18198:6:25"},"nodeType":"YulFunctionCall","src":"18198:40:25"},"nodeType":"YulIf","src":"18195:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18178:5:25","type":""}],"src":"18145:116:25"},{"body":{"nodeType":"YulBlock","src":"18327:77:25","statements":[{"nodeType":"YulAssignment","src":"18337:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18352:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18346:5:25"},"nodeType":"YulFunctionCall","src":"18346:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18337:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18392:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"18368:23:25"},"nodeType":"YulFunctionCall","src":"18368:30:25"},"nodeType":"YulExpressionStatement","src":"18368:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18305:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"18313:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18321:5:25","type":""}],"src":"18267:137:25"},{"body":{"nodeType":"YulBlock","src":"18484:271:25","statements":[{"body":{"nodeType":"YulBlock","src":"18530:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18532:77:25"},"nodeType":"YulFunctionCall","src":"18532:79:25"},"nodeType":"YulExpressionStatement","src":"18532:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18505:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"18514:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18501:3:25"},"nodeType":"YulFunctionCall","src":"18501:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"18526:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18497:3:25"},"nodeType":"YulFunctionCall","src":"18497:32:25"},"nodeType":"YulIf","src":"18494:119:25"},{"nodeType":"YulBlock","src":"18623:125:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18638:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18652:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18642:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18667:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18710:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18721:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18706:3:25"},"nodeType":"YulFunctionCall","src":"18706:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18730:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"18677:28:25"},"nodeType":"YulFunctionCall","src":"18677:61:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18667:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18454:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18465:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18477:6:25","type":""}],"src":"18410:345:25"},{"body":{"nodeType":"YulBlock","src":"18867:123:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18889:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18897:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18885:3:25"},"nodeType":"YulFunctionCall","src":"18885:14:25"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"18901:34:25","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18878:6:25"},"nodeType":"YulFunctionCall","src":"18878:58:25"},"nodeType":"YulExpressionStatement","src":"18878:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18957:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18965:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18953:3:25"},"nodeType":"YulFunctionCall","src":"18953:15:25"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"18970:12:25","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18946:6:25"},"nodeType":"YulFunctionCall","src":"18946:37:25"},"nodeType":"YulExpressionStatement","src":"18946:37:25"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18859:6:25","type":""}],"src":"18761:229:25"},{"body":{"nodeType":"YulBlock","src":"19142:220:25","statements":[{"nodeType":"YulAssignment","src":"19152:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19218:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19223:2:25","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19159:58:25"},"nodeType":"YulFunctionCall","src":"19159:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19152:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19324:3:25"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"19235:88:25"},"nodeType":"YulFunctionCall","src":"19235:93:25"},"nodeType":"YulExpressionStatement","src":"19235:93:25"},{"nodeType":"YulAssignment","src":"19337:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19348:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19353:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19344:3:25"},"nodeType":"YulFunctionCall","src":"19344:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19337:3:25"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19130:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19138:3:25","type":""}],"src":"18996:366:25"},{"body":{"nodeType":"YulBlock","src":"19539:248:25","statements":[{"nodeType":"YulAssignment","src":"19549:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19561:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19572:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19557:3:25"},"nodeType":"YulFunctionCall","src":"19557:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19549:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19596:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19607:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19592:3:25"},"nodeType":"YulFunctionCall","src":"19592:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19615:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19621:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19611:3:25"},"nodeType":"YulFunctionCall","src":"19611:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19585:6:25"},"nodeType":"YulFunctionCall","src":"19585:47:25"},"nodeType":"YulExpressionStatement","src":"19585:47:25"},{"nodeType":"YulAssignment","src":"19641:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19775:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19649:124:25"},"nodeType":"YulFunctionCall","src":"19649:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19641:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19519:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19534:4:25","type":""}],"src":"19368:419:25"},{"body":{"nodeType":"YulBlock","src":"19907:34:25","statements":[{"nodeType":"YulAssignment","src":"19917:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"19932:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19917:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19879:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"19884:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19895:11:25","type":""}],"src":"19793:148:25"},{"body":{"nodeType":"YulBlock","src":"20053:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20075:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20083:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20071:3:25"},"nodeType":"YulFunctionCall","src":"20071:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"20087:66:25","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20064:6:25"},"nodeType":"YulFunctionCall","src":"20064:90:25"},"nodeType":"YulExpressionStatement","src":"20064:90:25"}]},"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20045:6:25","type":""}],"src":"19947:214:25"},{"body":{"nodeType":"YulBlock","src":"20331:238:25","statements":[{"nodeType":"YulAssignment","src":"20341:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20425:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20430:2:25","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20348:76:25"},"nodeType":"YulFunctionCall","src":"20348:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20341:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20531:3:25"}],"functionName":{"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulIdentifier","src":"20442:88:25"},"nodeType":"YulFunctionCall","src":"20442:93:25"},"nodeType":"YulExpressionStatement","src":"20442:93:25"},{"nodeType":"YulAssignment","src":"20544:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20555:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20560:2:25","type":"","value":"26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20551:3:25"},"nodeType":"YulFunctionCall","src":"20551:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20544:3:25"}]}]},"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20319:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20327:3:25","type":""}],"src":"20167:402:25"},{"body":{"nodeType":"YulBlock","src":"20634:40:25","statements":[{"nodeType":"YulAssignment","src":"20645:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20661:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20655:5:25"},"nodeType":"YulFunctionCall","src":"20655:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20645:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20617:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20627:6:25","type":""}],"src":"20575:99:25"},{"body":{"nodeType":"YulBlock","src":"20790:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"20800:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20847:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20814:32:25"},"nodeType":"YulFunctionCall","src":"20814:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20804:6:25","type":""}]},{"nodeType":"YulAssignment","src":"20862:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20946:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"20951:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20869:76:25"},"nodeType":"YulFunctionCall","src":"20869:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20862:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20993:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21000:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20989:3:25"},"nodeType":"YulFunctionCall","src":"20989:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"21007:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"21012:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"20967:21:25"},"nodeType":"YulFunctionCall","src":"20967:52:25"},"nodeType":"YulExpressionStatement","src":"20967:52:25"},{"nodeType":"YulAssignment","src":"21028:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21039:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"21044:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21035:3:25"},"nodeType":"YulFunctionCall","src":"21035:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21028:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20771:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20778:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20786:3:25","type":""}],"src":"20680:377:25"},{"body":{"nodeType":"YulBlock","src":"21346:414:25","statements":[{"nodeType":"YulAssignment","src":"21357:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21508:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21364:142:25"},"nodeType":"YulFunctionCall","src":"21364:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21357:3:25"}]},{"nodeType":"YulAssignment","src":"21522:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21611:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"21620:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21529:81:25"},"nodeType":"YulFunctionCall","src":"21529:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21522:3:25"}]},{"nodeType":"YulAssignment","src":"21634:100:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21721:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"21730:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21641:79:25"},"nodeType":"YulFunctionCall","src":"21641:93:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21634:3:25"}]},{"nodeType":"YulAssignment","src":"21744:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"21751:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21744:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21317:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21323:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21331:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21342:3:25","type":""}],"src":"21063:697:25"},{"body":{"nodeType":"YulBlock","src":"21794:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21811:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21814:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21804:6:25"},"nodeType":"YulFunctionCall","src":"21804:88:25"},"nodeType":"YulExpressionStatement","src":"21804:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21908:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21911:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21901:6:25"},"nodeType":"YulFunctionCall","src":"21901:15:25"},"nodeType":"YulExpressionStatement","src":"21901:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21932:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21935:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21925:6:25"},"nodeType":"YulFunctionCall","src":"21925:15:25"},"nodeType":"YulExpressionStatement","src":"21925:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21766:180:25"},{"body":{"nodeType":"YulBlock","src":"22058:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22080:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22088:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22076:3:25"},"nodeType":"YulFunctionCall","src":"22076:14:25"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"22092:34:25","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22069:6:25"},"nodeType":"YulFunctionCall","src":"22069:58:25"},"nodeType":"YulExpressionStatement","src":"22069:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22148:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22156:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22144:3:25"},"nodeType":"YulFunctionCall","src":"22144:15:25"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"22161:8:25","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22137:6:25"},"nodeType":"YulFunctionCall","src":"22137:33:25"},"nodeType":"YulExpressionStatement","src":"22137:33:25"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22050:6:25","type":""}],"src":"21952:225:25"},{"body":{"nodeType":"YulBlock","src":"22329:220:25","statements":[{"nodeType":"YulAssignment","src":"22339:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22405:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22410:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22346:58:25"},"nodeType":"YulFunctionCall","src":"22346:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22339:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22511:3:25"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"22422:88:25"},"nodeType":"YulFunctionCall","src":"22422:93:25"},"nodeType":"YulExpressionStatement","src":"22422:93:25"},{"nodeType":"YulAssignment","src":"22524:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22535:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22540:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22531:3:25"},"nodeType":"YulFunctionCall","src":"22531:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22524:3:25"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22317:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22325:3:25","type":""}],"src":"22183:366:25"},{"body":{"nodeType":"YulBlock","src":"22726:248:25","statements":[{"nodeType":"YulAssignment","src":"22736:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22748:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22759:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22744:3:25"},"nodeType":"YulFunctionCall","src":"22744:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22736:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22783:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22794:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22779:3:25"},"nodeType":"YulFunctionCall","src":"22779:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22802:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22808:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22798:3:25"},"nodeType":"YulFunctionCall","src":"22798:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22772:6:25"},"nodeType":"YulFunctionCall","src":"22772:47:25"},"nodeType":"YulExpressionStatement","src":"22772:47:25"},{"nodeType":"YulAssignment","src":"22828:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22962:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22836:124:25"},"nodeType":"YulFunctionCall","src":"22836:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22828:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22706:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22721:4:25","type":""}],"src":"22555:419:25"},{"body":{"nodeType":"YulBlock","src":"23114:137:25","statements":[{"nodeType":"YulAssignment","src":"23125:100:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23212:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"23221:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23132:79:25"},"nodeType":"YulFunctionCall","src":"23132:93:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23125:3:25"}]},{"nodeType":"YulAssignment","src":"23235:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"23242:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23235:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23093:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23099:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23110:3:25","type":""}],"src":"22980:271:25"},{"body":{"nodeType":"YulBlock","src":"23285:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23302:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23305:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23295:6:25"},"nodeType":"YulFunctionCall","src":"23295:88:25"},"nodeType":"YulExpressionStatement","src":"23295:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23399:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23402:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23392:6:25"},"nodeType":"YulFunctionCall","src":"23392:15:25"},"nodeType":"YulExpressionStatement","src":"23392:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23423:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23426:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23416:6:25"},"nodeType":"YulFunctionCall","src":"23416:15:25"},"nodeType":"YulExpressionStatement","src":"23416:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"23257:180:25"},{"body":{"nodeType":"YulBlock","src":"23549:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23571:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"23579:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23567:3:25"},"nodeType":"YulFunctionCall","src":"23567:14:25"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"23583:26:25","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23560:6:25"},"nodeType":"YulFunctionCall","src":"23560:50:25"},"nodeType":"YulExpressionStatement","src":"23560:50:25"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23541:6:25","type":""}],"src":"23443:174:25"},{"body":{"nodeType":"YulBlock","src":"23769:220:25","statements":[{"nodeType":"YulAssignment","src":"23779:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23845:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23850:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23786:58:25"},"nodeType":"YulFunctionCall","src":"23786:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23779:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23951:3:25"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"23862:88:25"},"nodeType":"YulFunctionCall","src":"23862:93:25"},"nodeType":"YulExpressionStatement","src":"23862:93:25"},{"nodeType":"YulAssignment","src":"23964:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23975:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23980:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23971:3:25"},"nodeType":"YulFunctionCall","src":"23971:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23964:3:25"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23757:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23765:3:25","type":""}],"src":"23623:366:25"},{"body":{"nodeType":"YulBlock","src":"24166:248:25","statements":[{"nodeType":"YulAssignment","src":"24176:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24188:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24199:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24184:3:25"},"nodeType":"YulFunctionCall","src":"24184:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24176:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24223:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24234:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24219:3:25"},"nodeType":"YulFunctionCall","src":"24219:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24242:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"24248:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24238:3:25"},"nodeType":"YulFunctionCall","src":"24238:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24212:6:25"},"nodeType":"YulFunctionCall","src":"24212:47:25"},"nodeType":"YulExpressionStatement","src":"24212:47:25"},{"nodeType":"YulAssignment","src":"24268:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24402:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24276:124:25"},"nodeType":"YulFunctionCall","src":"24276:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24268:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24146:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24161:4:25","type":""}],"src":"23995:419:25"},{"body":{"nodeType":"YulBlock","src":"24526:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24548:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24556:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24544:3:25"},"nodeType":"YulFunctionCall","src":"24544:14:25"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"24560:33:25","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24537:6:25"},"nodeType":"YulFunctionCall","src":"24537:57:25"},"nodeType":"YulExpressionStatement","src":"24537:57:25"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24518:6:25","type":""}],"src":"24420:181:25"},{"body":{"nodeType":"YulBlock","src":"24753:220:25","statements":[{"nodeType":"YulAssignment","src":"24763:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24829:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24834:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24770:58:25"},"nodeType":"YulFunctionCall","src":"24770:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24763:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24935:3:25"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"24846:88:25"},"nodeType":"YulFunctionCall","src":"24846:93:25"},"nodeType":"YulExpressionStatement","src":"24846:93:25"},{"nodeType":"YulAssignment","src":"24948:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24959:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24964:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24955:3:25"},"nodeType":"YulFunctionCall","src":"24955:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24948:3:25"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24741:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24749:3:25","type":""}],"src":"24607:366:25"},{"body":{"nodeType":"YulBlock","src":"25150:248:25","statements":[{"nodeType":"YulAssignment","src":"25160:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25172:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25183:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25168:3:25"},"nodeType":"YulFunctionCall","src":"25168:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25160:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25207:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25218:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25203:3:25"},"nodeType":"YulFunctionCall","src":"25203:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25226:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"25232:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25222:3:25"},"nodeType":"YulFunctionCall","src":"25222:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25196:6:25"},"nodeType":"YulFunctionCall","src":"25196:47:25"},"nodeType":"YulExpressionStatement","src":"25196:47:25"},{"nodeType":"YulAssignment","src":"25252:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25386:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25260:124:25"},"nodeType":"YulFunctionCall","src":"25260:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25252:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25130:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25145:4:25","type":""}],"src":"24979:419:25"},{"body":{"nodeType":"YulBlock","src":"25510:115:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25532:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25540:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25528:3:25"},"nodeType":"YulFunctionCall","src":"25528:14:25"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"25544:34:25","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25521:6:25"},"nodeType":"YulFunctionCall","src":"25521:58:25"},"nodeType":"YulExpressionStatement","src":"25521:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25600:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25608:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25596:3:25"},"nodeType":"YulFunctionCall","src":"25596:15:25"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"25613:4:25","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25589:6:25"},"nodeType":"YulFunctionCall","src":"25589:29:25"},"nodeType":"YulExpressionStatement","src":"25589:29:25"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25502:6:25","type":""}],"src":"25404:221:25"},{"body":{"nodeType":"YulBlock","src":"25777:220:25","statements":[{"nodeType":"YulAssignment","src":"25787:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25853:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25858:2:25","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25794:58:25"},"nodeType":"YulFunctionCall","src":"25794:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25787:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25959:3:25"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"25870:88:25"},"nodeType":"YulFunctionCall","src":"25870:93:25"},"nodeType":"YulExpressionStatement","src":"25870:93:25"},{"nodeType":"YulAssignment","src":"25972:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25983:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25988:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25979:3:25"},"nodeType":"YulFunctionCall","src":"25979:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25972:3:25"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25765:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25773:3:25","type":""}],"src":"25631:366:25"},{"body":{"nodeType":"YulBlock","src":"26174:248:25","statements":[{"nodeType":"YulAssignment","src":"26184:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26196:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26207:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26192:3:25"},"nodeType":"YulFunctionCall","src":"26192:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26184:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26231:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26242:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26227:3:25"},"nodeType":"YulFunctionCall","src":"26227:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26250:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"26256:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26246:3:25"},"nodeType":"YulFunctionCall","src":"26246:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26220:6:25"},"nodeType":"YulFunctionCall","src":"26220:47:25"},"nodeType":"YulExpressionStatement","src":"26220:47:25"},{"nodeType":"YulAssignment","src":"26276:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26410:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26284:124:25"},"nodeType":"YulFunctionCall","src":"26284:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26276:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26154:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26169:4:25","type":""}],"src":"26003:419:25"},{"body":{"nodeType":"YulBlock","src":"26534:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26556:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"26564:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26552:3:25"},"nodeType":"YulFunctionCall","src":"26552:14:25"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"26568:31:25","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26545:6:25"},"nodeType":"YulFunctionCall","src":"26545:55:25"},"nodeType":"YulExpressionStatement","src":"26545:55:25"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26526:6:25","type":""}],"src":"26428:179:25"},{"body":{"nodeType":"YulBlock","src":"26759:220:25","statements":[{"nodeType":"YulAssignment","src":"26769:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26835:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"26840:2:25","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26776:58:25"},"nodeType":"YulFunctionCall","src":"26776:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26769:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26941:3:25"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"26852:88:25"},"nodeType":"YulFunctionCall","src":"26852:93:25"},"nodeType":"YulExpressionStatement","src":"26852:93:25"},{"nodeType":"YulAssignment","src":"26954:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26965:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"26970:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26961:3:25"},"nodeType":"YulFunctionCall","src":"26961:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26954:3:25"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26747:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26755:3:25","type":""}],"src":"26613:366:25"},{"body":{"nodeType":"YulBlock","src":"27156:248:25","statements":[{"nodeType":"YulAssignment","src":"27166:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27178:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27189:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27174:3:25"},"nodeType":"YulFunctionCall","src":"27174:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27166:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27213:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27224:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27209:3:25"},"nodeType":"YulFunctionCall","src":"27209:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27232:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27238:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27228:3:25"},"nodeType":"YulFunctionCall","src":"27228:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27202:6:25"},"nodeType":"YulFunctionCall","src":"27202:47:25"},"nodeType":"YulExpressionStatement","src":"27202:47:25"},{"nodeType":"YulAssignment","src":"27258:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27392:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27266:124:25"},"nodeType":"YulFunctionCall","src":"27266:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27258:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27136:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27151:4:25","type":""}],"src":"26985:419:25"},{"body":{"nodeType":"YulBlock","src":"27475:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27492:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27515:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"27497:17:25"},"nodeType":"YulFunctionCall","src":"27497:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27485:6:25"},"nodeType":"YulFunctionCall","src":"27485:37:25"},"nodeType":"YulExpressionStatement","src":"27485:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27463:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27470:3:25","type":""}],"src":"27410:118:25"},{"body":{"nodeType":"YulBlock","src":"27577:43:25","statements":[{"nodeType":"YulAssignment","src":"27587:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27602:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"27609:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27598:3:25"},"nodeType":"YulFunctionCall","src":"27598:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27587:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27559:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27569:7:25","type":""}],"src":"27534:86:25"},{"body":{"nodeType":"YulBlock","src":"27687:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27704:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27725:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"27709:15:25"},"nodeType":"YulFunctionCall","src":"27709:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27697:6:25"},"nodeType":"YulFunctionCall","src":"27697:35:25"},"nodeType":"YulExpressionStatement","src":"27697:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27675:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27682:3:25","type":""}],"src":"27626:112:25"},{"body":{"nodeType":"YulBlock","src":"27922:367:25","statements":[{"nodeType":"YulAssignment","src":"27932:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27944:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27955:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27940:3:25"},"nodeType":"YulFunctionCall","src":"27940:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27932:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28013:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28026:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28037:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28022:3:25"},"nodeType":"YulFunctionCall","src":"28022:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27969:43:25"},"nodeType":"YulFunctionCall","src":"27969:71:25"},"nodeType":"YulExpressionStatement","src":"27969:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28090:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28103:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28114:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28099:3:25"},"nodeType":"YulFunctionCall","src":"28099:18:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28050:39:25"},"nodeType":"YulFunctionCall","src":"28050:68:25"},"nodeType":"YulExpressionStatement","src":"28050:68:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28172:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28185:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28196:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28181:3:25"},"nodeType":"YulFunctionCall","src":"28181:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28128:43:25"},"nodeType":"YulFunctionCall","src":"28128:72:25"},"nodeType":"YulExpressionStatement","src":"28128:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28254:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28267:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28278:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28263:3:25"},"nodeType":"YulFunctionCall","src":"28263:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"28210:43:25"},"nodeType":"YulFunctionCall","src":"28210:72:25"},"nodeType":"YulExpressionStatement","src":"28210:72:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27870:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27882:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27890:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27898:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27906:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27917:4:25","type":""}],"src":"27744:545:25"},{"body":{"nodeType":"YulBlock","src":"28387:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"28397:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28444:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28411:32:25"},"nodeType":"YulFunctionCall","src":"28411:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28401:6:25","type":""}]},{"nodeType":"YulAssignment","src":"28459:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28525:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"28530:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28466:58:25"},"nodeType":"YulFunctionCall","src":"28466:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28459:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28572:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"28579:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28568:3:25"},"nodeType":"YulFunctionCall","src":"28568:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"28586:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"28591:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"28546:21:25"},"nodeType":"YulFunctionCall","src":"28546:52:25"},"nodeType":"YulExpressionStatement","src":"28546:52:25"},{"nodeType":"YulAssignment","src":"28607:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28618:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28645:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"28623:21:25"},"nodeType":"YulFunctionCall","src":"28623:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28614:3:25"},"nodeType":"YulFunctionCall","src":"28614:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28607:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28368:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28375:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28383:3:25","type":""}],"src":"28295:364:25"},{"body":{"nodeType":"YulBlock","src":"28783:195:25","statements":[{"nodeType":"YulAssignment","src":"28793:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28805:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28816:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28801:3:25"},"nodeType":"YulFunctionCall","src":"28801:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28793:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28840:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28851:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28836:3:25"},"nodeType":"YulFunctionCall","src":"28836:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28859:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"28865:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28855:3:25"},"nodeType":"YulFunctionCall","src":"28855:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28829:6:25"},"nodeType":"YulFunctionCall","src":"28829:47:25"},"nodeType":"YulExpressionStatement","src":"28829:47:25"},{"nodeType":"YulAssignment","src":"28885:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28957:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"28966:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28893:63:25"},"nodeType":"YulFunctionCall","src":"28893:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28885:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28755:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28767:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28778:4:25","type":""}],"src":"28665:313:25"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1588_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1588_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1588_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1588__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1588_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SignatureChecker: Message alread\")\n\n        mstore(add(memPtr, 32), \"y used\")\n\n    }\n\n    function abi_encode_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db221993ebd1f1db5b911163e9f4efabf79935b8c60a2261ba8c0246b1f4f5fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5(memPtr) {\n\n        mstore(add(memPtr, 0), \"SignatureChecker: Invalid signat\")\n\n        mstore(add(memPtr, 32), \"ure\")\n\n    }\n\n    function abi_encode_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0277f717ae2d8a4ec54efa851be7941a1852afdd68e4818015c8e0db6cbdcab5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 26)\n        store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(pos)\n        end := add(pos, 26)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806396e09b711161006657806396e09b71146101215780639e281a981461013d578063eb12d61e14610159578063f2fde38b14610175578063fc0c546a146101915761009e565b8063054a1bcd146100a35780630e316ab7146100c1578063715018a6146100dd5780637aee389b146100e75780638da5cb5b14610103575b600080fd5b6100ab6101af565b6040516100b891906113e4565b60405180910390f35b6100db60048036038101906100d69190611471565b6101b5565b005b6100e56101d5565b005b61010160048036038101906100fc919061167a565b6101e9565b005b61010b61040a565b6040516101189190611719565b60405180910390f35b61013b60048036038101906101369190611760565b610434565b005b6101576004803603810190610152919061178d565b610446565b005b610173600480360381019061016e9190611471565b610574565b005b61018f600480360381019061018a9190611471565b610594565b005b610199610617565b6040516101a6919061182c565b60405180910390f35b60065481565b6101bd61063d565b6101d18160026106bb90919063ffffffff16565b5050565b6101dd61063d565b6101e760006106eb565b565b6101f16107b1565b600042905080620151806008546102089190611876565b101561021e576000600781905550806008819055505b61025a8486604051602001610234929190611967565b60405160208183030381529060405284846004600261080090949392919063ffffffff16565b6000808580602001905181019061027191906119e2565b91509150600654826007546102869190611876565b11156102be576040517f9b01268b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161031a9190611719565b602060405180830381865afa158015610337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035b9190611a22565b1015610393576040517ffcb0d13700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760008282546103a59190611876565b925050819055506103f98183600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ac9092919063ffffffff16565b505050610404610932565b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61043c61063d565b8060068190555050565b61044e61063d565b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104aa9190611719565b602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb9190611a22565b1015610523576040517ffcb0d13700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105708282600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108ac9092919063ffffffff16565b5050565b61057c61063d565b61059081600261093c90919063ffffffff16565b5050565b61059c61063d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290611ad2565b60405180910390fd5b610614816106eb565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61064561096c565b73ffffffffffffffffffffffffffffffffffffffff1661066361040a565b73ffffffffffffffffffffffffffffffffffffffff16146106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090611b3e565b60405180910390fd5b565b60006106e3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610974565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600054036107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90611baa565b60405180910390fd5b6002600081905550565b600061080b85610a88565b905081600082815260200190815260200160002060009054906101000a900460ff161561086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490611c3c565b60405180910390fd5b600182600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506108a486828686610a9a565b505050505050565b61092d8363a9059cbb60e01b84846040516024016108cb929190611c5c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610aeb565b505050565b6001600081905550565b6000610964836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610bb3565b905092915050565b600033905090565b60008083600101600084815260200190815260200160002054905060008114610a7c5760006001826109a69190611c85565b90506000600186600001805490506109be9190611c85565b9050818114610a2d5760008660000182815481106109df576109de611cb9565b5b9060005260206000200154905080876000018481548110610a0357610a02611cb9565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610a4157610a40611ce8565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a82565b60009150505b92915050565b6000610a9382610c23565b9050919050565b610aa684848484610c5e565b610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611d89565b60405180910390fd5b50505050565b6000610b4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610cca9092919063ffffffff16565b9050600081511480610b6f575080806020019051810190610b6e9190611de1565b5b610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611e80565b60405180910390fd5b505050565b6000610bbf8383610ce2565b610c18578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610c1d565b600090505b92915050565b6000610c2f8251610d05565b82604051602001610c41929190611f33565b604051602081830303815290604052805190602001209050919050565b6000610cc0610cb18585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd3565b86610dfa90919063ffffffff16565b9050949350505050565b6060610cd98484600085610e2a565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006001610d1484610ef7565b01905060008167ffffffffffffffff811115610d3357610d326114ef565b5b6040519080825280601f01601f191660200182016040528015610d655781602001600182028036833780820191505090505b509050600082602001820190505b600115610dc8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610dbc57610dbb611f62565b5b04945060008503610d73575b819350505050919050565b6000806000610de2858561104a565b91509150610def8161109b565b819250505092915050565b6000610e22836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610ce2565b905092915050565b606082471015610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690612003565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e989190612023565b60006040518083038185875af1925050503d8060008114610ed5576040519150601f19603f3d011682016040523d82523d6000602084013e610eda565b606091505b5091509150610eeb87838387611201565b92505050949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610f55577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610f4b57610f4a611f62565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610f92576d04ee2d6d415b85acef81000000008381610f8857610f87611f62565b5b0492506020810190505b662386f26fc100008310610fc157662386f26fc100008381610fb757610fb6611f62565b5b0492506010810190505b6305f5e1008310610fea576305f5e1008381610fe057610fdf611f62565b5b0492506008810190505b612710831061100f57612710838161100557611004611f62565b5b0492506004810190505b60648310611032576064838161102857611027611f62565b5b0492506002810190505b600a8310611041576001810190505b80915050919050565b600080604183510361108b5760008060006020860151925060408601519150606086015160001a905061107f87828585611276565b94509450505050611094565b60006002915091505b9250929050565b600060048111156110af576110ae61203a565b5b8160048111156110c2576110c161203a565b5b03156111fe57600160048111156110dc576110db61203a565b5b8160048111156110ef576110ee61203a565b5b0361112f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611126906120b5565b60405180910390fd5b600260048111156111435761114261203a565b5b8160048111156111565761115561203a565b5b03611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118d90612121565b60405180910390fd5b600360048111156111aa576111a961203a565b5b8160048111156111bd576111bc61203a565b5b036111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f4906121b3565b60405180910390fd5b5b50565b6060831561126357600083510361125b5761121b85611358565b61125a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112519061221f565b60405180910390fd5b5b82905061126e565b61126d838361137b565b5b949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156112b157600060039150915061134f565b6000600187878787604051600081526020016040526040516112d6949392919061226a565b6020604051602081039080840390855afa1580156112f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113465760006001925092505061134f565b80600092509250505b94509492505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561138e5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c291906122e8565b60405180910390fd5b6000819050919050565b6113de816113cb565b82525050565b60006020820190506113f960008301846113d5565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143e82611413565b9050919050565b61144e81611433565b811461145957600080fd5b50565b60008135905061146b81611445565b92915050565b60006020828403121561148757611486611409565b5b60006114958482850161145c565b91505092915050565b6000819050919050565b6114b18161149e565b81146114bc57600080fd5b50565b6000813590506114ce816114a8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611527826114de565b810181811067ffffffffffffffff82111715611546576115456114ef565b5b80604052505050565b60006115596113ff565b9050611565828261151e565b919050565b600067ffffffffffffffff821115611585576115846114ef565b5b61158e826114de565b9050602081019050919050565b82818337600083830152505050565b60006115bd6115b88461156a565b61154f565b9050828152602081018484840111156115d9576115d86114d9565b5b6115e484828561159b565b509392505050565b600082601f830112611601576116006114d4565b5b81356116118482602086016115aa565b91505092915050565b600080fd5b600080fd5b60008083601f84011261163a576116396114d4565b5b8235905067ffffffffffffffff8111156116575761165661161a565b5b6020830191508360018202830111156116735761167261161f565b5b9250929050565b6000806000806060858703121561169457611693611409565b5b60006116a2878288016114bf565b945050602085013567ffffffffffffffff8111156116c3576116c261140e565b5b6116cf878288016115ec565b935050604085013567ffffffffffffffff8111156116f0576116ef61140e565b5b6116fc87828801611624565b925092505092959194509250565b61171381611433565b82525050565b600060208201905061172e600083018461170a565b92915050565b61173d816113cb565b811461174857600080fd5b50565b60008135905061175a81611734565b92915050565b60006020828403121561177657611775611409565b5b60006117848482850161174b565b91505092915050565b600080604083850312156117a4576117a3611409565b5b60006117b28582860161145c565b92505060206117c38582860161174b565b9150509250929050565b6000819050919050565b60006117f26117ed6117e884611413565b6117cd565b611413565b9050919050565b6000611804826117d7565b9050919050565b6000611816826117f9565b9050919050565b6118268161180b565b82525050565b6000602082019050611841600083018461181d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611881826113cb565b915061188c836113cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118c1576118c0611847565b5b828201905092915050565b600081519050919050565b600081905092915050565b60005b838110156119005780820151818401526020810190506118e5565b8381111561190f576000848401525b50505050565b6000611920826118cc565b61192a81856118d7565b935061193a8185602086016118e2565b80840191505092915050565b6000819050919050565b61196161195c8261149e565b611946565b82525050565b60006119738285611915565b915061197f8284611950565b6020820191508190509392505050565b60008151905061199e81611734565b92915050565b60006119af82611413565b9050919050565b6119bf816119a4565b81146119ca57600080fd5b50565b6000815190506119dc816119b6565b92915050565b600080604083850312156119f9576119f8611409565b5b6000611a078582860161198f565b9250506020611a18858286016119cd565b9150509250929050565b600060208284031215611a3857611a37611409565b5b6000611a468482850161198f565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611abc602683611a4f565b9150611ac782611a60565b604082019050919050565b60006020820190508181036000830152611aeb81611aaf565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b28602083611a4f565b9150611b3382611af2565b602082019050919050565b60006020820190508181036000830152611b5781611b1b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b94601f83611a4f565b9150611b9f82611b5e565b602082019050919050565b60006020820190508181036000830152611bc381611b87565b9050919050565b7f5369676e6174757265436865636b65723a204d65737361676520616c7265616460008201527f7920757365640000000000000000000000000000000000000000000000000000602082015250565b6000611c26602683611a4f565b9150611c3182611bca565b604082019050919050565b60006020820190508181036000830152611c5581611c19565b9050919050565b6000604082019050611c71600083018561170a565b611c7e60208301846113d5565b9392505050565b6000611c90826113cb565b9150611c9b836113cb565b925082821015611cae57611cad611847565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f5369676e6174757265436865636b65723a20496e76616c6964207369676e617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b6000611d73602383611a4f565b9150611d7e82611d17565b604082019050919050565b60006020820190508181036000830152611da281611d66565b9050919050565b60008115159050919050565b611dbe81611da9565b8114611dc957600080fd5b50565b600081519050611ddb81611db5565b92915050565b600060208284031215611df757611df6611409565b5b6000611e0584828501611dcc565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611e6a602a83611a4f565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611ee1601a83611ea0565b9150611eec82611eab565b601a82019050919050565b600081519050919050565b6000611f0d82611ef7565b611f178185611ea0565b9350611f278185602086016118e2565b80840191505092915050565b6000611f3e82611ed4565b9150611f4a8285611f02565b9150611f568284611915565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611fed602683611a4f565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b600061202f8284611915565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061209f601883611a4f565b91506120aa82612069565b602082019050919050565b600060208201905081810360008301526120ce81612092565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061210b601f83611a4f565b9150612116826120d5565b602082019050919050565b6000602082019050818103600083015261213a816120fe565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061219d602283611a4f565b91506121a882612141565b604082019050919050565b600060208201905081810360008301526121cc81612190565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612209601d83611a4f565b9150612214826121d3565b602082019050919050565b60006020820190508181036000830152612238816121fc565b9050919050565b6122488161149e565b82525050565b600060ff82169050919050565b6122648161224e565b82525050565b600060808201905061227f600083018761223f565b61228c602083018661225b565b612299604083018561223f565b6122a6606083018461223f565b95945050505050565b60006122ba82611ef7565b6122c48185611a4f565b93506122d48185602086016118e2565b6122dd816114de565b840191505092915050565b6000602082019050818103600083015261230281846122af565b90509291505056fea2646970667358221220867e318b47eefb118f9370a9a2bd46dff0c366dc58463b32a40698af9297e74264736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96E09B71 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x96E09B71 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x191 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x54A1BCD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE316AB7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x7AEE389B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x1D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63D JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH1 0x2 PUSH2 0x6BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x63D JUMP JUMPDEST PUSH2 0x1E7 PUSH1 0x0 PUSH2 0x6EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP DUP1 PUSH3 0x15180 PUSH1 0x8 SLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x25A DUP5 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 DUP5 PUSH1 0x4 PUSH1 0x2 PUSH2 0x800 SWAP1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 SLOAD DUP3 PUSH1 0x7 SLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B01268B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x337 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCB0D13700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3F9 DUP2 DUP4 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0x404 PUSH2 0x932 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x43C PUSH2 0x63D JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x44E PUSH2 0x63D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST LT ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCB0D13700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x570 DUP3 DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0x63D JUMP JUMPDEST PUSH2 0x590 DUP2 PUSH1 0x2 PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x59C PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x6EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x645 PUSH2 0x96C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x663 PUSH2 0x40A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80B DUP6 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x864 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8A4 DUP7 DUP3 DUP7 DUP7 PUSH2 0xA9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8CB SWAP3 SWAP2 SWAP1 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x964 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xA7C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xA2D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x1CB9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH2 0xA02 PUSH2 0x1CB9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0xA41 JUMPI PUSH2 0xA40 PUSH2 0x1CE8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP3 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCCA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xB6F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBF DUP4 DUP4 PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0xC18 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP3 MLOAD PUSH2 0xD05 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC41 SWAP3 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0xCB1 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD3 JUMP JUMPDEST DUP7 PUSH2 0xDFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCD9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xD14 DUP5 PUSH2 0xEF7 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD65 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xDC8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xD73 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP6 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDEF DUP2 PUSH2 0x109B JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE22 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xCE2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEEB DUP8 DUP4 DUP4 DUP8 PUSH2 0x1201 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xF55 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xF4B JUMPI PUSH2 0xF4A PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF92 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFC1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xFB7 JUMPI PUSH2 0xFB6 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFEA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xFE0 JUMPI PUSH2 0xFDF PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x100F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1005 JUMPI PUSH2 0x1004 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1032 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1028 JUMPI PUSH2 0x1027 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1041 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x107F DUP8 DUP3 DUP6 DUP6 PUSH2 0x1276 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10C2 JUMPI PUSH2 0x10C1 PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x11FE JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1126 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH2 0x1142 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11A9 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x203A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x125B JUMPI PUSH2 0x121B DUP6 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x126E JUMP JUMPDEST PUSH2 0x126D DUP4 DUP4 PUSH2 0x137B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x12D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1346 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x134F JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x138E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DE DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144E DUP2 PUSH2 0x1433 JUMP JUMPDEST DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146B DUP2 PUSH2 0x1445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1486 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1495 DUP5 DUP3 DUP6 ADD PUSH2 0x145C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B1 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP2 EQ PUSH2 0x14BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1527 DUP3 PUSH2 0x14DE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1559 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH2 0x1565 DUP3 DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0x14EF JUMP JUMPDEST JUMPDEST PUSH2 0x158E DUP3 PUSH2 0x14DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD PUSH2 0x15B8 DUP5 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x14D9 JUMP JUMPDEST JUMPDEST PUSH2 0x15E4 DUP5 DUP3 DUP6 PUSH2 0x159B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1611 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x161A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x161F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A2 DUP8 DUP3 DUP9 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x140E JUMP JUMPDEST JUMPDEST PUSH2 0x16CF DUP8 DUP3 DUP9 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x140E JUMP JUMPDEST JUMPDEST PUSH2 0x16FC DUP8 DUP3 DUP9 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175A DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1784 DUP5 DUP3 DUP6 ADD PUSH2 0x174B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP6 DUP3 DUP7 ADD PUSH2 0x145C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x174B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F2 PUSH2 0x17ED PUSH2 0x17E8 DUP5 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1816 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1826 DUP2 PUSH2 0x180B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1841 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH2 0x188C DUP4 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1900 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP3 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x192A DUP2 DUP6 PUSH2 0x18D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x193A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1961 PUSH2 0x195C DUP3 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP3 DUP6 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP PUSH2 0x197F DUP3 DUP5 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x199E DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AF DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BF DUP2 PUSH2 0x19A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19DC DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F8 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A07 DUP6 DUP3 DUP7 ADD PUSH2 0x198F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x19CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A38 JUMPI PUSH2 0x1A37 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP5 DUP3 DUP6 ADD PUSH2 0x198F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B28 PUSH1 0x20 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B33 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B57 DUP2 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B94 PUSH1 0x1F DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9F DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC3 DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E6174757265436865636B65723A204D65737361676520616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C26 PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C31 DUP3 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C55 DUP2 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1C7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP3 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9B DUP4 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5369676E6174757265436865636B65723A20496E76616C6964207369676E6174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D73 PUSH1 0x23 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7E DUP3 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA2 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1DA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DDB DUP2 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1409 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E05 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x2A DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE1 PUSH1 0x1A DUP4 PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEC DUP3 PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D DUP3 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1F17 DUP2 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E DUP3 PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4A DUP3 DUP6 PUSH2 0x1F02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP3 DUP5 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x26 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F DUP3 DUP5 PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209F PUSH1 0x18 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x20AA DUP3 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20CE DUP2 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210B PUSH1 0x1F DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x2116 DUP3 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213A DUP2 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219D PUSH1 0x22 DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP3 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21CC DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 PUSH1 0x1D DUP4 PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP PUSH2 0x2214 DUP3 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2238 DUP2 PUSH2 0x21FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2264 DUP2 PUSH2 0x224E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x227F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x228C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x2299 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x22A6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x223F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA DUP3 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22C4 DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP PUSH2 0x22D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x14DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2302 DUP2 DUP5 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH31 0x318B47EEFB118F9370A9A2BD46DFF0C366DC58463B32A40698AF9297E74264 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"644:2029:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:96:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:6;;;:::i;:::-;;1300:1088:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:116:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2394:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;718:90:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;841:19:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;867:28;;;;:::o;895:96:1:-;1094:13:6;:11;:13::i;:::-;962:22:1::1;977:6;962:7;:14;;:22;;;;:::i;:::-;;895:96:::0;:::o;1824:101:6:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1300:1088:22:-;2261:21:7;:19;:21::i;:::-;1444:24:22::1;1471:15;1444:42;;1595:16;1584:8;1563:18;;:29;;;;:::i;:::-;:48;1559:206;;;1702:1;1682:17;:21;;;;1738:16;1717:18;:37;;;;1559:206;1807:134;1867:5;1874:6;1850:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1895:10;;1919:12;1807:7;:29;;:134;;;;;;;:::i;:::-;1953:14;1969:17:::0;2014:5:::1;1990:71;;;;;;;;;;;;:::i;:::-;1952:109;;;;2105:13;;2096:6;2076:17;;:26;;;;:::i;:::-;:42;2072:104;;;2139:37;;;;;;;;;;;;;;2072:104;2224:6;2191:5;;;;;;;;;;;:15;;;2215:4;2191:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;2187:108;;;2251:44;;;;;;;;;;;;;;2187:108;2327:6;2306:17;;:27;;;;;;;:::i;:::-;;;;;;;;2344:37;2363:9;2374:6;2344:5;;;;;;;;;;;:18;;;;:37;;;;;:::i;:::-;1434:954;;;2303:20:7::0;:18;:20::i;:::-;1300:1088:22;;;;:::o;1201:85:6:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1178:116:22:-;1094:13:6;:11;:13::i;:::-;1273:14:22::1;1257:13;:30;;;;1178:116:::0;:::o;2394:277::-;1094:13:6;:11;:13::i;:::-;2542:7:22::1;2509:5;;;;;;;;;;;:15;;;2533:4;2509:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;2505:109;;;2570:44;;;;;;;;;;;;;;2505:109;2625:39;2644:10;2656:7;2625:5;;;;;;;;;;;:18;;;;:39;;;;;:::i;:::-;2394:277:::0;;:::o;718:90:1:-;1094:13:6;:11;:13::i;:::-;782:19:1::1;794:6;782:7;:11;;:19;;;;:::i;:::-;;718:90:::0;:::o;2074:198:6:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;841:19:22:-;;;;;;;;;;;;;:::o;1359:130:6:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;8623:156:21:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;2426:187:6:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;2336:287:7:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;982:483:0:-;1204:15;1222:21;1238:4;1222:15;:21::i;:::-;1204:39;;1275:12;:21;1288:7;1275:21;;;;;;;;;;;;;;;;;;;;;1274:22;1253:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;1394:4;1370:12;:21;1383:7;1370:21;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1408:50;1430:7;1439;1448:9;;1408:21;:50::i;:::-;1194:271;982:483;;;;;:::o;941:175:12:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2629:209:7:-;1716:1;2809:7;:22;;;;2629:209::o;8305:150:21:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;2786:1388:21:-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;3641:162:0:-;3732:7;3762:34;3791:4;3762:28;:34::i;:::-;3755:41;;3641:162;;;:::o;3093:302::-;3284:43;3299:7;3308;3317:9;;3284:14;:43::i;:::-;3263:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;3093:302;;;;:::o;5173:642:12:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:572;5173:642;;:::o;2214:404:21:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;7801:196:16:-;7872:7;7959:26;7976:1;:8;7959:16;:26::i;:::-;7987:1;7908:81;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7898:92;;;;;;7891:99;;7801:196;;;:::o;2661:243:0:-;2823:4;2846:51;2863:33;2877:7;2886:9;;2863:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:33::i;:::-;2846:7;:16;;:51;;;;:::i;:::-;2839:58;;2661:243;;;;;;:::o;4108:223:13:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;4255:127:21:-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;447:696:15:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;3661:227:16:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;8860:165:21:-;8940:4;8963:55;8973:3;:10;;9009:5;8993:23;;8985:32;;8963:9;:55::i;:::-;8956:62;;8860:165;;;;:::o;5165:446:13:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;10139:916:19:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;2145:730:16:-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;7671:628:13:-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;5009:1456:16:-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;1412:320:13:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:25;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:77::-;1648:7;1677:5;1666:16;;1611:77;;;:::o;1694:122::-;1767:24;1785:5;1767:24;:::i;:::-;1760:5;1757:35;1747:63;;1806:1;1803;1796:12;1747:63;1694:122;:::o;1822:139::-;1868:5;1906:6;1893:20;1884:29;;1922:33;1949:5;1922:33;:::i;:::-;1822:139;;;;:::o;1967:117::-;2076:1;2073;2066:12;2090:117;2199:1;2196;2189:12;2213:102;2254:6;2305:2;2301:7;2296:2;2289:5;2285:14;2281:28;2271:38;;2213:102;;;:::o;2321:180::-;2369:77;2366:1;2359:88;2466:4;2463:1;2456:15;2490:4;2487:1;2480:15;2507:281;2590:27;2612:4;2590:27;:::i;:::-;2582:6;2578:40;2720:6;2708:10;2705:22;2684:18;2672:10;2669:34;2666:62;2663:88;;;2731:18;;:::i;:::-;2663:88;2771:10;2767:2;2760:22;2550:238;2507:281;;:::o;2794:129::-;2828:6;2855:20;;:::i;:::-;2845:30;;2884:33;2912:4;2904:6;2884:33;:::i;:::-;2794:129;;;:::o;2929:307::-;2990:4;3080:18;3072:6;3069:30;3066:56;;;3102:18;;:::i;:::-;3066:56;3140:29;3162:6;3140:29;:::i;:::-;3132:37;;3224:4;3218;3214:15;3206:23;;2929:307;;;:::o;3242:154::-;3326:6;3321:3;3316;3303:30;3388:1;3379:6;3374:3;3370:16;3363:27;3242:154;;;:::o;3402:410::-;3479:5;3504:65;3520:48;3561:6;3520:48;:::i;:::-;3504:65;:::i;:::-;3495:74;;3592:6;3585:5;3578:21;3630:4;3623:5;3619:16;3668:3;3659:6;3654:3;3650:16;3647:25;3644:112;;;3675:79;;:::i;:::-;3644:112;3765:41;3799:6;3794:3;3789;3765:41;:::i;:::-;3485:327;3402:410;;;;;:::o;3831:338::-;3886:5;3935:3;3928:4;3920:6;3916:17;3912:27;3902:122;;3943:79;;:::i;:::-;3902:122;4060:6;4047:20;4085:78;4159:3;4151:6;4144:4;4136:6;4132:17;4085:78;:::i;:::-;4076:87;;3892:277;3831:338;;;;:::o;4175:117::-;4284:1;4281;4274:12;4298:117;4407:1;4404;4397:12;4434:552;4491:8;4501:6;4551:3;4544:4;4536:6;4532:17;4528:27;4518:122;;4559:79;;:::i;:::-;4518:122;4672:6;4659:20;4649:30;;4702:18;4694:6;4691:30;4688:117;;;4724:79;;:::i;:::-;4688:117;4838:4;4830:6;4826:17;4814:29;;4892:3;4884:4;4876:6;4872:17;4862:8;4858:32;4855:41;4852:128;;;4899:79;;:::i;:::-;4852:128;4434:552;;;;;:::o;4992:995::-;5089:6;5097;5105;5113;5162:2;5150:9;5141:7;5137:23;5133:32;5130:119;;;5168:79;;:::i;:::-;5130:119;5288:1;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5259:117;5443:2;5432:9;5428:18;5415:32;5474:18;5466:6;5463:30;5460:117;;;5496:79;;:::i;:::-;5460:117;5601:62;5655:7;5646:6;5635:9;5631:22;5601:62;:::i;:::-;5591:72;;5386:287;5740:2;5729:9;5725:18;5712:32;5771:18;5763:6;5760:30;5757:117;;;5793:79;;:::i;:::-;5757:117;5906:64;5962:7;5953:6;5942:9;5938:22;5906:64;:::i;:::-;5888:82;;;;5683:297;4992:995;;;;;;;:::o;5993:118::-;6080:24;6098:5;6080:24;:::i;:::-;6075:3;6068:37;5993:118;;:::o;6117:222::-;6210:4;6248:2;6237:9;6233:18;6225:26;;6261:71;6329:1;6318:9;6314:17;6305:6;6261:71;:::i;:::-;6117:222;;;;:::o;6345:122::-;6418:24;6436:5;6418:24;:::i;:::-;6411:5;6408:35;6398:63;;6457:1;6454;6447:12;6398:63;6345:122;:::o;6473:139::-;6519:5;6557:6;6544:20;6535:29;;6573:33;6600:5;6573:33;:::i;:::-;6473:139;;;;:::o;6618:329::-;6677:6;6726:2;6714:9;6705:7;6701:23;6697:32;6694:119;;;6732:79;;:::i;:::-;6694:119;6852:1;6877:53;6922:7;6913:6;6902:9;6898:22;6877:53;:::i;:::-;6867:63;;6823:117;6618:329;;;;:::o;6953:474::-;7021:6;7029;7078:2;7066:9;7057:7;7053:23;7049:32;7046:119;;;7084:79;;:::i;:::-;7046:119;7204:1;7229:53;7274:7;7265:6;7254:9;7250:22;7229:53;:::i;:::-;7219:63;;7175:117;7331:2;7357:53;7402:7;7393:6;7382:9;7378:22;7357:53;:::i;:::-;7347:63;;7302:118;6953:474;;;;;:::o;7433:60::-;7461:3;7482:5;7475:12;;7433:60;;;:::o;7499:142::-;7549:9;7582:53;7600:34;7609:24;7627:5;7609:24;:::i;:::-;7600:34;:::i;:::-;7582:53;:::i;:::-;7569:66;;7499:142;;;:::o;7647:126::-;7697:9;7730:37;7761:5;7730:37;:::i;:::-;7717:50;;7647:126;;;:::o;7779:141::-;7844:9;7877:37;7908:5;7877:37;:::i;:::-;7864:50;;7779:141;;;:::o;7926:161::-;8028:52;8074:5;8028:52;:::i;:::-;8023:3;8016:65;7926:161;;:::o;8093:252::-;8201:4;8239:2;8228:9;8224:18;8216:26;;8252:86;8335:1;8324:9;8320:17;8311:6;8252:86;:::i;:::-;8093:252;;;;:::o;8351:180::-;8399:77;8396:1;8389:88;8496:4;8493:1;8486:15;8520:4;8517:1;8510:15;8537:305;8577:3;8596:20;8614:1;8596:20;:::i;:::-;8591:25;;8630:20;8648:1;8630:20;:::i;:::-;8625:25;;8784:1;8716:66;8712:74;8709:1;8706:81;8703:107;;;8790:18;;:::i;:::-;8703:107;8834:1;8831;8827:9;8820:16;;8537:305;;;;:::o;8848:98::-;8899:6;8933:5;8927:12;8917:22;;8848:98;;;:::o;8952:147::-;9053:11;9090:3;9075:18;;8952:147;;;;:::o;9105:307::-;9173:1;9183:113;9197:6;9194:1;9191:13;9183:113;;;9282:1;9277:3;9273:11;9267:18;9263:1;9258:3;9254:11;9247:39;9219:2;9216:1;9212:10;9207:15;;9183:113;;;9314:6;9311:1;9308:13;9305:101;;;9394:1;9385:6;9380:3;9376:16;9369:27;9305:101;9154:258;9105:307;;;:::o;9418:373::-;9522:3;9550:38;9582:5;9550:38;:::i;:::-;9604:88;9685:6;9680:3;9604:88;:::i;:::-;9597:95;;9701:52;9746:6;9741:3;9734:4;9727:5;9723:16;9701:52;:::i;:::-;9778:6;9773:3;9769:16;9762:23;;9526:265;9418:373;;;;:::o;9797:79::-;9836:7;9865:5;9854:16;;9797:79;;;:::o;9882:157::-;9987:45;10007:24;10025:5;10007:24;:::i;:::-;9987:45;:::i;:::-;9982:3;9975:58;9882:157;;:::o;10045:412::-;10203:3;10225:93;10314:3;10305:6;10225:93;:::i;:::-;10218:100;;10328:75;10399:3;10390:6;10328:75;:::i;:::-;10428:2;10423:3;10419:12;10412:19;;10448:3;10441:10;;10045:412;;;;;:::o;10463:143::-;10520:5;10551:6;10545:13;10536:22;;10567:33;10594:5;10567:33;:::i;:::-;10463:143;;;;:::o;10612:104::-;10657:7;10686:24;10704:5;10686:24;:::i;:::-;10675:35;;10612:104;;;:::o;10722:138::-;10803:32;10829:5;10803:32;:::i;:::-;10796:5;10793:43;10783:71;;10850:1;10847;10840:12;10783:71;10722:138;:::o;10866:159::-;10931:5;10962:6;10956:13;10947:22;;10978:41;11013:5;10978:41;:::i;:::-;10866:159;;;;:::o;11031:523::-;11118:6;11126;11175:2;11163:9;11154:7;11150:23;11146:32;11143:119;;;11181:79;;:::i;:::-;11143:119;11301:1;11326:64;11382:7;11373:6;11362:9;11358:22;11326:64;:::i;:::-;11316:74;;11272:128;11439:2;11465:72;11529:7;11520:6;11509:9;11505:22;11465:72;:::i;:::-;11455:82;;11410:137;11031:523;;;;;:::o;11560:351::-;11630:6;11679:2;11667:9;11658:7;11654:23;11650:32;11647:119;;;11685:79;;:::i;:::-;11647:119;11805:1;11830:64;11886:7;11877:6;11866:9;11862:22;11830:64;:::i;:::-;11820:74;;11776:128;11560:351;;;;:::o;11917:169::-;12001:11;12035:6;12030:3;12023:19;12075:4;12070:3;12066:14;12051:29;;11917:169;;;;:::o;12092:225::-;12232:34;12228:1;12220:6;12216:14;12209:58;12301:8;12296:2;12288:6;12284:15;12277:33;12092:225;:::o;12323:366::-;12465:3;12486:67;12550:2;12545:3;12486:67;:::i;:::-;12479:74;;12562:93;12651:3;12562:93;:::i;:::-;12680:2;12675:3;12671:12;12664:19;;12323:366;;;:::o;12695:419::-;12861:4;12899:2;12888:9;12884:18;12876:26;;12948:9;12942:4;12938:20;12934:1;12923:9;12919:17;12912:47;12976:131;13102:4;12976:131;:::i;:::-;12968:139;;12695:419;;;:::o;13120:182::-;13260:34;13256:1;13248:6;13244:14;13237:58;13120:182;:::o;13308:366::-;13450:3;13471:67;13535:2;13530:3;13471:67;:::i;:::-;13464:74;;13547:93;13636:3;13547:93;:::i;:::-;13665:2;13660:3;13656:12;13649:19;;13308:366;;;:::o;13680:419::-;13846:4;13884:2;13873:9;13869:18;13861:26;;13933:9;13927:4;13923:20;13919:1;13908:9;13904:17;13897:47;13961:131;14087:4;13961:131;:::i;:::-;13953:139;;13680:419;;;:::o;14105:181::-;14245:33;14241:1;14233:6;14229:14;14222:57;14105:181;:::o;14292:366::-;14434:3;14455:67;14519:2;14514:3;14455:67;:::i;:::-;14448:74;;14531:93;14620:3;14531:93;:::i;:::-;14649:2;14644:3;14640:12;14633:19;;14292:366;;;:::o;14664:419::-;14830:4;14868:2;14857:9;14853:18;14845:26;;14917:9;14911:4;14907:20;14903:1;14892:9;14888:17;14881:47;14945:131;15071:4;14945:131;:::i;:::-;14937:139;;14664:419;;;:::o;15089:225::-;15229:34;15225:1;15217:6;15213:14;15206:58;15298:8;15293:2;15285:6;15281:15;15274:33;15089:225;:::o;15320:366::-;15462:3;15483:67;15547:2;15542:3;15483:67;:::i;:::-;15476:74;;15559:93;15648:3;15559:93;:::i;:::-;15677:2;15672:3;15668:12;15661:19;;15320:366;;;:::o;15692:419::-;15858:4;15896:2;15885:9;15881:18;15873:26;;15945:9;15939:4;15935:20;15931:1;15920:9;15916:17;15909:47;15973:131;16099:4;15973:131;:::i;:::-;15965:139;;15692:419;;;:::o;16117:332::-;16238:4;16276:2;16265:9;16261:18;16253:26;;16289:71;16357:1;16346:9;16342:17;16333:6;16289:71;:::i;:::-;16370:72;16438:2;16427:9;16423:18;16414:6;16370:72;:::i;:::-;16117:332;;;;;:::o;16455:191::-;16495:4;16515:20;16533:1;16515:20;:::i;:::-;16510:25;;16549:20;16567:1;16549:20;:::i;:::-;16544:25;;16588:1;16585;16582:8;16579:34;;;16593:18;;:::i;:::-;16579:34;16638:1;16635;16631:9;16623:17;;16455:191;;;;:::o;16652:180::-;16700:77;16697:1;16690:88;16797:4;16794:1;16787:15;16821:4;16818:1;16811:15;16838:180;16886:77;16883:1;16876:88;16983:4;16980:1;16973:15;17007:4;17004:1;16997:15;17024:222;17164:34;17160:1;17152:6;17148:14;17141:58;17233:5;17228:2;17220:6;17216:15;17209:30;17024:222;:::o;17252:366::-;17394:3;17415:67;17479:2;17474:3;17415:67;:::i;:::-;17408:74;;17491:93;17580:3;17491:93;:::i;:::-;17609:2;17604:3;17600:12;17593:19;;17252:366;;;:::o;17624:419::-;17790:4;17828:2;17817:9;17813:18;17805:26;;17877:9;17871:4;17867:20;17863:1;17852:9;17848:17;17841:47;17905:131;18031:4;17905:131;:::i;:::-;17897:139;;17624:419;;;:::o;18049:90::-;18083:7;18126:5;18119:13;18112:21;18101:32;;18049:90;;;:::o;18145:116::-;18215:21;18230:5;18215:21;:::i;:::-;18208:5;18205:32;18195:60;;18251:1;18248;18241:12;18195:60;18145:116;:::o;18267:137::-;18321:5;18352:6;18346:13;18337:22;;18368:30;18392:5;18368:30;:::i;:::-;18267:137;;;;:::o;18410:345::-;18477:6;18526:2;18514:9;18505:7;18501:23;18497:32;18494:119;;;18532:79;;:::i;:::-;18494:119;18652:1;18677:61;18730:7;18721:6;18710:9;18706:22;18677:61;:::i;:::-;18667:71;;18623:125;18410:345;;;;:::o;18761:229::-;18901:34;18897:1;18889:6;18885:14;18878:58;18970:12;18965:2;18957:6;18953:15;18946:37;18761:229;:::o;18996:366::-;19138:3;19159:67;19223:2;19218:3;19159:67;:::i;:::-;19152:74;;19235:93;19324:3;19235:93;:::i;:::-;19353:2;19348:3;19344:12;19337:19;;18996:366;;;:::o;19368:419::-;19534:4;19572:2;19561:9;19557:18;19549:26;;19621:9;19615:4;19611:20;19607:1;19596:9;19592:17;19585:47;19649:131;19775:4;19649:131;:::i;:::-;19641:139;;19368:419;;;:::o;19793:148::-;19895:11;19932:3;19917:18;;19793:148;;;;:::o;19947:214::-;20087:66;20083:1;20075:6;20071:14;20064:90;19947:214;:::o;20167:402::-;20327:3;20348:85;20430:2;20425:3;20348:85;:::i;:::-;20341:92;;20442:93;20531:3;20442:93;:::i;:::-;20560:2;20555:3;20551:12;20544:19;;20167:402;;;:::o;20575:99::-;20627:6;20661:5;20655:12;20645:22;;20575:99;;;:::o;20680:377::-;20786:3;20814:39;20847:5;20814:39;:::i;:::-;20869:89;20951:6;20946:3;20869:89;:::i;:::-;20862:96;;20967:52;21012:6;21007:3;21000:4;20993:5;20989:16;20967:52;:::i;:::-;21044:6;21039:3;21035:16;21028:23;;20790:267;20680:377;;;;:::o;21063:697::-;21342:3;21364:148;21508:3;21364:148;:::i;:::-;21357:155;;21529:95;21620:3;21611:6;21529:95;:::i;:::-;21522:102;;21641:93;21730:3;21721:6;21641:93;:::i;:::-;21634:100;;21751:3;21744:10;;21063:697;;;;;:::o;21766:180::-;21814:77;21811:1;21804:88;21911:4;21908:1;21901:15;21935:4;21932:1;21925:15;21952:225;22092:34;22088:1;22080:6;22076:14;22069:58;22161:8;22156:2;22148:6;22144:15;22137:33;21952:225;:::o;22183:366::-;22325:3;22346:67;22410:2;22405:3;22346:67;:::i;:::-;22339:74;;22422:93;22511:3;22422:93;:::i;:::-;22540:2;22535:3;22531:12;22524:19;;22183:366;;;:::o;22555:419::-;22721:4;22759:2;22748:9;22744:18;22736:26;;22808:9;22802:4;22798:20;22794:1;22783:9;22779:17;22772:47;22836:131;22962:4;22836:131;:::i;:::-;22828:139;;22555:419;;;:::o;22980:271::-;23110:3;23132:93;23221:3;23212:6;23132:93;:::i;:::-;23125:100;;23242:3;23235:10;;22980:271;;;;:::o;23257:180::-;23305:77;23302:1;23295:88;23402:4;23399:1;23392:15;23426:4;23423:1;23416:15;23443:174;23583:26;23579:1;23571:6;23567:14;23560:50;23443:174;:::o;23623:366::-;23765:3;23786:67;23850:2;23845:3;23786:67;:::i;:::-;23779:74;;23862:93;23951:3;23862:93;:::i;:::-;23980:2;23975:3;23971:12;23964:19;;23623:366;;;:::o;23995:419::-;24161:4;24199:2;24188:9;24184:18;24176:26;;24248:9;24242:4;24238:20;24234:1;24223:9;24219:17;24212:47;24276:131;24402:4;24276:131;:::i;:::-;24268:139;;23995:419;;;:::o;24420:181::-;24560:33;24556:1;24548:6;24544:14;24537:57;24420:181;:::o;24607:366::-;24749:3;24770:67;24834:2;24829:3;24770:67;:::i;:::-;24763:74;;24846:93;24935:3;24846:93;:::i;:::-;24964:2;24959:3;24955:12;24948:19;;24607:366;;;:::o;24979:419::-;25145:4;25183:2;25172:9;25168:18;25160:26;;25232:9;25226:4;25222:20;25218:1;25207:9;25203:17;25196:47;25260:131;25386:4;25260:131;:::i;:::-;25252:139;;24979:419;;;:::o;25404:221::-;25544:34;25540:1;25532:6;25528:14;25521:58;25613:4;25608:2;25600:6;25596:15;25589:29;25404:221;:::o;25631:366::-;25773:3;25794:67;25858:2;25853:3;25794:67;:::i;:::-;25787:74;;25870:93;25959:3;25870:93;:::i;:::-;25988:2;25983:3;25979:12;25972:19;;25631:366;;;:::o;26003:419::-;26169:4;26207:2;26196:9;26192:18;26184:26;;26256:9;26250:4;26246:20;26242:1;26231:9;26227:17;26220:47;26284:131;26410:4;26284:131;:::i;:::-;26276:139;;26003:419;;;:::o;26428:179::-;26568:31;26564:1;26556:6;26552:14;26545:55;26428:179;:::o;26613:366::-;26755:3;26776:67;26840:2;26835:3;26776:67;:::i;:::-;26769:74;;26852:93;26941:3;26852:93;:::i;:::-;26970:2;26965:3;26961:12;26954:19;;26613:366;;;:::o;26985:419::-;27151:4;27189:2;27178:9;27174:18;27166:26;;27238:9;27232:4;27228:20;27224:1;27213:9;27209:17;27202:47;27266:131;27392:4;27266:131;:::i;:::-;27258:139;;26985:419;;;:::o;27410:118::-;27497:24;27515:5;27497:24;:::i;:::-;27492:3;27485:37;27410:118;;:::o;27534:86::-;27569:7;27609:4;27602:5;27598:16;27587:27;;27534:86;;;:::o;27626:112::-;27709:22;27725:5;27709:22;:::i;:::-;27704:3;27697:35;27626:112;;:::o;27744:545::-;27917:4;27955:3;27944:9;27940:19;27932:27;;27969:71;28037:1;28026:9;28022:17;28013:6;27969:71;:::i;:::-;28050:68;28114:2;28103:9;28099:18;28090:6;28050:68;:::i;:::-;28128:72;28196:2;28185:9;28181:18;28172:6;28128:72;:::i;:::-;28210;28278:2;28267:9;28263:18;28254:6;28210:72;:::i;:::-;27744:545;;;;;;;:::o;28295:364::-;28383:3;28411:39;28444:5;28411:39;:::i;:::-;28466:71;28530:6;28525:3;28466:71;:::i;:::-;28459:78;;28546:52;28591:6;28586:3;28579:4;28572:5;28568:16;28546:52;:::i;:::-;28623:29;28645:6;28623:29;:::i;:::-;28618:3;28614:39;28607:46;;28387:272;28295:364;;;;:::o;28665:313::-;28778:4;28816:2;28805:9;28801:18;28793:26;;28865:9;28859:4;28855:20;28851:1;28840:9;28836:17;28829:47;28893:78;28966:4;28957:6;28893:78;:::i;:::-;28885:86;;28665:313;;;;:::o"},"methodIdentifiers":{"addSigner(address)":"eb12d61e","claimToken(bytes32,bytes,bytes)":"7aee389b","maxDailyClaim()":"054a1bcd","owner()":"8da5cb5b","removeSigner(address)":"0e316ab7","renounceOwnership()":"715018a6","setMaxDailyClaim(uint256)":"96e09b71","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","withdrawToken(address,uint256)":"9e281a98"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxDailyClaim\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Claim_Contract_Does_Not_Have_Enough_Tokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Claim_Exceeded_Daily_Claiming_Limit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDailyClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDailyClaim\",\"type\":\"uint256\"}],\"name\":\"setMaxDailyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSigner(address)\":{\"notice\":\"Add an address to the set of accepted signers.\"},\"removeSigner(address)\":{\"notice\":\"Remove an address previously added with addSigner().\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Claim.sol\":\"Claim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@divergencetech/ethier/contracts/crypto/SignatureChecker.sol\":{\"keccak256\":\"0x3944aa1dd47e5f23e1ce9597908190b69a9245717949ddcbd57cc13b54f6f373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f2ca92399d3889bc716cc0a84c3fa28b35e892cc22240e0a3872069812ae81\",\"dweb:/ipfs/QmS5snZV24EXFT4tJgUFpYVAmq18XWCur8h7yo9i2u8FjB\"]},\"@divergencetech/ethier/contracts/crypto/SignerManager.sol\":{\"keccak256\":\"0xffc887b57eda01f60fcd4b43d707a80f23714d18858e268ac2efc2765cad9fcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863fbfedf848863d2cfde3679b6d36df658e31480d8aaabd79287074fd60f904\",\"dweb:/ipfs/Qmehdu8jhtgfX3xNytrdCB1Eb6TVLqDgQeLnnNyQTDqmm1\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/Claim.sol\":{\"keccak256\":\"0x2e9c432e22717ae8779b063e8a7851e1b348dcd8b0fefcbd8a0b098e0dbe4a60\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9dbf5846c9c059934eb431e3cef65d9f98b1ce27c77af02a5d37f9eb79fbedd2\",\"dweb:/ipfs/QmTA6bXMW9dYtxBZnzn6msuBMtxYWX1sxNu2vaaz81D4tF\"]}},\"version\":1}"}},"contracts/DemoToken.sol":{"DemoToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4805":{"entryPoint":null,"id":4805,"parameterSlots":0,"returnSlots":0},"@_968":{"entryPoint":null,"id":968,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_1509":{"entryPoint":582,"id":1509,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1498":{"entryPoint":577,"id":1498,"parameterSlots":3,"returnSlots":0},"@_mint_1327":{"entryPoint":211,"id":1327,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1044,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1061,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":894,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1137,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1090,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2607:25","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:25"},"nodeType":"YulFunctionCall","src":"113:19:25"},"nodeType":"YulExpressionStatement","src":"113:19:25"},{"nodeType":"YulAssignment","src":"141:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:25"},"nodeType":"YulFunctionCall","src":"156:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:25","type":""}],"src":"7:169:25"},{"body":{"nodeType":"YulBlock","src":"288:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:25"},"nodeType":"YulFunctionCall","src":"306:14:25"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"322:33:25","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:25"},"nodeType":"YulFunctionCall","src":"299:57:25"},"nodeType":"YulExpressionStatement","src":"299:57:25"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:25","type":""}],"src":"182:181:25"},{"body":{"nodeType":"YulBlock","src":"515:220:25","statements":[{"nodeType":"YulAssignment","src":"525:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"591:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"596:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"532:58:25"},"nodeType":"YulFunctionCall","src":"532:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"525:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"697:3:25"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"608:88:25"},"nodeType":"YulFunctionCall","src":"608:93:25"},"nodeType":"YulExpressionStatement","src":"608:93:25"},{"nodeType":"YulAssignment","src":"710:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"721:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"726:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"717:3:25"},"nodeType":"YulFunctionCall","src":"717:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"710:3:25"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"503:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"511:3:25","type":""}],"src":"369:366:25"},{"body":{"nodeType":"YulBlock","src":"912:248:25","statements":[{"nodeType":"YulAssignment","src":"922:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:25"},"nodeType":"YulFunctionCall","src":"930:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"922:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"980:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"965:3:25"},"nodeType":"YulFunctionCall","src":"965:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"988:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"984:3:25"},"nodeType":"YulFunctionCall","src":"984:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"958:6:25"},"nodeType":"YulFunctionCall","src":"958:47:25"},"nodeType":"YulExpressionStatement","src":"958:47:25"},{"nodeType":"YulAssignment","src":"1014:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1148:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1022:124:25"},"nodeType":"YulFunctionCall","src":"1022:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1014:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"907:4:25","type":""}],"src":"741:419:25"},{"body":{"nodeType":"YulBlock","src":"1211:32:25","statements":[{"nodeType":"YulAssignment","src":"1221:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1232:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1221:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1193:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1203:7:25","type":""}],"src":"1166:77:25"},{"body":{"nodeType":"YulBlock","src":"1277:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1294:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1297:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1287:6:25"},"nodeType":"YulFunctionCall","src":"1287:88:25"},"nodeType":"YulExpressionStatement","src":"1287:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1391:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1394:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:25"},"nodeType":"YulFunctionCall","src":"1384:15:25"},"nodeType":"YulExpressionStatement","src":"1384:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1418:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1408:6:25"},"nodeType":"YulFunctionCall","src":"1408:15:25"},"nodeType":"YulExpressionStatement","src":"1408:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1249:180:25"},{"body":{"nodeType":"YulBlock","src":"1479:261:25","statements":[{"nodeType":"YulAssignment","src":"1489:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1512:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1494:17:25"},"nodeType":"YulFunctionCall","src":"1494:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"1489:1:25"}]},{"nodeType":"YulAssignment","src":"1523:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1546:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1528:17:25"},"nodeType":"YulFunctionCall","src":"1528:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"1523:1:25"}]},{"body":{"nodeType":"YulBlock","src":"1686:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1688:16:25"},"nodeType":"YulFunctionCall","src":"1688:18:25"},"nodeType":"YulExpressionStatement","src":"1688:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1607:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1614:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"1682:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1610:3:25"},"nodeType":"YulFunctionCall","src":"1610:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1604:2:25"},"nodeType":"YulFunctionCall","src":"1604:81:25"},"nodeType":"YulIf","src":"1601:107:25"},{"nodeType":"YulAssignment","src":"1718:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1729:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"1732:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:25"},"nodeType":"YulFunctionCall","src":"1725:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1718:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1466:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"1469:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1475:3:25","type":""}],"src":"1435:305:25"},{"body":{"nodeType":"YulBlock","src":"1811:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1828:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1833:17:25"},"nodeType":"YulFunctionCall","src":"1833:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1821:6:25"},"nodeType":"YulFunctionCall","src":"1821:37:25"},"nodeType":"YulExpressionStatement","src":"1821:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1799:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1806:3:25","type":""}],"src":"1746:118:25"},{"body":{"nodeType":"YulBlock","src":"1968:124:25","statements":[{"nodeType":"YulAssignment","src":"1978:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1990:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2001:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1986:3:25"},"nodeType":"YulFunctionCall","src":"1986:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1978:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2058:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2071:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2082:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:25"},"nodeType":"YulFunctionCall","src":"2067:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2014:43:25"},"nodeType":"YulFunctionCall","src":"2014:71:25"},"nodeType":"YulExpressionStatement","src":"2014:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1940:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1952:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1963:4:25","type":""}],"src":"1870:222:25"},{"body":{"nodeType":"YulBlock","src":"2126:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2143:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2146:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:25"},"nodeType":"YulFunctionCall","src":"2136:88:25"},"nodeType":"YulExpressionStatement","src":"2136:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2240:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2243:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2233:6:25"},"nodeType":"YulFunctionCall","src":"2233:15:25"},"nodeType":"YulExpressionStatement","src":"2233:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2264:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2267:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2257:6:25"},"nodeType":"YulFunctionCall","src":"2257:15:25"},"nodeType":"YulExpressionStatement","src":"2257:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2098:180:25"},{"body":{"nodeType":"YulBlock","src":"2335:269:25","statements":[{"nodeType":"YulAssignment","src":"2345:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2359:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2365:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2355:3:25"},"nodeType":"YulFunctionCall","src":"2355:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2345:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"2376:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2406:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2412:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2402:3:25"},"nodeType":"YulFunctionCall","src":"2402:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2380:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2453:51:25","statements":[{"nodeType":"YulAssignment","src":"2467:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2481:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2489:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2477:3:25"},"nodeType":"YulFunctionCall","src":"2477:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2467:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2433:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2426:6:25"},"nodeType":"YulFunctionCall","src":"2426:26:25"},"nodeType":"YulIf","src":"2423:81:25"},{"body":{"nodeType":"YulBlock","src":"2556:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2570:16:25"},"nodeType":"YulFunctionCall","src":"2570:18:25"},"nodeType":"YulExpressionStatement","src":"2570:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2520:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2543:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2540:2:25"},"nodeType":"YulFunctionCall","src":"2540:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2517:2:25"},"nodeType":"YulFunctionCall","src":"2517:38:25"},"nodeType":"YulIf","src":"2514:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2319:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2328:6:25","type":""}],"src":"2284:320:25"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4444000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x24B JUMP JUMPDEST POP DUP1 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x24B JUMP JUMPDEST POP POP POP PUSH3 0xCD CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH3 0xD3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x145 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13C SWAP1 PUSH3 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x159 PUSH1 0x0 DUP4 DUP4 PUSH3 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x16D SWAP2 SWAP1 PUSH3 0x3B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x221 SWAP2 SWAP1 PUSH3 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x23D PUSH1 0x0 DUP4 DUP4 PUSH3 0x246 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x259 SWAP1 PUSH3 0x471 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x298 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2D8 SWAP2 SWAP1 PUSH3 0x2DC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2DD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x344 PUSH1 0x1F DUP4 PUSH3 0x2FB JUMP JUMPDEST SWAP2 POP PUSH3 0x351 DUP3 PUSH3 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x377 DUP2 PUSH3 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3C4 DUP3 PUSH3 0x37E JUMP JUMPDEST SWAP2 POP PUSH3 0x3D1 DUP4 PUSH3 0x37E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x408 PUSH3 0x388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x41F DUP2 PUSH3 0x37E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x43C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A0 JUMPI PUSH3 0x49F PUSH3 0x442 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F2 DUP1 PUSH3 0x4B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x42B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x361 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x283 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4CE JUMPI POP PUSH2 0x4CD DUP3 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x572 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x57F DUP2 DUP6 DUP6 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AC DUP6 DUP3 DUP6 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x5B7 DUP6 DUP6 DUP6 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x5FE DUP4 DUP4 PUSH2 0xF0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x614 PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B DUP3 DUP3 PUSH2 0xF3F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x69A PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BB DUP2 DUP6 DUP6 PUSH2 0x6AC DUP6 DUP10 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF73 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x805 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x830 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x813 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x84C PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85A DUP3 DUP7 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C3 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D0 DUP2 DUP6 DUP6 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x908 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x91B DUP4 DUP4 PUSH2 0xF3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH2 0xA19 DUP3 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP5 DUP5 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC77 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP1 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD67 DUP4 DUP4 DUP4 PUSH2 0x100C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEF1 DUP5 DUP5 DUP5 PUSH2 0x1011 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0xF03 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF15 DUP3 DUP3 PUSH2 0x109B JUMP JUMPDEST PUSH2 0xF3A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x117B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF49 DUP3 DUP3 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x128C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9B DUP3 PUSH1 0x0 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1020 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1097 JUMPI PUSH2 0x102D DUP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x103B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x104C SWAP3 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10A5 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x111C PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B5 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x122D PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x131E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1338 SWAP2 SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH2 0x135A PUSH2 0x2295 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13C5 JUMPI PUSH2 0x13C4 PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1429 JUMPI PUSH2 0x1428 PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1513 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x14B5 JUMPI PUSH2 0x14B4 PUSH2 0x220C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x150C SWAP1 PUSH2 0x22C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1476 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP4 DUP4 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x15C6 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x16D9 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x168A JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x238D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x170D JUMP JUMPDEST DUP2 EQ PUSH2 0x174D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175F DUP2 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1789 DUP5 DUP3 DUP6 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1802 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17E7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1811 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1833 DUP3 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x183D DUP2 DUP6 PUSH2 0x17D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x184D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1856 DUP2 PUSH2 0x1817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x187B DUP2 DUP5 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AE DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DB DUP2 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x18E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1911 DUP2 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194D DUP6 DUP3 DUP7 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1960 DUP2 PUSH2 0x18E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH2 0x1999 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A8 DUP7 DUP3 DUP8 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B9 DUP7 DUP3 DUP8 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19CA DUP7 DUP3 DUP8 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E7 DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A04 DUP2 PUSH2 0x19DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2E DUP5 DUP3 DUP6 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A78 JUMPI PUSH2 0x1A77 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A86 DUP6 DUP3 DUP7 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A97 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFC DUP5 DUP3 DUP6 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4E DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B86 JUMPI PUSH2 0x1B85 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B94 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA5 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BF6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1BAF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6B PUSH1 0x2F DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9A DUP2 PUSH2 0x1C5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CDB DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE6 DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D82 PUSH1 0x25 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP3 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB1 DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E14 PUSH1 0x24 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1F DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E43 DUP2 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA6 PUSH1 0x22 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB1 DUP3 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED5 DUP2 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F12 PUSH1 0x1D DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1D DUP3 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F41 DUP2 PUSH2 0x1F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA4 PUSH1 0x25 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAF DUP3 PUSH2 0x1F48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD3 DUP2 PUSH2 0x1F97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2036 PUSH1 0x23 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2041 DUP3 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2065 DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C8 PUSH1 0x26 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D3 DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F7 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213F PUSH1 0x17 DUP4 PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP PUSH2 0x214A DUP3 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP3 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x216A DUP2 DUP6 PUSH2 0x20FE JUMP JUMPDEST SWAP4 POP PUSH2 0x217A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BC PUSH1 0x11 DUP4 PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP PUSH2 0x21C7 DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD DUP3 PUSH2 0x2132 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E9 DUP3 DUP6 PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F4 DUP3 PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2246 DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2251 DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22CF DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 PUSH1 0x20 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x232E DUP3 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2352 DUP2 PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2364 DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x236F DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x6474BA2AC4A167A34258C838AA3DC374DA8E4749C9A0BFA30F19864E6F265464 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"188:147:23:-:0;;;261:72;;;;;;;;;;1980:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;285:41:23;291:10;303:22;285:5;;;:41;;:::i;:::-;188:147;;8520:535:8;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;188:147:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:169:25:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:181::-;322:33;318:1;310:6;306:14;299:57;182:181;:::o;369:366::-;511:3;532:67;596:2;591:3;532:67;:::i;:::-;525:74;;608:93;697:3;608:93;:::i;:::-;726:2;721:3;717:12;710:19;;369:366;;;:::o;741:419::-;907:4;945:2;934:9;930:18;922:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1022:131;1148:4;1022:131;:::i;:::-;1014:139;;741:419;;;:::o;1166:77::-;1203:7;1232:5;1221:16;;1166:77;;;:::o;1249:180::-;1297:77;1294:1;1287:88;1394:4;1391:1;1384:15;1418:4;1415:1;1408:15;1435:305;1475:3;1494:20;1512:1;1494:20;:::i;:::-;1489:25;;1528:20;1546:1;1528:20;:::i;:::-;1523:25;;1682:1;1614:66;1610:74;1607:1;1604:81;1601:107;;;1688:18;;:::i;:::-;1601:107;1732:1;1729;1725:9;1718:16;;1435:305;;;;:::o;1746:118::-;1833:24;1851:5;1833:24;:::i;:::-;1828:3;1821:37;1746:118;;:::o;1870:222::-;1963:4;2001:2;1990:9;1986:18;1978:26;;2014:71;2082:1;2071:9;2067:17;2058:6;2014:71;:::i;:::-;1870:222;;;;:::o;2098:180::-;2146:77;2143:1;2136:88;2243:4;2240:1;2233:15;2267:4;2264:1;2257:15;2284:320;2328:6;2365:1;2359:4;2355:12;2345:22;;2412:1;2406:4;2402:12;2433:18;2423:81;;2489:4;2481:6;2477:17;2467:27;;2423:81;2551:2;2543:6;2540:14;2520:18;2517:38;2514:84;;2570:18;;:::i;:::-;2514:84;2335:269;2284:320;;;:::o;188:147:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_234":{"entryPoint":2106,"id":234,"parameterSlots":0,"returnSlots":0},"@_add_4032":{"entryPoint":5473,"id":4032,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1509":{"entryPoint":4113,"id":1509,"parameterSlots":3,"returnSlots":0},"@_approve_1444":{"entryPoint":2601,"id":1444,"parameterSlots":3,"returnSlots":0},"@_at_4166":{"entryPoint":4796,"id":4166,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_1498":{"entryPoint":4108,"id":1498,"parameterSlots":3,"returnSlots":0},"@_checkRole_299":{"entryPoint":3831,"id":299,"parameterSlots":1,"returnSlots":0},"@_checkRole_338":{"entryPoint":4118,"id":338,"parameterSlots":2,"returnSlots":0},"@_contains_4135":{"entryPoint":5861,"id":4135,"parameterSlots":2,"returnSlots":1},"@_grantRole_490":{"entryPoint":4251,"id":490,"parameterSlots":2,"returnSlots":0},"@_grantRole_622":{"entryPoint":3851,"id":622,"parameterSlots":2,"returnSlots":0},"@_length_4149":{"entryPoint":4839,"id":4149,"parameterSlots":1,"returnSlots":1},"@_msgSender_2367":{"entryPoint":2593,"id":2367,"parameterSlots":0,"returnSlots":1},"@_remove_4116":{"entryPoint":5585,"id":4116,"parameterSlots":2,"returnSlots":1},"@_revokeRole_521":{"entryPoint":4523,"id":521,"parameterSlots":2,"returnSlots":0},"@_revokeRole_646":{"entryPoint":3903,"id":646,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1487":{"entryPoint":3058,"id":1487,"parameterSlots":3,"returnSlots":0},"@_transfer_1270":{"entryPoint":3198,"id":1270,"parameterSlots":3,"returnSlots":0},"@add_4332":{"entryPoint":4475,"id":4332,"parameterSlots":2,"returnSlots":1},"@allowance_1065":{"entryPoint":2336,"id":1065,"parameterSlots":2,"returnSlots":1},"@approve_1090":{"entryPoint":1383,"id":1090,"parameterSlots":2,"returnSlots":1},"@at_4428":{"entryPoint":3955,"id":4428,"parameterSlots":2,"returnSlots":1},"@balanceOf_1022":{"entryPoint":1734,"id":1022,"parameterSlots":1,"returnSlots":1},"@decimals_998":{"entryPoint":1539,"id":998,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1193":{"entryPoint":2113,"id":1193,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_353":{"entryPoint":1475,"id":353,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_598":{"entryPoint":2267,"id":598,"parameterSlots":1,"returnSlots":1},"@getRoleMember_582":{"entryPoint":1807,"id":582,"parameterSlots":2,"returnSlots":1},"@grantRole_373":{"entryPoint":1506,"id":373,"parameterSlots":2,"returnSlots":0},"@hasRole_286":{"entryPoint":1854,"id":286,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1152":{"entryPoint":1679,"id":1152,"parameterSlots":2,"returnSlots":1},"@length_4401":{"entryPoint":3981,"id":4401,"parameterSlots":1,"returnSlots":1},"@name_978":{"entryPoint":1237,"id":978,"parameterSlots":0,"returnSlots":1},"@remove_4359":{"entryPoint":4748,"id":4359,"parameterSlots":2,"returnSlots":1},"@renounceRole_416":{"entryPoint":1548,"id":416,"parameterSlots":2,"returnSlots":0},"@revokeRole_393":{"entryPoint":2303,"id":393,"parameterSlots":2,"returnSlots":0},"@supportsInterface_267":{"entryPoint":2471,"id":267,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2995":{"entryPoint":4002,"id":2995,"parameterSlots":1,"returnSlots":1},"@supportsInterface_563":{"entryPoint":1115,"id":563,"parameterSlots":1,"returnSlots":1},"@symbol_988":{"entryPoint":1960,"id":988,"parameterSlots":0,"returnSlots":1},"@toHexString_2560":{"entryPoint":4901,"id":2560,"parameterSlots":2,"returnSlots":1},"@toHexString_2580":{"entryPoint":4856,"id":2580,"parameterSlots":1,"returnSlots":1},"@totalSupply_1008":{"entryPoint":1418,"id":1008,"parameterSlots":0,"returnSlots":1},"@transferFrom_1123":{"entryPoint":1428,"id":1123,"parameterSlots":3,"returnSlots":1},"@transfer_1047":{"entryPoint":2232,"id":1047,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7023,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6529,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6423,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":6666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6753,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":6917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6981,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6046,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6711,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":8982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":8233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":7833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":7941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":8379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":8087,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":7687,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":7541,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":7262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8658,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9017,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7868,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8122,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7576,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6845,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6088,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6099,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8446,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7376,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8763,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9049,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6034,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6612,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5901,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6817,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":6116,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":8900,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7134,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7329,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7087,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":9101,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8716,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8853,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5896,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6167,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":8941,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":8154,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":7754,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":7900,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":8300,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":8008,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":7608,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":8457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":7462,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":8582,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":7183,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6325,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6622,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5945,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6379,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22959:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1847:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:25"},"nodeType":"YulFunctionCall","src":"1947:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:25"},"nodeType":"YulFunctionCall","src":"1966:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:25"},"nodeType":"YulFunctionCall","src":"1960:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:25"},"nodeType":"YulFunctionCall","src":"1940:39:25"},"nodeType":"YulExpressionStatement","src":"1940:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:25"},"nodeType":"YulFunctionCall","src":"1884:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:25","statements":[{"nodeType":"YulAssignment","src":"1900:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:25","statements":[]},"src":"1876:113:25"},{"body":{"nodeType":"YulBlock","src":"2023:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:25"},"nodeType":"YulFunctionCall","src":"2069:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:25"},"nodeType":"YulFunctionCall","src":"2062:27:25"},"nodeType":"YulExpressionStatement","src":"2062:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:25"},"nodeType":"YulFunctionCall","src":"2001:13:25"},"nodeType":"YulIf","src":"1998:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:25","type":""}],"src":"1798:307:25"},{"body":{"nodeType":"YulBlock","src":"2159:54:25","statements":[{"nodeType":"YulAssignment","src":"2169:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:25"},"nodeType":"YulFunctionCall","src":"2183:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:25"},"nodeType":"YulFunctionCall","src":"2199:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:25"},"nodeType":"YulFunctionCall","src":"2179:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:25","type":""}],"src":"2111:102:25"},{"body":{"nodeType":"YulBlock","src":"2311:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:25"},"nodeType":"YulFunctionCall","src":"2335:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:25"},"nodeType":"YulFunctionCall","src":"2390:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:25"},"nodeType":"YulFunctionCall","src":"2470:52:25"},"nodeType":"YulExpressionStatement","src":"2470:52:25"},{"nodeType":"YulAssignment","src":"2531:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:25"},"nodeType":"YulFunctionCall","src":"2547:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:25"},"nodeType":"YulFunctionCall","src":"2538:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:25","type":""}],"src":"2219:364:25"},{"body":{"nodeType":"YulBlock","src":"2707:195:25","statements":[{"nodeType":"YulAssignment","src":"2717:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:25"},"nodeType":"YulFunctionCall","src":"2725:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:25"},"nodeType":"YulFunctionCall","src":"2760:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:25"},"nodeType":"YulFunctionCall","src":"2779:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:25"},"nodeType":"YulFunctionCall","src":"2753:47:25"},"nodeType":"YulExpressionStatement","src":"2753:47:25"},{"nodeType":"YulAssignment","src":"2809:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:25"},"nodeType":"YulFunctionCall","src":"2817:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:25","type":""}],"src":"2589:313:25"},{"body":{"nodeType":"YulBlock","src":"2953:81:25","statements":[{"nodeType":"YulAssignment","src":"2963:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2985:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2974:3:25"},"nodeType":"YulFunctionCall","src":"2974:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:25","type":""}],"src":"2908:126:25"},{"body":{"nodeType":"YulBlock","src":"3085:51:25","statements":[{"nodeType":"YulAssignment","src":"3095:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3124:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3106:17:25"},"nodeType":"YulFunctionCall","src":"3106:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3095:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3067:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3077:7:25","type":""}],"src":"3040:96:25"},{"body":{"nodeType":"YulBlock","src":"3185:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3242:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3251:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3254:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3244:6:25"},"nodeType":"YulFunctionCall","src":"3244:12:25"},"nodeType":"YulExpressionStatement","src":"3244:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3208:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3233:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3215:17:25"},"nodeType":"YulFunctionCall","src":"3215:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3205:2:25"},"nodeType":"YulFunctionCall","src":"3205:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3198:6:25"},"nodeType":"YulFunctionCall","src":"3198:43:25"},"nodeType":"YulIf","src":"3195:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3178:5:25","type":""}],"src":"3142:122:25"},{"body":{"nodeType":"YulBlock","src":"3322:87:25","statements":[{"nodeType":"YulAssignment","src":"3332:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3354:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3341:12:25"},"nodeType":"YulFunctionCall","src":"3341:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3332:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3397:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3370:26:25"},"nodeType":"YulFunctionCall","src":"3370:33:25"},"nodeType":"YulExpressionStatement","src":"3370:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3300:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3308:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3316:5:25","type":""}],"src":"3270:139:25"},{"body":{"nodeType":"YulBlock","src":"3460:32:25","statements":[{"nodeType":"YulAssignment","src":"3470:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3481:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3470:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3442:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3452:7:25","type":""}],"src":"3415:77:25"},{"body":{"nodeType":"YulBlock","src":"3541:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3598:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3607:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3610:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3600:6:25"},"nodeType":"YulFunctionCall","src":"3600:12:25"},"nodeType":"YulExpressionStatement","src":"3600:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3564:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3589:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3571:17:25"},"nodeType":"YulFunctionCall","src":"3571:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3561:2:25"},"nodeType":"YulFunctionCall","src":"3561:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3554:6:25"},"nodeType":"YulFunctionCall","src":"3554:43:25"},"nodeType":"YulIf","src":"3551:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3534:5:25","type":""}],"src":"3498:122:25"},{"body":{"nodeType":"YulBlock","src":"3678:87:25","statements":[{"nodeType":"YulAssignment","src":"3688:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3710:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3697:12:25"},"nodeType":"YulFunctionCall","src":"3697:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3688:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3753:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3726:26:25"},"nodeType":"YulFunctionCall","src":"3726:33:25"},"nodeType":"YulExpressionStatement","src":"3726:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3656:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3664:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3672:5:25","type":""}],"src":"3626:139:25"},{"body":{"nodeType":"YulBlock","src":"3854:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"3900:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3902:77:25"},"nodeType":"YulFunctionCall","src":"3902:79:25"},"nodeType":"YulExpressionStatement","src":"3902:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3875:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3884:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3871:3:25"},"nodeType":"YulFunctionCall","src":"3871:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3896:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3867:3:25"},"nodeType":"YulFunctionCall","src":"3867:32:25"},"nodeType":"YulIf","src":"3864:119:25"},{"nodeType":"YulBlock","src":"3993:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4008:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4022:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4012:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4037:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4072:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4083:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4068:3:25"},"nodeType":"YulFunctionCall","src":"4068:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4092:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4047:20:25"},"nodeType":"YulFunctionCall","src":"4047:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4037:6:25"}]}]},{"nodeType":"YulBlock","src":"4120:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4135:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4149:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4139:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4165:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:25"},"nodeType":"YulFunctionCall","src":"4196:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4175:20:25"},"nodeType":"YulFunctionCall","src":"4175:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4165:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3816:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3827:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3839:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3847:6:25","type":""}],"src":"3771:474:25"},{"body":{"nodeType":"YulBlock","src":"4316:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4333:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4356:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4338:17:25"},"nodeType":"YulFunctionCall","src":"4338:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4326:6:25"},"nodeType":"YulFunctionCall","src":"4326:37:25"},"nodeType":"YulExpressionStatement","src":"4326:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4304:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4311:3:25","type":""}],"src":"4251:118:25"},{"body":{"nodeType":"YulBlock","src":"4473:124:25","statements":[{"nodeType":"YulAssignment","src":"4483:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4495:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4506:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4491:3:25"},"nodeType":"YulFunctionCall","src":"4491:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4483:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4563:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4576:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4587:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4572:3:25"},"nodeType":"YulFunctionCall","src":"4572:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4519:43:25"},"nodeType":"YulFunctionCall","src":"4519:71:25"},"nodeType":"YulExpressionStatement","src":"4519:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4445:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4457:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4468:4:25","type":""}],"src":"4375:222:25"},{"body":{"nodeType":"YulBlock","src":"4703:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"4749:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4751:77:25"},"nodeType":"YulFunctionCall","src":"4751:79:25"},"nodeType":"YulExpressionStatement","src":"4751:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4724:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4720:3:25"},"nodeType":"YulFunctionCall","src":"4720:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4745:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4716:3:25"},"nodeType":"YulFunctionCall","src":"4716:32:25"},"nodeType":"YulIf","src":"4713:119:25"},{"nodeType":"YulBlock","src":"4842:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4857:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4871:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4861:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4886:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4921:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4932:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4917:3:25"},"nodeType":"YulFunctionCall","src":"4917:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4941:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4896:20:25"},"nodeType":"YulFunctionCall","src":"4896:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4886:6:25"}]}]},{"nodeType":"YulBlock","src":"4969:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4984:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4998:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4988:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5014:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5060:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5045:3:25"},"nodeType":"YulFunctionCall","src":"5045:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5069:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5024:20:25"},"nodeType":"YulFunctionCall","src":"5024:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5014:6:25"}]}]},{"nodeType":"YulBlock","src":"5097:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5112:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5126:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5116:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5142:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5177:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5188:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5173:3:25"},"nodeType":"YulFunctionCall","src":"5173:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5197:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5152:20:25"},"nodeType":"YulFunctionCall","src":"5152:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5142:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4657:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4668:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4680:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4688:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4696:6:25","type":""}],"src":"4603:619:25"},{"body":{"nodeType":"YulBlock","src":"5273:32:25","statements":[{"nodeType":"YulAssignment","src":"5283:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"5294:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5283:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5255:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5265:7:25","type":""}],"src":"5228:77:25"},{"body":{"nodeType":"YulBlock","src":"5354:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"5411:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5420:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5423:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5413:6:25"},"nodeType":"YulFunctionCall","src":"5413:12:25"},"nodeType":"YulExpressionStatement","src":"5413:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5377:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5402:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5384:17:25"},"nodeType":"YulFunctionCall","src":"5384:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5374:2:25"},"nodeType":"YulFunctionCall","src":"5374:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5367:6:25"},"nodeType":"YulFunctionCall","src":"5367:43:25"},"nodeType":"YulIf","src":"5364:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5347:5:25","type":""}],"src":"5311:122:25"},{"body":{"nodeType":"YulBlock","src":"5491:87:25","statements":[{"nodeType":"YulAssignment","src":"5501:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5510:12:25"},"nodeType":"YulFunctionCall","src":"5510:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5501:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5566:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5539:26:25"},"nodeType":"YulFunctionCall","src":"5539:33:25"},"nodeType":"YulExpressionStatement","src":"5539:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5469:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5477:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5485:5:25","type":""}],"src":"5439:139:25"},{"body":{"nodeType":"YulBlock","src":"5650:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5696:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5698:77:25"},"nodeType":"YulFunctionCall","src":"5698:79:25"},"nodeType":"YulExpressionStatement","src":"5698:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5671:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5680:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:25"},"nodeType":"YulFunctionCall","src":"5667:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5692:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5663:3:25"},"nodeType":"YulFunctionCall","src":"5663:32:25"},"nodeType":"YulIf","src":"5660:119:25"},{"nodeType":"YulBlock","src":"5789:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5804:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5818:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5808:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5833:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5868:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5879:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5864:3:25"},"nodeType":"YulFunctionCall","src":"5864:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5888:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5843:20:25"},"nodeType":"YulFunctionCall","src":"5843:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5833:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5620:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5631:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5643:6:25","type":""}],"src":"5584:329:25"},{"body":{"nodeType":"YulBlock","src":"5984:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6001:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6024:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6006:17:25"},"nodeType":"YulFunctionCall","src":"6006:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5994:6:25"},"nodeType":"YulFunctionCall","src":"5994:37:25"},"nodeType":"YulExpressionStatement","src":"5994:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5972:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5979:3:25","type":""}],"src":"5919:118:25"},{"body":{"nodeType":"YulBlock","src":"6141:124:25","statements":[{"nodeType":"YulAssignment","src":"6151:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6174:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:25"},"nodeType":"YulFunctionCall","src":"6159:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6151:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6231:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6244:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6255:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6240:3:25"},"nodeType":"YulFunctionCall","src":"6240:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6187:43:25"},"nodeType":"YulFunctionCall","src":"6187:71:25"},"nodeType":"YulExpressionStatement","src":"6187:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6113:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6125:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6136:4:25","type":""}],"src":"6043:222:25"},{"body":{"nodeType":"YulBlock","src":"6354:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"6400:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6402:77:25"},"nodeType":"YulFunctionCall","src":"6402:79:25"},"nodeType":"YulExpressionStatement","src":"6402:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6375:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6384:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6371:3:25"},"nodeType":"YulFunctionCall","src":"6371:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6396:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6367:3:25"},"nodeType":"YulFunctionCall","src":"6367:32:25"},"nodeType":"YulIf","src":"6364:119:25"},{"nodeType":"YulBlock","src":"6493:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6508:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6522:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6512:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6537:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6583:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:25"},"nodeType":"YulFunctionCall","src":"6568:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6592:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6547:20:25"},"nodeType":"YulFunctionCall","src":"6547:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6537:6:25"}]}]},{"nodeType":"YulBlock","src":"6620:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6635:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6649:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6639:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6665:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6700:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6711:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6696:3:25"},"nodeType":"YulFunctionCall","src":"6696:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6720:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6675:20:25"},"nodeType":"YulFunctionCall","src":"6675:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6665:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6316:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6327:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6339:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6347:6:25","type":""}],"src":"6271:474:25"},{"body":{"nodeType":"YulBlock","src":"6794:43:25","statements":[{"nodeType":"YulAssignment","src":"6804:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6819:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6826:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6815:3:25"},"nodeType":"YulFunctionCall","src":"6815:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6804:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6776:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6786:7:25","type":""}],"src":"6751:86:25"},{"body":{"nodeType":"YulBlock","src":"6904:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6921:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6942:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6926:15:25"},"nodeType":"YulFunctionCall","src":"6926:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6914:6:25"},"nodeType":"YulFunctionCall","src":"6914:35:25"},"nodeType":"YulExpressionStatement","src":"6914:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6892:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6899:3:25","type":""}],"src":"6843:112:25"},{"body":{"nodeType":"YulBlock","src":"7055:120:25","statements":[{"nodeType":"YulAssignment","src":"7065:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7088:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7073:3:25"},"nodeType":"YulFunctionCall","src":"7073:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7065:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7141:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7154:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7165:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7150:3:25"},"nodeType":"YulFunctionCall","src":"7150:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7101:39:25"},"nodeType":"YulFunctionCall","src":"7101:67:25"},"nodeType":"YulExpressionStatement","src":"7101:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7027:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7039:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7050:4:25","type":""}],"src":"6961:214:25"},{"body":{"nodeType":"YulBlock","src":"7247:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"7293:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7295:77:25"},"nodeType":"YulFunctionCall","src":"7295:79:25"},"nodeType":"YulExpressionStatement","src":"7295:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7268:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7277:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7264:3:25"},"nodeType":"YulFunctionCall","src":"7264:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7289:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7260:3:25"},"nodeType":"YulFunctionCall","src":"7260:32:25"},"nodeType":"YulIf","src":"7257:119:25"},{"nodeType":"YulBlock","src":"7386:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7401:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7415:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7405:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7430:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7476:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:25"},"nodeType":"YulFunctionCall","src":"7461:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7485:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7440:20:25"},"nodeType":"YulFunctionCall","src":"7440:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7430:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7217:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7228:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7240:6:25","type":""}],"src":"7181:329:25"},{"body":{"nodeType":"YulBlock","src":"7599:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"7645:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7647:77:25"},"nodeType":"YulFunctionCall","src":"7647:79:25"},"nodeType":"YulExpressionStatement","src":"7647:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7620:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7629:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7616:3:25"},"nodeType":"YulFunctionCall","src":"7616:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7641:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7612:3:25"},"nodeType":"YulFunctionCall","src":"7612:32:25"},"nodeType":"YulIf","src":"7609:119:25"},{"nodeType":"YulBlock","src":"7738:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7753:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7767:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7757:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7782:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7817:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7828:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7813:3:25"},"nodeType":"YulFunctionCall","src":"7813:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7837:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7792:20:25"},"nodeType":"YulFunctionCall","src":"7792:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7782:6:25"}]}]},{"nodeType":"YulBlock","src":"7865:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7880:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7894:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7884:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7910:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7945:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7956:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7941:3:25"},"nodeType":"YulFunctionCall","src":"7941:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7965:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7920:20:25"},"nodeType":"YulFunctionCall","src":"7920:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7910:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7561:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7572:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7584:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7592:6:25","type":""}],"src":"7516:474:25"},{"body":{"nodeType":"YulBlock","src":"8061:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8078:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8101:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8083:17:25"},"nodeType":"YulFunctionCall","src":"8083:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8071:6:25"},"nodeType":"YulFunctionCall","src":"8071:37:25"},"nodeType":"YulExpressionStatement","src":"8071:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8049:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8056:3:25","type":""}],"src":"7996:118:25"},{"body":{"nodeType":"YulBlock","src":"8218:124:25","statements":[{"nodeType":"YulAssignment","src":"8228:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8240:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8251:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8236:3:25"},"nodeType":"YulFunctionCall","src":"8236:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8228:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8308:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8321:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8332:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8317:3:25"},"nodeType":"YulFunctionCall","src":"8317:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8264:43:25"},"nodeType":"YulFunctionCall","src":"8264:71:25"},"nodeType":"YulExpressionStatement","src":"8264:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8190:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8202:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8213:4:25","type":""}],"src":"8120:222:25"},{"body":{"nodeType":"YulBlock","src":"8431:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"8477:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8479:77:25"},"nodeType":"YulFunctionCall","src":"8479:79:25"},"nodeType":"YulExpressionStatement","src":"8479:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8452:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8461:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8448:3:25"},"nodeType":"YulFunctionCall","src":"8448:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8473:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8444:3:25"},"nodeType":"YulFunctionCall","src":"8444:32:25"},"nodeType":"YulIf","src":"8441:119:25"},{"nodeType":"YulBlock","src":"8570:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8585:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8599:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8589:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8614:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8649:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8660:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8645:3:25"},"nodeType":"YulFunctionCall","src":"8645:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8669:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8624:20:25"},"nodeType":"YulFunctionCall","src":"8624:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8614:6:25"}]}]},{"nodeType":"YulBlock","src":"8697:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8712:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8726:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8716:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8742:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8777:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8788:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8773:3:25"},"nodeType":"YulFunctionCall","src":"8773:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8797:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8752:20:25"},"nodeType":"YulFunctionCall","src":"8752:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8742:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8393:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8404:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8416:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8424:6:25","type":""}],"src":"8348:474:25"},{"body":{"nodeType":"YulBlock","src":"8856:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8873:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8876:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8866:6:25"},"nodeType":"YulFunctionCall","src":"8866:88:25"},"nodeType":"YulExpressionStatement","src":"8866:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8970:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8973:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:25"},"nodeType":"YulFunctionCall","src":"8963:15:25"},"nodeType":"YulExpressionStatement","src":"8963:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8994:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8997:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8987:6:25"},"nodeType":"YulFunctionCall","src":"8987:15:25"},"nodeType":"YulExpressionStatement","src":"8987:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8828:180:25"},{"body":{"nodeType":"YulBlock","src":"9065:269:25","statements":[{"nodeType":"YulAssignment","src":"9075:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9089:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"9095:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9085:3:25"},"nodeType":"YulFunctionCall","src":"9085:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9075:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"9106:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9136:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"9142:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9132:3:25"},"nodeType":"YulFunctionCall","src":"9132:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9110:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9183:51:25","statements":[{"nodeType":"YulAssignment","src":"9197:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9211:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9219:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9207:3:25"},"nodeType":"YulFunctionCall","src":"9207:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9197:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9163:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9156:6:25"},"nodeType":"YulFunctionCall","src":"9156:26:25"},"nodeType":"YulIf","src":"9153:81:25"},{"body":{"nodeType":"YulBlock","src":"9286:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"9300:16:25"},"nodeType":"YulFunctionCall","src":"9300:18:25"},"nodeType":"YulExpressionStatement","src":"9300:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9250:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9273:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9281:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9270:2:25"},"nodeType":"YulFunctionCall","src":"9270:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9247:2:25"},"nodeType":"YulFunctionCall","src":"9247:38:25"},"nodeType":"YulIf","src":"9244:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9049:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9058:6:25","type":""}],"src":"9014:320:25"},{"body":{"nodeType":"YulBlock","src":"9446:128:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9468:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9476:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9464:3:25"},"nodeType":"YulFunctionCall","src":"9464:14:25"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"9480:34:25","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9457:6:25"},"nodeType":"YulFunctionCall","src":"9457:58:25"},"nodeType":"YulExpressionStatement","src":"9457:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9536:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9544:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9532:3:25"},"nodeType":"YulFunctionCall","src":"9532:15:25"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"9549:17:25","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9525:6:25"},"nodeType":"YulFunctionCall","src":"9525:42:25"},"nodeType":"YulExpressionStatement","src":"9525:42:25"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9438:6:25","type":""}],"src":"9340:234:25"},{"body":{"nodeType":"YulBlock","src":"9726:220:25","statements":[{"nodeType":"YulAssignment","src":"9736:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9802:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9807:2:25","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9743:58:25"},"nodeType":"YulFunctionCall","src":"9743:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9736:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9908:3:25"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"9819:88:25"},"nodeType":"YulFunctionCall","src":"9819:93:25"},"nodeType":"YulExpressionStatement","src":"9819:93:25"},{"nodeType":"YulAssignment","src":"9921:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9932:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9937:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9928:3:25"},"nodeType":"YulFunctionCall","src":"9928:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9921:3:25"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9714:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9722:3:25","type":""}],"src":"9580:366:25"},{"body":{"nodeType":"YulBlock","src":"10123:248:25","statements":[{"nodeType":"YulAssignment","src":"10133:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10145:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10156:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10141:3:25"},"nodeType":"YulFunctionCall","src":"10141:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10133:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10180:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10191:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10176:3:25"},"nodeType":"YulFunctionCall","src":"10176:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10199:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10205:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10195:3:25"},"nodeType":"YulFunctionCall","src":"10195:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10169:6:25"},"nodeType":"YulFunctionCall","src":"10169:47:25"},"nodeType":"YulExpressionStatement","src":"10169:47:25"},{"nodeType":"YulAssignment","src":"10225:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10359:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10233:124:25"},"nodeType":"YulFunctionCall","src":"10233:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10225:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10103:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10118:4:25","type":""}],"src":"9952:419:25"},{"body":{"nodeType":"YulBlock","src":"10405:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10422:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10425:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10415:6:25"},"nodeType":"YulFunctionCall","src":"10415:88:25"},"nodeType":"YulExpressionStatement","src":"10415:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10519:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10522:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10512:6:25"},"nodeType":"YulFunctionCall","src":"10512:15:25"},"nodeType":"YulExpressionStatement","src":"10512:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10543:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10546:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10536:6:25"},"nodeType":"YulFunctionCall","src":"10536:15:25"},"nodeType":"YulExpressionStatement","src":"10536:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10377:180:25"},{"body":{"nodeType":"YulBlock","src":"10607:261:25","statements":[{"nodeType":"YulAssignment","src":"10617:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10640:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10622:17:25"},"nodeType":"YulFunctionCall","src":"10622:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10617:1:25"}]},{"nodeType":"YulAssignment","src":"10651:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10674:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10656:17:25"},"nodeType":"YulFunctionCall","src":"10656:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10651:1:25"}]},{"body":{"nodeType":"YulBlock","src":"10814:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10816:16:25"},"nodeType":"YulFunctionCall","src":"10816:18:25"},"nodeType":"YulExpressionStatement","src":"10816:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10735:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10742:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"10810:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10738:3:25"},"nodeType":"YulFunctionCall","src":"10738:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10732:2:25"},"nodeType":"YulFunctionCall","src":"10732:81:25"},"nodeType":"YulIf","src":"10729:107:25"},{"nodeType":"YulAssignment","src":"10846:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10857:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"10860:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10853:3:25"},"nodeType":"YulFunctionCall","src":"10853:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10846:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10594:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"10597:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10603:3:25","type":""}],"src":"10563:305:25"},{"body":{"nodeType":"YulBlock","src":"10980:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11002:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11010:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10998:3:25"},"nodeType":"YulFunctionCall","src":"10998:14:25"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"11014:34:25","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10991:6:25"},"nodeType":"YulFunctionCall","src":"10991:58:25"},"nodeType":"YulExpressionStatement","src":"10991:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11070:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11078:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:25"},"nodeType":"YulFunctionCall","src":"11066:15:25"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"11083:7:25","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11059:6:25"},"nodeType":"YulFunctionCall","src":"11059:32:25"},"nodeType":"YulExpressionStatement","src":"11059:32:25"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10972:6:25","type":""}],"src":"10874:224:25"},{"body":{"nodeType":"YulBlock","src":"11250:220:25","statements":[{"nodeType":"YulAssignment","src":"11260:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11326:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11331:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11267:58:25"},"nodeType":"YulFunctionCall","src":"11267:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11260:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11432:3:25"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"11343:88:25"},"nodeType":"YulFunctionCall","src":"11343:93:25"},"nodeType":"YulExpressionStatement","src":"11343:93:25"},{"nodeType":"YulAssignment","src":"11445:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11456:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11461:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11452:3:25"},"nodeType":"YulFunctionCall","src":"11452:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11445:3:25"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11238:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11246:3:25","type":""}],"src":"11104:366:25"},{"body":{"nodeType":"YulBlock","src":"11647:248:25","statements":[{"nodeType":"YulAssignment","src":"11657:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11669:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11680:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11665:3:25"},"nodeType":"YulFunctionCall","src":"11665:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11657:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11704:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11715:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11700:3:25"},"nodeType":"YulFunctionCall","src":"11700:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11723:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11729:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11719:3:25"},"nodeType":"YulFunctionCall","src":"11719:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11693:6:25"},"nodeType":"YulFunctionCall","src":"11693:47:25"},"nodeType":"YulExpressionStatement","src":"11693:47:25"},{"nodeType":"YulAssignment","src":"11749:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11883:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11757:124:25"},"nodeType":"YulFunctionCall","src":"11757:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11749:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11627:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11642:4:25","type":""}],"src":"11476:419:25"},{"body":{"nodeType":"YulBlock","src":"12007:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12029:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12037:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:25"},"nodeType":"YulFunctionCall","src":"12025:14:25"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"12041:34:25","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12018:6:25"},"nodeType":"YulFunctionCall","src":"12018:58:25"},"nodeType":"YulExpressionStatement","src":"12018:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12097:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12093:3:25"},"nodeType":"YulFunctionCall","src":"12093:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"12110:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12086:6:25"},"nodeType":"YulFunctionCall","src":"12086:31:25"},"nodeType":"YulExpressionStatement","src":"12086:31:25"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11999:6:25","type":""}],"src":"11901:223:25"},{"body":{"nodeType":"YulBlock","src":"12276:220:25","statements":[{"nodeType":"YulAssignment","src":"12286:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12352:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12357:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12293:58:25"},"nodeType":"YulFunctionCall","src":"12293:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12286:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12458:3:25"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"12369:88:25"},"nodeType":"YulFunctionCall","src":"12369:93:25"},"nodeType":"YulExpressionStatement","src":"12369:93:25"},{"nodeType":"YulAssignment","src":"12471:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12482:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12487:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12478:3:25"},"nodeType":"YulFunctionCall","src":"12478:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12471:3:25"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12264:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12272:3:25","type":""}],"src":"12130:366:25"},{"body":{"nodeType":"YulBlock","src":"12673:248:25","statements":[{"nodeType":"YulAssignment","src":"12683:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12695:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12706:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12691:3:25"},"nodeType":"YulFunctionCall","src":"12691:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12683:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12730:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12741:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12726:3:25"},"nodeType":"YulFunctionCall","src":"12726:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12749:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12755:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12745:3:25"},"nodeType":"YulFunctionCall","src":"12745:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12719:6:25"},"nodeType":"YulFunctionCall","src":"12719:47:25"},"nodeType":"YulExpressionStatement","src":"12719:47:25"},{"nodeType":"YulAssignment","src":"12775:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12909:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12783:124:25"},"nodeType":"YulFunctionCall","src":"12783:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12775:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12653:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12668:4:25","type":""}],"src":"12502:419:25"},{"body":{"nodeType":"YulBlock","src":"13033:115:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13055:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13063:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13051:3:25"},"nodeType":"YulFunctionCall","src":"13051:14:25"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"13067:34:25","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13044:6:25"},"nodeType":"YulFunctionCall","src":"13044:58:25"},"nodeType":"YulExpressionStatement","src":"13044:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13123:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13131:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13119:3:25"},"nodeType":"YulFunctionCall","src":"13119:15:25"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"13136:4:25","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13112:6:25"},"nodeType":"YulFunctionCall","src":"13112:29:25"},"nodeType":"YulExpressionStatement","src":"13112:29:25"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13025:6:25","type":""}],"src":"12927:221:25"},{"body":{"nodeType":"YulBlock","src":"13300:220:25","statements":[{"nodeType":"YulAssignment","src":"13310:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13376:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13381:2:25","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13317:58:25"},"nodeType":"YulFunctionCall","src":"13317:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13310:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13482:3:25"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"13393:88:25"},"nodeType":"YulFunctionCall","src":"13393:93:25"},"nodeType":"YulExpressionStatement","src":"13393:93:25"},{"nodeType":"YulAssignment","src":"13495:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13506:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13511:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:25"},"nodeType":"YulFunctionCall","src":"13502:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13495:3:25"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13288:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13296:3:25","type":""}],"src":"13154:366:25"},{"body":{"nodeType":"YulBlock","src":"13697:248:25","statements":[{"nodeType":"YulAssignment","src":"13707:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13719:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13730:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13715:3:25"},"nodeType":"YulFunctionCall","src":"13715:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13707:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13754:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13765:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13750:3:25"},"nodeType":"YulFunctionCall","src":"13750:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13773:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13779:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13769:3:25"},"nodeType":"YulFunctionCall","src":"13769:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13743:6:25"},"nodeType":"YulFunctionCall","src":"13743:47:25"},"nodeType":"YulExpressionStatement","src":"13743:47:25"},{"nodeType":"YulAssignment","src":"13799:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13933:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13807:124:25"},"nodeType":"YulFunctionCall","src":"13807:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13799:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13677:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13692:4:25","type":""}],"src":"13526:419:25"},{"body":{"nodeType":"YulBlock","src":"14057:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14079:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14087:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14075:3:25"},"nodeType":"YulFunctionCall","src":"14075:14:25"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"14091:31:25","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14068:6:25"},"nodeType":"YulFunctionCall","src":"14068:55:25"},"nodeType":"YulExpressionStatement","src":"14068:55:25"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14049:6:25","type":""}],"src":"13951:179:25"},{"body":{"nodeType":"YulBlock","src":"14282:220:25","statements":[{"nodeType":"YulAssignment","src":"14292:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14358:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14363:2:25","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14299:58:25"},"nodeType":"YulFunctionCall","src":"14299:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14292:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14464:3:25"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"14375:88:25"},"nodeType":"YulFunctionCall","src":"14375:93:25"},"nodeType":"YulExpressionStatement","src":"14375:93:25"},{"nodeType":"YulAssignment","src":"14477:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14488:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14493:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14484:3:25"},"nodeType":"YulFunctionCall","src":"14484:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14477:3:25"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14270:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14278:3:25","type":""}],"src":"14136:366:25"},{"body":{"nodeType":"YulBlock","src":"14679:248:25","statements":[{"nodeType":"YulAssignment","src":"14689:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14701:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14712:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14697:3:25"},"nodeType":"YulFunctionCall","src":"14697:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14689:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14736:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14747:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14732:3:25"},"nodeType":"YulFunctionCall","src":"14732:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14755:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14761:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14751:3:25"},"nodeType":"YulFunctionCall","src":"14751:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14725:6:25"},"nodeType":"YulFunctionCall","src":"14725:47:25"},"nodeType":"YulExpressionStatement","src":"14725:47:25"},{"nodeType":"YulAssignment","src":"14781:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14915:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14789:124:25"},"nodeType":"YulFunctionCall","src":"14789:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14781:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14659:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14674:4:25","type":""}],"src":"14508:419:25"},{"body":{"nodeType":"YulBlock","src":"15039:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15061:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15069:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15057:3:25"},"nodeType":"YulFunctionCall","src":"15057:14:25"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"15073:34:25","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15050:6:25"},"nodeType":"YulFunctionCall","src":"15050:58:25"},"nodeType":"YulExpressionStatement","src":"15050:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15129:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15137:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15125:3:25"},"nodeType":"YulFunctionCall","src":"15125:15:25"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"15142:7:25","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15118:6:25"},"nodeType":"YulFunctionCall","src":"15118:32:25"},"nodeType":"YulExpressionStatement","src":"15118:32:25"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15031:6:25","type":""}],"src":"14933:224:25"},{"body":{"nodeType":"YulBlock","src":"15309:220:25","statements":[{"nodeType":"YulAssignment","src":"15319:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15385:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15390:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15326:58:25"},"nodeType":"YulFunctionCall","src":"15326:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15319:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15491:3:25"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"15402:88:25"},"nodeType":"YulFunctionCall","src":"15402:93:25"},"nodeType":"YulExpressionStatement","src":"15402:93:25"},{"nodeType":"YulAssignment","src":"15504:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15515:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15520:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15511:3:25"},"nodeType":"YulFunctionCall","src":"15511:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15504:3:25"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15297:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15305:3:25","type":""}],"src":"15163:366:25"},{"body":{"nodeType":"YulBlock","src":"15706:248:25","statements":[{"nodeType":"YulAssignment","src":"15716:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15728:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15739:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15724:3:25"},"nodeType":"YulFunctionCall","src":"15724:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15716:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15763:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15774:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15759:3:25"},"nodeType":"YulFunctionCall","src":"15759:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15782:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15788:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15778:3:25"},"nodeType":"YulFunctionCall","src":"15778:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15752:6:25"},"nodeType":"YulFunctionCall","src":"15752:47:25"},"nodeType":"YulExpressionStatement","src":"15752:47:25"},{"nodeType":"YulAssignment","src":"15808:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15942:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15816:124:25"},"nodeType":"YulFunctionCall","src":"15816:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15808:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15686:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15701:4:25","type":""}],"src":"15535:419:25"},{"body":{"nodeType":"YulBlock","src":"16066:116:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16088:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16096:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16084:3:25"},"nodeType":"YulFunctionCall","src":"16084:14:25"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"16100:34:25","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16077:6:25"},"nodeType":"YulFunctionCall","src":"16077:58:25"},"nodeType":"YulExpressionStatement","src":"16077:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16156:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16164:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16152:3:25"},"nodeType":"YulFunctionCall","src":"16152:15:25"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"16169:5:25","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16145:6:25"},"nodeType":"YulFunctionCall","src":"16145:30:25"},"nodeType":"YulExpressionStatement","src":"16145:30:25"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16058:6:25","type":""}],"src":"15960:222:25"},{"body":{"nodeType":"YulBlock","src":"16334:220:25","statements":[{"nodeType":"YulAssignment","src":"16344:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16410:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16415:2:25","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16351:58:25"},"nodeType":"YulFunctionCall","src":"16351:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16344:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16516:3:25"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"16427:88:25"},"nodeType":"YulFunctionCall","src":"16427:93:25"},"nodeType":"YulExpressionStatement","src":"16427:93:25"},{"nodeType":"YulAssignment","src":"16529:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16540:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16545:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16536:3:25"},"nodeType":"YulFunctionCall","src":"16536:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16529:3:25"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16322:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16330:3:25","type":""}],"src":"16188:366:25"},{"body":{"nodeType":"YulBlock","src":"16731:248:25","statements":[{"nodeType":"YulAssignment","src":"16741:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16753:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16764:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16749:3:25"},"nodeType":"YulFunctionCall","src":"16749:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16741:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16788:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16799:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16784:3:25"},"nodeType":"YulFunctionCall","src":"16784:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16807:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16813:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16803:3:25"},"nodeType":"YulFunctionCall","src":"16803:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16777:6:25"},"nodeType":"YulFunctionCall","src":"16777:47:25"},"nodeType":"YulExpressionStatement","src":"16777:47:25"},{"nodeType":"YulAssignment","src":"16833:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16967:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16841:124:25"},"nodeType":"YulFunctionCall","src":"16841:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16833:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16711:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16726:4:25","type":""}],"src":"16560:419:25"},{"body":{"nodeType":"YulBlock","src":"17091:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17113:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17121:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17109:3:25"},"nodeType":"YulFunctionCall","src":"17109:14:25"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"17125:34:25","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17102:6:25"},"nodeType":"YulFunctionCall","src":"17102:58:25"},"nodeType":"YulExpressionStatement","src":"17102:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17181:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17189:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17177:3:25"},"nodeType":"YulFunctionCall","src":"17177:15:25"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"17194:8:25","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17170:6:25"},"nodeType":"YulFunctionCall","src":"17170:33:25"},"nodeType":"YulExpressionStatement","src":"17170:33:25"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17083:6:25","type":""}],"src":"16985:225:25"},{"body":{"nodeType":"YulBlock","src":"17362:220:25","statements":[{"nodeType":"YulAssignment","src":"17372:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17438:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17443:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17379:58:25"},"nodeType":"YulFunctionCall","src":"17379:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17372:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17544:3:25"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"17455:88:25"},"nodeType":"YulFunctionCall","src":"17455:93:25"},"nodeType":"YulExpressionStatement","src":"17455:93:25"},{"nodeType":"YulAssignment","src":"17557:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17568:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17573:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17564:3:25"},"nodeType":"YulFunctionCall","src":"17564:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17557:3:25"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17350:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17358:3:25","type":""}],"src":"17216:366:25"},{"body":{"nodeType":"YulBlock","src":"17759:248:25","statements":[{"nodeType":"YulAssignment","src":"17769:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17792:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17777:3:25"},"nodeType":"YulFunctionCall","src":"17777:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17769:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17816:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17827:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17812:3:25"},"nodeType":"YulFunctionCall","src":"17812:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17835:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17841:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17831:3:25"},"nodeType":"YulFunctionCall","src":"17831:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17805:6:25"},"nodeType":"YulFunctionCall","src":"17805:47:25"},"nodeType":"YulExpressionStatement","src":"17805:47:25"},{"nodeType":"YulAssignment","src":"17861:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17995:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17869:124:25"},"nodeType":"YulFunctionCall","src":"17869:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17861:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17739:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17754:4:25","type":""}],"src":"17588:419:25"},{"body":{"nodeType":"YulBlock","src":"18127:34:25","statements":[{"nodeType":"YulAssignment","src":"18137:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"18152:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18137:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18099:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"18104:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18115:11:25","type":""}],"src":"18013:148:25"},{"body":{"nodeType":"YulBlock","src":"18273:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18295:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18303:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18291:3:25"},"nodeType":"YulFunctionCall","src":"18291:14:25"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"18307:25:25","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18284:6:25"},"nodeType":"YulFunctionCall","src":"18284:49:25"},"nodeType":"YulExpressionStatement","src":"18284:49:25"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18265:6:25","type":""}],"src":"18167:173:25"},{"body":{"nodeType":"YulBlock","src":"18510:238:25","statements":[{"nodeType":"YulAssignment","src":"18520:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18609:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18527:76:25"},"nodeType":"YulFunctionCall","src":"18527:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18520:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18710:3:25"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"18621:88:25"},"nodeType":"YulFunctionCall","src":"18621:93:25"},"nodeType":"YulExpressionStatement","src":"18621:93:25"},{"nodeType":"YulAssignment","src":"18723:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18734:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18739:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18730:3:25"},"nodeType":"YulFunctionCall","src":"18730:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18723:3:25"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18498:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18506:3:25","type":""}],"src":"18346:402:25"},{"body":{"nodeType":"YulBlock","src":"18864:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18874:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18921:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18888:32:25"},"nodeType":"YulFunctionCall","src":"18888:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18878:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18936:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19020:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"19025:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18943:76:25"},"nodeType":"YulFunctionCall","src":"18943:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18936:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19067:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"19074:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19063:3:25"},"nodeType":"YulFunctionCall","src":"19063:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"19081:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"19086:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"19041:21:25"},"nodeType":"YulFunctionCall","src":"19041:52:25"},"nodeType":"YulExpressionStatement","src":"19041:52:25"},{"nodeType":"YulAssignment","src":"19102:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19113:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"19118:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19109:3:25"},"nodeType":"YulFunctionCall","src":"19109:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19102:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18845:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18852:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18860:3:25","type":""}],"src":"18754:377:25"},{"body":{"nodeType":"YulBlock","src":"19243:61:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19265:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19273:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19261:3:25"},"nodeType":"YulFunctionCall","src":"19261:14:25"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"19277:19:25","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19254:6:25"},"nodeType":"YulFunctionCall","src":"19254:43:25"},"nodeType":"YulExpressionStatement","src":"19254:43:25"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19235:6:25","type":""}],"src":"19137:167:25"},{"body":{"nodeType":"YulBlock","src":"19474:238:25","statements":[{"nodeType":"YulAssignment","src":"19484:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19568:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19573:2:25","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19491:76:25"},"nodeType":"YulFunctionCall","src":"19491:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19484:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19674:3:25"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"19585:88:25"},"nodeType":"YulFunctionCall","src":"19585:93:25"},"nodeType":"YulExpressionStatement","src":"19585:93:25"},{"nodeType":"YulAssignment","src":"19687:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19698:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19703:2:25","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19694:3:25"},"nodeType":"YulFunctionCall","src":"19694:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19687:3:25"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19462:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19470:3:25","type":""}],"src":"19310:402:25"},{"body":{"nodeType":"YulBlock","src":"20104:581:25","statements":[{"nodeType":"YulAssignment","src":"20115:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20266:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20122:142:25"},"nodeType":"YulFunctionCall","src":"20122:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20115:3:25"}]},{"nodeType":"YulAssignment","src":"20280:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20369:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"20378:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20287:81:25"},"nodeType":"YulFunctionCall","src":"20287:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20280:3:25"}]},{"nodeType":"YulAssignment","src":"20392:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20543:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20399:142:25"},"nodeType":"YulFunctionCall","src":"20399:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20392:3:25"}]},{"nodeType":"YulAssignment","src":"20557:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20646:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"20655:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20564:81:25"},"nodeType":"YulFunctionCall","src":"20564:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20557:3:25"}]},{"nodeType":"YulAssignment","src":"20669:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"20676:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20669:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20075:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20081:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20089:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20100:3:25","type":""}],"src":"19718:967:25"},{"body":{"nodeType":"YulBlock","src":"20719:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20736:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20739:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20729:6:25"},"nodeType":"YulFunctionCall","src":"20729:88:25"},"nodeType":"YulExpressionStatement","src":"20729:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20833:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20836:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20826:6:25"},"nodeType":"YulFunctionCall","src":"20826:15:25"},"nodeType":"YulExpressionStatement","src":"20826:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20857:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20860:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20850:6:25"},"nodeType":"YulFunctionCall","src":"20850:15:25"},"nodeType":"YulExpressionStatement","src":"20850:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20691:180:25"},{"body":{"nodeType":"YulBlock","src":"20925:300:25","statements":[{"nodeType":"YulAssignment","src":"20935:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20958:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20940:17:25"},"nodeType":"YulFunctionCall","src":"20940:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20935:1:25"}]},{"nodeType":"YulAssignment","src":"20969:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20992:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20974:17:25"},"nodeType":"YulFunctionCall","src":"20974:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20969:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21167:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21169:16:25"},"nodeType":"YulFunctionCall","src":"21169:18:25"},"nodeType":"YulExpressionStatement","src":"21169:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21079:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21072:6:25"},"nodeType":"YulFunctionCall","src":"21072:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21065:6:25"},"nodeType":"YulFunctionCall","src":"21065:17:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21087:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21094:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"21162:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21090:3:25"},"nodeType":"YulFunctionCall","src":"21090:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21084:2:25"},"nodeType":"YulFunctionCall","src":"21084:81:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21061:3:25"},"nodeType":"YulFunctionCall","src":"21061:105:25"},"nodeType":"YulIf","src":"21058:131:25"},{"nodeType":"YulAssignment","src":"21199:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21214:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21217:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21210:3:25"},"nodeType":"YulFunctionCall","src":"21210:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21199:7:25"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20908:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"20911:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"20917:7:25","type":""}],"src":"20877:348:25"},{"body":{"nodeType":"YulBlock","src":"21259:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21276:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21279:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21269:6:25"},"nodeType":"YulFunctionCall","src":"21269:88:25"},"nodeType":"YulExpressionStatement","src":"21269:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21373:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21376:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21366:6:25"},"nodeType":"YulFunctionCall","src":"21366:15:25"},"nodeType":"YulExpressionStatement","src":"21366:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21397:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21400:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21390:6:25"},"nodeType":"YulFunctionCall","src":"21390:15:25"},"nodeType":"YulExpressionStatement","src":"21390:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"21231:180:25"},{"body":{"nodeType":"YulBlock","src":"21460:128:25","statements":[{"nodeType":"YulAssignment","src":"21470:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21497:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21479:17:25"},"nodeType":"YulFunctionCall","src":"21479:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21470:5:25"}]},{"body":{"nodeType":"YulBlock","src":"21531:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21533:16:25"},"nodeType":"YulFunctionCall","src":"21533:18:25"},"nodeType":"YulExpressionStatement","src":"21533:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21518:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21525:4:25","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21515:2:25"},"nodeType":"YulFunctionCall","src":"21515:15:25"},"nodeType":"YulIf","src":"21512:41:25"},{"nodeType":"YulAssignment","src":"21562:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21573:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21580:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21569:3:25"},"nodeType":"YulFunctionCall","src":"21569:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21562:3:25"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21446:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21456:3:25","type":""}],"src":"21417:171:25"},{"body":{"nodeType":"YulBlock","src":"21700:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21722:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"21730:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21718:3:25"},"nodeType":"YulFunctionCall","src":"21718:14:25"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"21734:34:25","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21711:6:25"},"nodeType":"YulFunctionCall","src":"21711:58:25"},"nodeType":"YulExpressionStatement","src":"21711:58:25"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21692:6:25","type":""}],"src":"21594:182:25"},{"body":{"nodeType":"YulBlock","src":"21928:220:25","statements":[{"nodeType":"YulAssignment","src":"21938:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22004:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22009:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21945:58:25"},"nodeType":"YulFunctionCall","src":"21945:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21938:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22110:3:25"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"22021:88:25"},"nodeType":"YulFunctionCall","src":"22021:93:25"},"nodeType":"YulExpressionStatement","src":"22021:93:25"},{"nodeType":"YulAssignment","src":"22123:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22134:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22139:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22130:3:25"},"nodeType":"YulFunctionCall","src":"22130:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22123:3:25"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21916:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21924:3:25","type":""}],"src":"21782:366:25"},{"body":{"nodeType":"YulBlock","src":"22325:248:25","statements":[{"nodeType":"YulAssignment","src":"22335:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22347:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22358:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22343:3:25"},"nodeType":"YulFunctionCall","src":"22343:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22335:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22382:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22393:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22378:3:25"},"nodeType":"YulFunctionCall","src":"22378:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22401:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22407:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22397:3:25"},"nodeType":"YulFunctionCall","src":"22397:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22371:6:25"},"nodeType":"YulFunctionCall","src":"22371:47:25"},"nodeType":"YulExpressionStatement","src":"22371:47:25"},{"nodeType":"YulAssignment","src":"22427:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22561:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22435:124:25"},"nodeType":"YulFunctionCall","src":"22435:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22427:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22305:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22320:4:25","type":""}],"src":"22154:419:25"},{"body":{"nodeType":"YulBlock","src":"22624:146:25","statements":[{"nodeType":"YulAssignment","src":"22634:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22657:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22639:17:25"},"nodeType":"YulFunctionCall","src":"22639:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22634:1:25"}]},{"nodeType":"YulAssignment","src":"22668:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22691:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22673:17:25"},"nodeType":"YulFunctionCall","src":"22673:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22668:1:25"}]},{"body":{"nodeType":"YulBlock","src":"22715:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22717:16:25"},"nodeType":"YulFunctionCall","src":"22717:18:25"},"nodeType":"YulExpressionStatement","src":"22717:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22709:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"22712:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22706:2:25"},"nodeType":"YulFunctionCall","src":"22706:8:25"},"nodeType":"YulIf","src":"22703:34:25"},{"nodeType":"YulAssignment","src":"22747:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22759:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"22762:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22755:3:25"},"nodeType":"YulFunctionCall","src":"22755:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22747:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22610:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"22613:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22619:4:25","type":""}],"src":"22579:191:25"},{"body":{"nodeType":"YulBlock","src":"22804:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22821:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22824:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22814:6:25"},"nodeType":"YulFunctionCall","src":"22814:88:25"},"nodeType":"YulExpressionStatement","src":"22814:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22918:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22921:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22911:6:25"},"nodeType":"YulFunctionCall","src":"22911:15:25"},"nodeType":"YulExpressionStatement","src":"22911:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22942:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22945:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22935:6:25"},"nodeType":"YulFunctionCall","src":"22935:15:25"},"nodeType":"YulExpressionStatement","src":"22935:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"22776:180:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d71461037f578063a9059cbb146103af578063ca15c873146103df578063d547741f1461040f578063dd62ed3e1461042b5761012c565b806370a08231146102b35780639010d07c146102e357806391d148541461031357806395d89b4114610343578063a217fddf146103615761012c565b8063248a9ca3116100f4578063248a9ca3146101fd5780632f2ff15d1461022d578063313ce5671461024957806336568abe1461026757806339509351146102835761012c565b806301ffc9a71461013157806306fdde0314610161578063095ea7b31461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61014b60048036038101906101469190611765565b61045b565b60405161015891906117ad565b60405180910390f35b6101696104d5565b6040516101769190611861565b60405180910390f35b61019960048036038101906101949190611917565b610567565b6040516101a691906117ad565b60405180910390f35b6101b761058a565b6040516101c49190611966565b60405180910390f35b6101e760048036038101906101e29190611981565b610594565b6040516101f491906117ad565b60405180910390f35b61021760048036038101906102129190611a0a565b6105c3565b6040516102249190611a46565b60405180910390f35b61024760048036038101906102429190611a61565b6105e2565b005b610251610603565b60405161025e9190611abd565b60405180910390f35b610281600480360381019061027c9190611a61565b61060c565b005b61029d60048036038101906102989190611917565b61068f565b6040516102aa91906117ad565b60405180910390f35b6102cd60048036038101906102c89190611ad8565b6106c6565b6040516102da9190611966565b60405180910390f35b6102fd60048036038101906102f89190611b05565b61070f565b60405161030a9190611b54565b60405180910390f35b61032d60048036038101906103289190611a61565b61073e565b60405161033a91906117ad565b60405180910390f35b61034b6107a8565b6040516103589190611861565b60405180910390f35b61036961083a565b6040516103769190611a46565b60405180910390f35b61039960048036038101906103949190611917565b610841565b6040516103a691906117ad565b60405180910390f35b6103c960048036038101906103c49190611917565b6108b8565b6040516103d691906117ad565b60405180910390f35b6103f960048036038101906103f49190611a0a565b6108db565b6040516104069190611966565b60405180910390f35b61042960048036038101906104249190611a61565b6108ff565b005b61044560048036038101906104409190611b6f565b610920565b6040516104529190611966565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104ce57506104cd826109a7565b5b9050919050565b6060600580546104e490611bde565b80601f016020809104026020016040519081016040528092919081815260200182805461051090611bde565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b600080610572610a21565b905061057f818585610a29565b600191505092915050565b6000600454905090565b60008061059f610a21565b90506105ac858285610bf2565b6105b7858585610c7e565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6105eb826105c3565b6105f481610ef7565b6105fe8383610f0b565b505050565b60006012905090565b610614610a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067890611c81565b60405180910390fd5b61068b8282610f3f565b5050565b60008061069a610a21565b90506106bb8185856106ac8589610920565b6106b69190611cd0565b610a29565b600191505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006107368260016000868152602001908152602001600020610f7390919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600680546107b790611bde565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390611bde565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b5050505050905090565b6000801b81565b60008061084c610a21565b9050600061085a8286610920565b90508381101561089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089690611d98565b60405180910390fd5b6108ac8286868403610a29565b60019250505092915050565b6000806108c3610a21565b90506108d0818585610c7e565b600191505092915050565b60006108f860016000848152602001908152602001600020610f8d565b9050919050565b610908826105c3565b61091181610ef7565b61091b8383610f3f565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a1a5750610a1982610fa2565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90611e2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe90611ebc565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610be59190611966565b60405180910390a3505050565b6000610bfe8484610920565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c785781811015610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190611f28565b60405180910390fd5b610c778484848403610a29565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce490611fba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d539061204c565b60405180910390fd5b610d6783838361100c565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de5906120de565b60405180910390fd5b818103600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ede9190611966565b60405180910390a3610ef1848484611011565b50505050565b610f0881610f03610a21565b611016565b50565b610f15828261109b565b610f3a816001600085815260200190815260200160002061117b90919063ffffffff16565b505050565b610f4982826111ab565b610f6e816001600085815260200190815260200160002061128c90919063ffffffff16565b505050565b6000610f8283600001836112bc565b60001c905092915050565b6000610f9b826000016112e7565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b505050565b611020828261073e565b6110975761102d816112f8565b61103b8360001c6020611325565b60405160200161104c9291906121d2565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108e9190611861565b60405180910390fd5b5050565b6110a5828261073e565b61117757600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061111c610a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006111a3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611561565b905092915050565b6111b5828261073e565b1561128857600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061122d610a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006112b4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6115d1565b905092915050565b60008260000182815481106112d4576112d361220c565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b606061131e8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611325565b9050919050565b606060006002836002611338919061223b565b6113429190611cd0565b67ffffffffffffffff81111561135b5761135a612295565b5b6040519080825280601f01601f19166020018201604052801561138d5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106113c5576113c461220c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106114295761142861220c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611469919061223b565b6114739190611cd0565b90505b6001811115611513577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106114b5576114b461220c565b5b1a60f81b8282815181106114cc576114cb61220c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061150c906122c4565b9050611476565b5060008414611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90612339565b60405180910390fd5b8091505092915050565b600061156d83836116e5565b6115c65782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506115cb565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146116d95760006001826116039190612359565b905060006001866000018054905061161b9190612359565b905081811461168a57600086600001828154811061163c5761163b61220c565b5b90600052602060002001549050808760000184815481106116605761165f61220c565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061169e5761169d61238d565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506116df565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117428161170d565b811461174d57600080fd5b50565b60008135905061175f81611739565b92915050565b60006020828403121561177b5761177a611708565b5b600061178984828501611750565b91505092915050565b60008115159050919050565b6117a781611792565b82525050565b60006020820190506117c2600083018461179e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118025780820151818401526020810190506117e7565b83811115611811576000848401525b50505050565b6000601f19601f8301169050919050565b6000611833826117c8565b61183d81856117d3565b935061184d8185602086016117e4565b61185681611817565b840191505092915050565b6000602082019050818103600083015261187b8184611828565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118ae82611883565b9050919050565b6118be816118a3565b81146118c957600080fd5b50565b6000813590506118db816118b5565b92915050565b6000819050919050565b6118f4816118e1565b81146118ff57600080fd5b50565b600081359050611911816118eb565b92915050565b6000806040838503121561192e5761192d611708565b5b600061193c858286016118cc565b925050602061194d85828601611902565b9150509250929050565b611960816118e1565b82525050565b600060208201905061197b6000830184611957565b92915050565b60008060006060848603121561199a57611999611708565b5b60006119a8868287016118cc565b93505060206119b9868287016118cc565b92505060406119ca86828701611902565b9150509250925092565b6000819050919050565b6119e7816119d4565b81146119f257600080fd5b50565b600081359050611a04816119de565b92915050565b600060208284031215611a2057611a1f611708565b5b6000611a2e848285016119f5565b91505092915050565b611a40816119d4565b82525050565b6000602082019050611a5b6000830184611a37565b92915050565b60008060408385031215611a7857611a77611708565b5b6000611a86858286016119f5565b9250506020611a97858286016118cc565b9150509250929050565b600060ff82169050919050565b611ab781611aa1565b82525050565b6000602082019050611ad26000830184611aae565b92915050565b600060208284031215611aee57611aed611708565b5b6000611afc848285016118cc565b91505092915050565b60008060408385031215611b1c57611b1b611708565b5b6000611b2a858286016119f5565b9250506020611b3b85828601611902565b9150509250929050565b611b4e816118a3565b82525050565b6000602082019050611b696000830184611b45565b92915050565b60008060408385031215611b8657611b85611708565b5b6000611b94858286016118cc565b9250506020611ba5858286016118cc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bf657607f821691505b602082108103611c0957611c08611baf565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611c6b602f836117d3565b9150611c7682611c0f565b604082019050919050565b60006020820190508181036000830152611c9a81611c5e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cdb826118e1565b9150611ce6836118e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1b57611d1a611ca1565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611d826025836117d3565b9150611d8d82611d26565b604082019050919050565b60006020820190508181036000830152611db181611d75565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611e146024836117d3565b9150611e1f82611db8565b604082019050919050565b60006020820190508181036000830152611e4381611e07565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ea66022836117d3565b9150611eb182611e4a565b604082019050919050565b60006020820190508181036000830152611ed581611e99565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611f12601d836117d3565b9150611f1d82611edc565b602082019050919050565b60006020820190508181036000830152611f4181611f05565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611fa46025836117d3565b9150611faf82611f48565b604082019050919050565b60006020820190508181036000830152611fd381611f97565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006120366023836117d3565b915061204182611fda565b604082019050919050565b6000602082019050818103600083015261206581612029565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006120c86026836117d3565b91506120d38261206c565b604082019050919050565b600060208201905081810360008301526120f7816120bb565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061213f6017836120fe565b915061214a82612109565b601782019050919050565b6000612160826117c8565b61216a81856120fe565b935061217a8185602086016117e4565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006121bc6011836120fe565b91506121c782612186565b601182019050919050565b60006121dd82612132565b91506121e98285612155565b91506121f4826121af565b91506122008284612155565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612246826118e1565b9150612251836118e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561228a57612289611ca1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006122cf826118e1565b9150600082036122e2576122e1611ca1565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006123236020836117d3565b915061232e826122ed565b602082019050919050565b6000602082019050818103600083015261235281612316565b9050919050565b6000612364826118e1565b915061236f836118e1565b92508282101561238257612381611ca1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207f6474ba2ac4a167a34258c838aa3dc374da8e4749c9a0bfa30f19864e6f265464736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x42B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x361 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x283 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4CE JUMPI POP PUSH2 0x4CD DUP3 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x572 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x57F DUP2 DUP6 DUP6 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AC DUP6 DUP3 DUP6 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x5B7 DUP6 DUP6 DUP6 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x5FE DUP4 DUP4 PUSH2 0xF0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x614 PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x678 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68B DUP3 DUP3 PUSH2 0xF3F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x69A PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BB DUP2 DUP6 DUP6 PUSH2 0x6AC DUP6 DUP10 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF73 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x805 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x830 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x813 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x84C PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85A DUP3 DUP7 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C3 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D0 DUP2 DUP6 DUP6 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x908 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x91B DUP4 DUP4 PUSH2 0xF3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH2 0xA19 DUP3 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP1 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP5 DUP5 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC77 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP1 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD67 DUP4 DUP4 DUP4 PUSH2 0x100C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEF1 DUP5 DUP5 DUP5 PUSH2 0x1011 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0xF03 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF15 DUP3 DUP3 PUSH2 0x109B JUMP JUMPDEST PUSH2 0xF3A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x117B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF49 DUP3 DUP3 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xF6E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x128C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9B DUP3 PUSH1 0x0 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1020 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1097 JUMPI PUSH2 0x102D DUP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x103B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x104C SWAP3 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10A5 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x111C PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B5 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x122D PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x131E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1338 SWAP2 SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH2 0x135A PUSH2 0x2295 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13C5 JUMPI PUSH2 0x13C4 PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1429 JUMPI PUSH2 0x1428 PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1513 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x14B5 JUMPI PUSH2 0x14B4 PUSH2 0x220C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x220C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x150C SWAP1 PUSH2 0x22C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1476 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156D DUP4 DUP4 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x15C6 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x16D9 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x168A JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x238D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x170D JUMP JUMPDEST DUP2 EQ PUSH2 0x174D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175F DUP2 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177B JUMPI PUSH2 0x177A PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1789 DUP5 DUP3 DUP6 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1802 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17E7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1811 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1833 DUP3 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x183D DUP2 DUP6 PUSH2 0x17D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x184D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1856 DUP2 PUSH2 0x1817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x187B DUP2 DUP5 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AE DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DB DUP2 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x18E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1911 DUP2 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194D DUP6 DUP3 DUP7 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1960 DUP2 PUSH2 0x18E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH2 0x1999 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A8 DUP7 DUP3 DUP8 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B9 DUP7 DUP3 DUP8 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19CA DUP7 DUP3 DUP8 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E7 DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A04 DUP2 PUSH2 0x19DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2E DUP5 DUP3 DUP6 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A78 JUMPI PUSH2 0x1A77 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A86 DUP6 DUP3 DUP7 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A97 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFC DUP5 DUP3 DUP6 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x1902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4E DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B86 JUMPI PUSH2 0x1B85 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B94 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA5 DUP6 DUP3 DUP7 ADD PUSH2 0x18CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BF6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1BAF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6B PUSH1 0x2F DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9A DUP2 PUSH2 0x1C5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CDB DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE6 DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D82 PUSH1 0x25 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP3 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB1 DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E14 PUSH1 0x24 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1F DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E43 DUP2 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA6 PUSH1 0x22 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB1 DUP3 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED5 DUP2 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F12 PUSH1 0x1D DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1D DUP3 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F41 DUP2 PUSH2 0x1F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA4 PUSH1 0x25 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAF DUP3 PUSH2 0x1F48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD3 DUP2 PUSH2 0x1F97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2036 PUSH1 0x23 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2041 DUP3 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2065 DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C8 PUSH1 0x26 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D3 DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F7 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213F PUSH1 0x17 DUP4 PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP PUSH2 0x214A DUP3 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP3 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x216A DUP2 DUP6 PUSH2 0x20FE JUMP JUMPDEST SWAP4 POP PUSH2 0x217A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BC PUSH1 0x11 DUP4 PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP PUSH2 0x21C7 DUP3 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD DUP3 PUSH2 0x2132 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E9 DUP3 DUP6 PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F4 DUP3 PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2246 DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2251 DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22CF DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 PUSH1 0x20 DUP4 PUSH2 0x17D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x232E DUP3 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2352 DUP2 PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2364 DUP3 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x236F DUP4 PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x6474BA2AC4A167A34258C838AA3DC374DA8E4749C9A0BFA30F19864E6F265464 PUSH20 0x6F6C634300080D00330000000000000000000000 ","sourceMap":"188:147:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3104:91:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5854:234:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1431:151:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1750:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;634:212:3;719:4;757:42;742:57;;;:11;:57;;;;:97;;;;803:36;827:11;803:23;:36::i;:::-;742:97;735:104;;634:212;;;:::o;2158:98:8:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;4504:129:2:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3104:91:8:-;3162:5;3186:2;3179:9;;3104:91;:::o;6038:214:2:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:8:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1431:151:3:-;1521:7;1547:28;1569:5;1547:12;:18;1560:4;1547:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1540:35;;1431:151;;;;:::o;3021:145:2:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2369:102:8:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;2153:49:2:-;2198:4;2153:49;;;:::o;6575:427:8:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;1750:140:3:-;1830:7;1856:27;:12;:18;1869:4;1856:18;;;;;;;;;;;:25;:27::i;:::-;1849:34;;1750:140;;;:::o;5354:147:2:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;3987:149:8:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2732:202:2:-;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10457:340:8:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3460:103:2:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;1978:166:3:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;1978:166;;:::o;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:34;2389:7;2363:12;:18;2376:4;2363:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2233:171;;:::o;9563:156:21:-;9637:7;9687:22;9691:3;:10;;9703:5;9687:3;:22::i;:::-;9679:31;;9656:56;;9563:156;;;;:::o;9106:115::-;9169:7;9195:19;9203:3;:10;;9195:7;:19::i;:::-;9188:26;;9106:115;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;12073:91:8:-;;;;:::o;12752:90::-;;;;:::o;3844:479:2:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;8305:150:21:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;7991:234:2:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;8623:156:21:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4519:7;4545:3;:11;;:18;;;;4538:25;;4463:107;;;:::o;2407:149:15:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;2214:404:21:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4255:127::-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;88:117:25:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:126::-;2945:7;2985:42;2978:5;2974:54;2963:65;;2908:126;;;:::o;3040:96::-;3077:7;3106:24;3124:5;3106:24;:::i;:::-;3095:35;;3040:96;;;:::o;3142:122::-;3215:24;3233:5;3215:24;:::i;:::-;3208:5;3205:35;3195:63;;3254:1;3251;3244:12;3195:63;3142:122;:::o;3270:139::-;3316:5;3354:6;3341:20;3332:29;;3370:33;3397:5;3370:33;:::i;:::-;3270:139;;;;:::o;3415:77::-;3452:7;3481:5;3470:16;;3415:77;;;:::o;3498:122::-;3571:24;3589:5;3571:24;:::i;:::-;3564:5;3561:35;3551:63;;3610:1;3607;3600:12;3551:63;3498:122;:::o;3626:139::-;3672:5;3710:6;3697:20;3688:29;;3726:33;3753:5;3726:33;:::i;:::-;3626:139;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:118::-;4338:24;4356:5;4338:24;:::i;:::-;4333:3;4326:37;4251:118;;:::o;4375:222::-;4468:4;4506:2;4495:9;4491:18;4483:26;;4519:71;4587:1;4576:9;4572:17;4563:6;4519:71;:::i;:::-;4375:222;;;;:::o;4603:619::-;4680:6;4688;4696;4745:2;4733:9;4724:7;4720:23;4716:32;4713:119;;;4751:79;;:::i;:::-;4713:119;4871:1;4896:53;4941:7;4932:6;4921:9;4917:22;4896:53;:::i;:::-;4886:63;;4842:117;4998:2;5024:53;5069:7;5060:6;5049:9;5045:22;5024:53;:::i;:::-;5014:63;;4969:118;5126:2;5152:53;5197:7;5188:6;5177:9;5173:22;5152:53;:::i;:::-;5142:63;;5097:118;4603:619;;;;;:::o;5228:77::-;5265:7;5294:5;5283:16;;5228:77;;;:::o;5311:122::-;5384:24;5402:5;5384:24;:::i;:::-;5377:5;5374:35;5364:63;;5423:1;5420;5413:12;5364:63;5311:122;:::o;5439:139::-;5485:5;5523:6;5510:20;5501:29;;5539:33;5566:5;5539:33;:::i;:::-;5439:139;;;;:::o;5584:329::-;5643:6;5692:2;5680:9;5671:7;5667:23;5663:32;5660:119;;;5698:79;;:::i;:::-;5660:119;5818:1;5843:53;5888:7;5879:6;5868:9;5864:22;5843:53;:::i;:::-;5833:63;;5789:117;5584:329;;;;:::o;5919:118::-;6006:24;6024:5;6006:24;:::i;:::-;6001:3;5994:37;5919:118;;:::o;6043:222::-;6136:4;6174:2;6163:9;6159:18;6151:26;;6187:71;6255:1;6244:9;6240:17;6231:6;6187:71;:::i;:::-;6043:222;;;;:::o;6271:474::-;6339:6;6347;6396:2;6384:9;6375:7;6371:23;6367:32;6364:119;;;6402:79;;:::i;:::-;6364:119;6522:1;6547:53;6592:7;6583:6;6572:9;6568:22;6547:53;:::i;:::-;6537:63;;6493:117;6649:2;6675:53;6720:7;6711:6;6700:9;6696:22;6675:53;:::i;:::-;6665:63;;6620:118;6271:474;;;;;:::o;6751:86::-;6786:7;6826:4;6819:5;6815:16;6804:27;;6751:86;;;:::o;6843:112::-;6926:22;6942:5;6926:22;:::i;:::-;6921:3;6914:35;6843:112;;:::o;6961:214::-;7050:4;7088:2;7077:9;7073:18;7065:26;;7101:67;7165:1;7154:9;7150:17;7141:6;7101:67;:::i;:::-;6961:214;;;;:::o;7181:329::-;7240:6;7289:2;7277:9;7268:7;7264:23;7260:32;7257:119;;;7295:79;;:::i;:::-;7257:119;7415:1;7440:53;7485:7;7476:6;7465:9;7461:22;7440:53;:::i;:::-;7430:63;;7386:117;7181:329;;;;:::o;7516:474::-;7584:6;7592;7641:2;7629:9;7620:7;7616:23;7612:32;7609:119;;;7647:79;;:::i;:::-;7609:119;7767:1;7792:53;7837:7;7828:6;7817:9;7813:22;7792:53;:::i;:::-;7782:63;;7738:117;7894:2;7920:53;7965:7;7956:6;7945:9;7941:22;7920:53;:::i;:::-;7910:63;;7865:118;7516:474;;;;;:::o;7996:118::-;8083:24;8101:5;8083:24;:::i;:::-;8078:3;8071:37;7996:118;;:::o;8120:222::-;8213:4;8251:2;8240:9;8236:18;8228:26;;8264:71;8332:1;8321:9;8317:17;8308:6;8264:71;:::i;:::-;8120:222;;;;:::o;8348:474::-;8416:6;8424;8473:2;8461:9;8452:7;8448:23;8444:32;8441:119;;;8479:79;;:::i;:::-;8441:119;8599:1;8624:53;8669:7;8660:6;8649:9;8645:22;8624:53;:::i;:::-;8614:63;;8570:117;8726:2;8752:53;8797:7;8788:6;8777:9;8773:22;8752:53;:::i;:::-;8742:63;;8697:118;8348:474;;;;;:::o;8828:180::-;8876:77;8873:1;8866:88;8973:4;8970:1;8963:15;8997:4;8994:1;8987:15;9014:320;9058:6;9095:1;9089:4;9085:12;9075:22;;9142:1;9136:4;9132:12;9163:18;9153:81;;9219:4;9211:6;9207:17;9197:27;;9153:81;9281:2;9273:6;9270:14;9250:18;9247:38;9244:84;;9300:18;;:::i;:::-;9244:84;9065:269;9014:320;;;:::o;9340:234::-;9480:34;9476:1;9468:6;9464:14;9457:58;9549:17;9544:2;9536:6;9532:15;9525:42;9340:234;:::o;9580:366::-;9722:3;9743:67;9807:2;9802:3;9743:67;:::i;:::-;9736:74;;9819:93;9908:3;9819:93;:::i;:::-;9937:2;9932:3;9928:12;9921:19;;9580:366;;;:::o;9952:419::-;10118:4;10156:2;10145:9;10141:18;10133:26;;10205:9;10199:4;10195:20;10191:1;10180:9;10176:17;10169:47;10233:131;10359:4;10233:131;:::i;:::-;10225:139;;9952:419;;;:::o;10377:180::-;10425:77;10422:1;10415:88;10522:4;10519:1;10512:15;10546:4;10543:1;10536:15;10563:305;10603:3;10622:20;10640:1;10622:20;:::i;:::-;10617:25;;10656:20;10674:1;10656:20;:::i;:::-;10651:25;;10810:1;10742:66;10738:74;10735:1;10732:81;10729:107;;;10816:18;;:::i;:::-;10729:107;10860:1;10857;10853:9;10846:16;;10563:305;;;;:::o;10874:224::-;11014:34;11010:1;11002:6;10998:14;10991:58;11083:7;11078:2;11070:6;11066:15;11059:32;10874:224;:::o;11104:366::-;11246:3;11267:67;11331:2;11326:3;11267:67;:::i;:::-;11260:74;;11343:93;11432:3;11343:93;:::i;:::-;11461:2;11456:3;11452:12;11445:19;;11104:366;;;:::o;11476:419::-;11642:4;11680:2;11669:9;11665:18;11657:26;;11729:9;11723:4;11719:20;11715:1;11704:9;11700:17;11693:47;11757:131;11883:4;11757:131;:::i;:::-;11749:139;;11476:419;;;:::o;11901:223::-;12041:34;12037:1;12029:6;12025:14;12018:58;12110:6;12105:2;12097:6;12093:15;12086:31;11901:223;:::o;12130:366::-;12272:3;12293:67;12357:2;12352:3;12293:67;:::i;:::-;12286:74;;12369:93;12458:3;12369:93;:::i;:::-;12487:2;12482:3;12478:12;12471:19;;12130:366;;;:::o;12502:419::-;12668:4;12706:2;12695:9;12691:18;12683:26;;12755:9;12749:4;12745:20;12741:1;12730:9;12726:17;12719:47;12783:131;12909:4;12783:131;:::i;:::-;12775:139;;12502:419;;;:::o;12927:221::-;13067:34;13063:1;13055:6;13051:14;13044:58;13136:4;13131:2;13123:6;13119:15;13112:29;12927:221;:::o;13154:366::-;13296:3;13317:67;13381:2;13376:3;13317:67;:::i;:::-;13310:74;;13393:93;13482:3;13393:93;:::i;:::-;13511:2;13506:3;13502:12;13495:19;;13154:366;;;:::o;13526:419::-;13692:4;13730:2;13719:9;13715:18;13707:26;;13779:9;13773:4;13769:20;13765:1;13754:9;13750:17;13743:47;13807:131;13933:4;13807:131;:::i;:::-;13799:139;;13526:419;;;:::o;13951:179::-;14091:31;14087:1;14079:6;14075:14;14068:55;13951:179;:::o;14136:366::-;14278:3;14299:67;14363:2;14358:3;14299:67;:::i;:::-;14292:74;;14375:93;14464:3;14375:93;:::i;:::-;14493:2;14488:3;14484:12;14477:19;;14136:366;;;:::o;14508:419::-;14674:4;14712:2;14701:9;14697:18;14689:26;;14761:9;14755:4;14751:20;14747:1;14736:9;14732:17;14725:47;14789:131;14915:4;14789:131;:::i;:::-;14781:139;;14508:419;;;:::o;14933:224::-;15073:34;15069:1;15061:6;15057:14;15050:58;15142:7;15137:2;15129:6;15125:15;15118:32;14933:224;:::o;15163:366::-;15305:3;15326:67;15390:2;15385:3;15326:67;:::i;:::-;15319:74;;15402:93;15491:3;15402:93;:::i;:::-;15520:2;15515:3;15511:12;15504:19;;15163:366;;;:::o;15535:419::-;15701:4;15739:2;15728:9;15724:18;15716:26;;15788:9;15782:4;15778:20;15774:1;15763:9;15759:17;15752:47;15816:131;15942:4;15816:131;:::i;:::-;15808:139;;15535:419;;;:::o;15960:222::-;16100:34;16096:1;16088:6;16084:14;16077:58;16169:5;16164:2;16156:6;16152:15;16145:30;15960:222;:::o;16188:366::-;16330:3;16351:67;16415:2;16410:3;16351:67;:::i;:::-;16344:74;;16427:93;16516:3;16427:93;:::i;:::-;16545:2;16540:3;16536:12;16529:19;;16188:366;;;:::o;16560:419::-;16726:4;16764:2;16753:9;16749:18;16741:26;;16813:9;16807:4;16803:20;16799:1;16788:9;16784:17;16777:47;16841:131;16967:4;16841:131;:::i;:::-;16833:139;;16560:419;;;:::o;16985:225::-;17125:34;17121:1;17113:6;17109:14;17102:58;17194:8;17189:2;17181:6;17177:15;17170:33;16985:225;:::o;17216:366::-;17358:3;17379:67;17443:2;17438:3;17379:67;:::i;:::-;17372:74;;17455:93;17544:3;17455:93;:::i;:::-;17573:2;17568:3;17564:12;17557:19;;17216:366;;;:::o;17588:419::-;17754:4;17792:2;17781:9;17777:18;17769:26;;17841:9;17835:4;17831:20;17827:1;17816:9;17812:17;17805:47;17869:131;17995:4;17869:131;:::i;:::-;17861:139;;17588:419;;;:::o;18013:148::-;18115:11;18152:3;18137:18;;18013:148;;;;:::o;18167:173::-;18307:25;18303:1;18295:6;18291:14;18284:49;18167:173;:::o;18346:402::-;18506:3;18527:85;18609:2;18604:3;18527:85;:::i;:::-;18520:92;;18621:93;18710:3;18621:93;:::i;:::-;18739:2;18734:3;18730:12;18723:19;;18346:402;;;:::o;18754:377::-;18860:3;18888:39;18921:5;18888:39;:::i;:::-;18943:89;19025:6;19020:3;18943:89;:::i;:::-;18936:96;;19041:52;19086:6;19081:3;19074:4;19067:5;19063:16;19041:52;:::i;:::-;19118:6;19113:3;19109:16;19102:23;;18864:267;18754:377;;;;:::o;19137:167::-;19277:19;19273:1;19265:6;19261:14;19254:43;19137:167;:::o;19310:402::-;19470:3;19491:85;19573:2;19568:3;19491:85;:::i;:::-;19484:92;;19585:93;19674:3;19585:93;:::i;:::-;19703:2;19698:3;19694:12;19687:19;;19310:402;;;:::o;19718:967::-;20100:3;20122:148;20266:3;20122:148;:::i;:::-;20115:155;;20287:95;20378:3;20369:6;20287:95;:::i;:::-;20280:102;;20399:148;20543:3;20399:148;:::i;:::-;20392:155;;20564:95;20655:3;20646:6;20564:95;:::i;:::-;20557:102;;20676:3;20669:10;;19718:967;;;;;:::o;20691:180::-;20739:77;20736:1;20729:88;20836:4;20833:1;20826:15;20860:4;20857:1;20850:15;20877:348;20917:7;20940:20;20958:1;20940:20;:::i;:::-;20935:25;;20974:20;20992:1;20974:20;:::i;:::-;20969:25;;21162:1;21094:66;21090:74;21087:1;21084:81;21079:1;21072:9;21065:17;21061:105;21058:131;;;21169:18;;:::i;:::-;21058:131;21217:1;21214;21210:9;21199:20;;20877:348;;;;:::o;21231:180::-;21279:77;21276:1;21269:88;21376:4;21373:1;21366:15;21400:4;21397:1;21390:15;21417:171;21456:3;21479:24;21497:5;21479:24;:::i;:::-;21470:33;;21525:4;21518:5;21515:15;21512:41;;21533:18;;:::i;:::-;21512:41;21580:1;21573:5;21569:13;21562:20;;21417:171;;;:::o;21594:182::-;21734:34;21730:1;21722:6;21718:14;21711:58;21594:182;:::o;21782:366::-;21924:3;21945:67;22009:2;22004:3;21945:67;:::i;:::-;21938:74;;22021:93;22110:3;22021:93;:::i;:::-;22139:2;22134:3;22130:12;22123:19;;21782:366;;;:::o;22154:419::-;22320:4;22358:2;22347:9;22343:18;22335:26;;22407:9;22401:4;22397:20;22393:1;22382:9;22378:17;22371:47;22435:131;22561:4;22435:131;:::i;:::-;22427:139;;22154:419;;;:::o;22579:191::-;22619:4;22639:20;22657:1;22639:20;:::i;:::-;22634:25;;22673:20;22691:1;22673:20;:::i;:::-;22668:25;;22712:1;22709;22706:8;22703:34;;;22717:18;;:::i;:::-;22703:34;22762:1;22759;22755:9;22747:17;;22579:191;;;;:::o;22776:180::-;22824:77;22821:1;22814:88;22921:4;22918:1;22911:15;22945:4;22942:1;22935:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DemoToken.sol\":\"DemoToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/DemoToken.sol\":{\"keccak256\":\"0xaf09c7ec50b64069094cc116dca9acac903240d304b5d61926d491681820a3ce\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80026a2b21ef7aa8ba7fa9253240b4ca6849c67f251e9abbf6daa7d5b0112ba6\",\"dweb:/ipfs/QmRmsyYms5JbnyjRCi4w3y7fM8vwkkU3FJvwAtYt1venSt\"]}},\"version\":1}"}},"contracts/HelpfulInterface.sol":{"HelpfulInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"positionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oi","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"debt","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isLong","type":"bool"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"Build","type":"event"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"leverage","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"},{"internalType":"uint256","name":"priceLimit","type":"uint256"}],"name":"build","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"notional","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"idx","type":"uint256"}],"name":"params","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","build(uint256,uint256,bool,uint256)":"59968288","factory()":"c45a0155","notional(address,address,uint256)":"c18f32f6","params(uint256)":"9d2f053c","transfer(address,uint256)":"a9059cbb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oi\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Build\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"}],\"name\":\"build\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"notional\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HelpfulInterface.sol\":\"HelpfulInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HelpfulInterface.sol\":{\"keccak256\":\"0x7a7e9c488d89f30e8cb88569caae565b35aeab31ec639612bc90b84ccec87738\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://90a577a17b19a833481badf75995bc23625aa67ccb3b677e9d0c39b161cdb204\",\"dweb:/ipfs/QmR6Ayp9kB9z9dKh5yDyf8xRVVfSVfdYnbxxDn3QLYHhFh\"]}},\"version\":1}"}}}}}